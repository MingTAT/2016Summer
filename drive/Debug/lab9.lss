
lab9.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a8  00800100  00001f7c  00002010  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001f7c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000069  008001a8  008001a8  000020b8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000020b8  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000001b8  00000000  00000000  00002114  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000019a2  00000000  00000000  000022cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006d4  00000000  00000000  00003c6e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000e84  00000000  00000000  00004342  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000580  00000000  00000000  000051c8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000901  00000000  00000000  00005748  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001297  00000000  00000000  00006049  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000178  00000000  00000000  000072e0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	19 c1       	rjmp	.+562    	; 0x234 <__ctors_end>
       2:	00 00       	nop
       4:	35 c1       	rjmp	.+618    	; 0x270 <__bad_interrupt>
       6:	00 00       	nop
       8:	33 c1       	rjmp	.+614    	; 0x270 <__bad_interrupt>
       a:	00 00       	nop
       c:	31 c1       	rjmp	.+610    	; 0x270 <__bad_interrupt>
       e:	00 00       	nop
      10:	2f c1       	rjmp	.+606    	; 0x270 <__bad_interrupt>
      12:	00 00       	nop
      14:	2d c1       	rjmp	.+602    	; 0x270 <__bad_interrupt>
      16:	00 00       	nop
      18:	2b c1       	rjmp	.+598    	; 0x270 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	29 c1       	rjmp	.+594    	; 0x270 <__bad_interrupt>
      1e:	00 00       	nop
      20:	27 c1       	rjmp	.+590    	; 0x270 <__bad_interrupt>
      22:	00 00       	nop
      24:	c6 c4       	rjmp	.+2444   	; 0x9b2 <__vector_9>
      26:	00 00       	nop
      28:	23 c1       	rjmp	.+582    	; 0x270 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	39 c1       	rjmp	.+626    	; 0x2a0 <__vector_11>
      2e:	00 00       	nop
      30:	1f c1       	rjmp	.+574    	; 0x270 <__bad_interrupt>
      32:	00 00       	nop
      34:	1d c1       	rjmp	.+570    	; 0x270 <__bad_interrupt>
      36:	00 00       	nop
      38:	1c c1       	rjmp	.+568    	; 0x272 <__vector_14>
      3a:	00 00       	nop
      3c:	19 c1       	rjmp	.+562    	; 0x270 <__bad_interrupt>
      3e:	00 00       	nop
      40:	17 c1       	rjmp	.+558    	; 0x270 <__bad_interrupt>
      42:	00 00       	nop
      44:	15 c1       	rjmp	.+554    	; 0x270 <__bad_interrupt>
      46:	00 00       	nop
      48:	13 c1       	rjmp	.+550    	; 0x270 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	11 c1       	rjmp	.+546    	; 0x270 <__bad_interrupt>
      4e:	00 00       	nop
      50:	0f c1       	rjmp	.+542    	; 0x270 <__bad_interrupt>
      52:	00 00       	nop
      54:	0d c1       	rjmp	.+538    	; 0x270 <__bad_interrupt>
      56:	00 00       	nop
      58:	0b c1       	rjmp	.+534    	; 0x270 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	09 c1       	rjmp	.+530    	; 0x270 <__bad_interrupt>
      5e:	00 00       	nop
      60:	07 c1       	rjmp	.+526    	; 0x270 <__bad_interrupt>
      62:	00 00       	nop
      64:	05 c1       	rjmp	.+522    	; 0x270 <__bad_interrupt>
      66:	00 00       	nop
      68:	03 c1       	rjmp	.+518    	; 0x270 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	01 c1       	rjmp	.+514    	; 0x270 <__bad_interrupt>
      6e:	00 00       	nop
      70:	ff c0       	rjmp	.+510    	; 0x270 <__bad_interrupt>
      72:	00 00       	nop
      74:	fd c0       	rjmp	.+506    	; 0x270 <__bad_interrupt>
      76:	00 00       	nop
      78:	fb c0       	rjmp	.+502    	; 0x270 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	f9 c0       	rjmp	.+498    	; 0x270 <__bad_interrupt>
      7e:	00 00       	nop
      80:	f7 c0       	rjmp	.+494    	; 0x270 <__bad_interrupt>
      82:	00 00       	nop
      84:	f5 c0       	rjmp	.+490    	; 0x270 <__bad_interrupt>
      86:	00 00       	nop
      88:	f3 c0       	rjmp	.+486    	; 0x270 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	06 64       	ori	r16, 0x46	; 70
      8e:	ec 1b       	sub	r30, r28
      90:	3c 04       	cpc	r3, r12
      92:	bc 16       	cp	r11, r28
      94:	3e 3b       	cpi	r19, 0xBE	; 190
      96:	e5 b9       	out	0x05, r30	; 5
      98:	3c c9       	rjmp	.-3464   	; 0xfffff312 <__eeprom_end+0xff7ef312>
      9a:	3c 37       	cpi	r19, 0x7C	; 124
      9c:	c2 9e       	mul	r12, r18
      9e:	5a 3d       	cpi	r21, 0xDA	; 218
      a0:	66 04       	cpc	r6, r6
      a2:	98 08       	sbc	r9, r8
      a4:	3e ea       	ldi	r19, 0xAE	; 174
      a6:	69 aa       	std	Y+49, r6	; 0x31
      a8:	aa 3e       	cpi	r26, 0xEA	; 234
      aa:	00 00       	nop
      ac:	00 80       	ld	r0, Z
      ae:	3f 07       	cpc	r19, r31
      b0:	63 42       	sbci	r22, 0x23	; 35
      b2:	36 b7       	in	r19, 0x36	; 54
      b4:	9b d8       	rcall	.-3786   	; 0xfffff1ec <__eeprom_end+0xff7ef1ec>
      b6:	a7 1a       	sub	r10, r23
      b8:	39 68       	ori	r19, 0x89	; 137
      ba:	56 18       	sub	r5, r6
      bc:	ae ba       	out	0x1e, r10	; 30
      be:	ab 55       	subi	r26, 0x5B	; 91
      c0:	8c 1d       	adc	r24, r12
      c2:	3c b7       	in	r19, 0x3c	; 60
      c4:	cc 57       	subi	r28, 0x7C	; 124
      c6:	63 bd       	out	0x23, r22	; 35
      c8:	6d ed       	ldi	r22, 0xDD	; 221
      ca:	fd 75       	andi	r31, 0x5D	; 93
      cc:	3e f6       	brtc	.-114    	; 0x5c <__SREG__+0x1d>
      ce:	17 72       	andi	r17, 0x27	; 39
      d0:	31 bf       	out	0x31, r19	; 49
      d2:	00 00       	nop
      d4:	00 80       	ld	r0, Z
      d6:	3f 08       	sbc	r3, r15
      d8:	00 00       	nop
      da:	00 be       	out	0x30, r0	; 48
      dc:	92 24       	eor	r9, r2
      de:	49 12       	cpse	r4, r25
      e0:	3e ab       	std	Y+54, r19	; 0x36
      e2:	aa aa       	std	Y+50, r10	; 0x32
      e4:	2a be       	out	0x3a, r2	; 58
      e6:	cd cc       	rjmp	.-1638   	; 0xfffffa82 <__eeprom_end+0xff7efa82>
      e8:	cc 4c       	sbci	r28, 0xCC	; 204
      ea:	3e 00       	.word	0x003e	; ????
      ec:	00 00       	nop
      ee:	80 be       	out	0x30, r8	; 48
      f0:	ab aa       	std	Y+51, r10	; 0x33
      f2:	aa aa       	std	Y+50, r10	; 0x32
      f4:	3e 00       	.word	0x003e	; ????
      f6:	00 00       	nop
      f8:	00 bf       	out	0x30, r16	; 48
      fa:	00 00       	nop
      fc:	00 80       	ld	r0, Z
      fe:	3f 00       	.word	0x003f	; ????
     100:	00 00       	nop
     102:	00 00       	nop
     104:	08 41       	sbci	r16, 0x18	; 24
     106:	78 d3       	rcall	.+1776   	; 0x7f8 <lcd_init+0x40>
     108:	bb 43       	sbci	r27, 0x3B	; 59
     10a:	87 d1       	rcall	.+782    	; 0x41a <main+0x80>
     10c:	13 3d       	cpi	r17, 0xD3	; 211
     10e:	19 0e       	add	r1, r25
     110:	3c c3       	rjmp	.+1656   	; 0x78a <lcd_command+0xc>
     112:	bd 42       	sbci	r27, 0x2D	; 45
     114:	82 ad       	ldd	r24, Z+58	; 0x3a
     116:	2b 3e       	cpi	r18, 0xEB	; 235
     118:	68 ec       	ldi	r22, 0xC8	; 200
     11a:	82 76       	andi	r24, 0x62	; 98
     11c:	be d9       	rcall	.-3204   	; 0xfffff49a <__eeprom_end+0xff7ef49a>
     11e:	8f e1       	ldi	r24, 0x1F	; 31
     120:	a9 3e       	cpi	r26, 0xE9	; 233
     122:	4c 80       	ldd	r4, Y+4	; 0x04
     124:	ef ff       	.word	0xffef	; ????
     126:	be 01       	movw	r22, r28
     128:	c4 ff       	sbrs	r28, 4
     12a:	7f 3f       	cpi	r23, 0xFF	; 255
     12c:	00 00       	nop
     12e:	00 00       	nop
	...

00000132 <__trampolines_end>:
     132:	6e 61       	ori	r22, 0x1E	; 30
     134:	6e 00       	.word	0x006e	; ????

00000136 <__c.2159>:
     136:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     146:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     156:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     166:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     176:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     186:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     196:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     1a6:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     1b6:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     1c6:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     1d6:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     1e6:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     1f6:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     206:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     216:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     226:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000234 <__ctors_end>:
     234:	11 24       	eor	r1, r1
     236:	1f be       	out	0x3f, r1	; 63
     238:	cf ef       	ldi	r28, 0xFF	; 255
     23a:	d0 e1       	ldi	r29, 0x10	; 16
     23c:	de bf       	out	0x3e, r29	; 62
     23e:	cd bf       	out	0x3d, r28	; 61

00000240 <__do_copy_data>:
     240:	11 e0       	ldi	r17, 0x01	; 1
     242:	a0 e0       	ldi	r26, 0x00	; 0
     244:	b1 e0       	ldi	r27, 0x01	; 1
     246:	ec e7       	ldi	r30, 0x7C	; 124
     248:	ff e1       	ldi	r31, 0x1F	; 31
     24a:	00 e0       	ldi	r16, 0x00	; 0
     24c:	0b bf       	out	0x3b, r16	; 59
     24e:	02 c0       	rjmp	.+4      	; 0x254 <__do_copy_data+0x14>
     250:	07 90       	elpm	r0, Z+
     252:	0d 92       	st	X+, r0
     254:	a8 3a       	cpi	r26, 0xA8	; 168
     256:	b1 07       	cpc	r27, r17
     258:	d9 f7       	brne	.-10     	; 0x250 <__do_copy_data+0x10>

0000025a <__do_clear_bss>:
     25a:	22 e0       	ldi	r18, 0x02	; 2
     25c:	a8 ea       	ldi	r26, 0xA8	; 168
     25e:	b1 e0       	ldi	r27, 0x01	; 1
     260:	01 c0       	rjmp	.+2      	; 0x264 <.do_clear_bss_start>

00000262 <.do_clear_bss_loop>:
     262:	1d 92       	st	X+, r1

00000264 <.do_clear_bss_start>:
     264:	a1 31       	cpi	r26, 0x11	; 17
     266:	b2 07       	cpc	r27, r18
     268:	e1 f7       	brne	.-8      	; 0x262 <.do_clear_bss_loop>
     26a:	97 d0       	rcall	.+302    	; 0x39a <main>
     26c:	0c 94 bc 0f 	jmp	0x1f78	; 0x1f78 <_exit>

00000270 <__bad_interrupt>:
     270:	c7 ce       	rjmp	.-626    	; 0x0 <__vectors>

00000272 <__vector_14>:
volatile double time = 0;
volatile double current_ping_distance = 0;
volatile double last_ping_distance = 0;

//Ping Interrupts
ISR(TIMER1_OVF_vect) {
     272:	1f 92       	push	r1
     274:	0f 92       	push	r0
     276:	0f b6       	in	r0, 0x3f	; 63
     278:	0f 92       	push	r0
     27a:	11 24       	eor	r1, r1
     27c:	8f 93       	push	r24
     27e:	9f 93       	push	r25
	overflow++;
     280:	80 91 ba 01 	lds	r24, 0x01BA
     284:	90 91 bb 01 	lds	r25, 0x01BB
     288:	01 96       	adiw	r24, 0x01	; 1
     28a:	90 93 bb 01 	sts	0x01BB, r25
     28e:	80 93 ba 01 	sts	0x01BA, r24
}
     292:	9f 91       	pop	r25
     294:	8f 91       	pop	r24
     296:	0f 90       	pop	r0
     298:	0f be       	out	0x3f, r0	; 63
     29a:	0f 90       	pop	r0
     29c:	1f 90       	pop	r1
     29e:	18 95       	reti

000002a0 <__vector_11>:

ISR(TIMER1_CAPT_vect){
     2a0:	1f 92       	push	r1
     2a2:	0f 92       	push	r0
     2a4:	0f b6       	in	r0, 0x3f	; 63
     2a6:	0f 92       	push	r0
     2a8:	11 24       	eor	r1, r1
     2aa:	0b b6       	in	r0, 0x3b	; 59
     2ac:	0f 92       	push	r0
     2ae:	2f 93       	push	r18
     2b0:	3f 93       	push	r19
     2b2:	4f 93       	push	r20
     2b4:	5f 93       	push	r21
     2b6:	6f 93       	push	r22
     2b8:	7f 93       	push	r23
     2ba:	8f 93       	push	r24
     2bc:	9f 93       	push	r25
     2be:	af 93       	push	r26
     2c0:	bf 93       	push	r27
     2c2:	ef 93       	push	r30
     2c4:	ff 93       	push	r31
	if(TCCR1B & 0x40){
     2c6:	0e b4       	in	r0, 0x2e	; 46
     2c8:	06 fe       	sbrs	r0, 6
     2ca:	09 c0       	rjmp	.+18     	; 0x2de <__vector_11+0x3e>
		riseEdge = ICR1;
     2cc:	86 b5       	in	r24, 0x26	; 38
     2ce:	97 b5       	in	r25, 0x27	; 39
     2d0:	90 93 b7 01 	sts	0x01B7, r25
     2d4:	80 93 b6 01 	sts	0x01B6, r24
		TCCR1B = 0x82; //set to capture falling edge.
     2d8:	82 e8       	ldi	r24, 0x82	; 130
     2da:	8e bd       	out	0x2e, r24	; 46
     2dc:	4b c0       	rjmp	.+150    	; 0x374 <__vector_11+0xd4>
	}
	else{
		fallEdge = ICR1;
     2de:	86 b5       	in	r24, 0x26	; 38
     2e0:	97 b5       	in	r25, 0x27	; 39
     2e2:	90 93 b9 01 	sts	0x01B9, r25
     2e6:	80 93 b8 01 	sts	0x01B8, r24
		TCCR1B = 0xC2; //set to capture rising edge.
     2ea:	82 ec       	ldi	r24, 0xC2	; 194
     2ec:	8e bd       	out	0x2e, r24	; 46
		delta = fallEdge - riseEdge;
     2ee:	80 91 b8 01 	lds	r24, 0x01B8
     2f2:	90 91 b9 01 	lds	r25, 0x01B9
     2f6:	20 91 b6 01 	lds	r18, 0x01B6
     2fa:	30 91 b7 01 	lds	r19, 0x01B7
     2fe:	82 1b       	sub	r24, r18
     300:	93 0b       	sbc	r25, r19
     302:	90 93 b5 01 	sts	0x01B5, r25
     306:	80 93 b4 01 	sts	0x01B4, r24
		time = 0.0005 * delta;
     30a:	60 91 b4 01 	lds	r22, 0x01B4
     30e:	70 91 b5 01 	lds	r23, 0x01B5
     312:	88 27       	eor	r24, r24
     314:	77 fd       	sbrc	r23, 7
     316:	80 95       	com	r24
     318:	98 2f       	mov	r25, r24
     31a:	7c d5       	rcall	.+2808   	; 0xe14 <__floatsisf>
     31c:	2f e6       	ldi	r18, 0x6F	; 111
     31e:	32 e1       	ldi	r19, 0x12	; 18
     320:	43 e0       	ldi	r20, 0x03	; 3
     322:	5a e3       	ldi	r21, 0x3A	; 58
     324:	2b d6       	rcall	.+3158   	; 0xf7c <__mulsf3>
     326:	60 93 b0 01 	sts	0x01B0, r22
     32a:	70 93 b1 01 	sts	0x01B1, r23
     32e:	80 93 b2 01 	sts	0x01B2, r24
     332:	90 93 b3 01 	sts	0x01B3, r25
		current_ping_distance = 34 * time / 2 - 29.5;
     336:	60 91 b0 01 	lds	r22, 0x01B0
     33a:	70 91 b1 01 	lds	r23, 0x01B1
     33e:	80 91 b2 01 	lds	r24, 0x01B2
     342:	90 91 b3 01 	lds	r25, 0x01B3
     346:	20 e0       	ldi	r18, 0x00	; 0
     348:	30 e0       	ldi	r19, 0x00	; 0
     34a:	48 e0       	ldi	r20, 0x08	; 8
     34c:	52 e4       	ldi	r21, 0x42	; 66
     34e:	16 d6       	rcall	.+3116   	; 0xf7c <__mulsf3>
     350:	20 e0       	ldi	r18, 0x00	; 0
     352:	30 e0       	ldi	r19, 0x00	; 0
     354:	40 e0       	ldi	r20, 0x00	; 0
     356:	5f e3       	ldi	r21, 0x3F	; 63
     358:	11 d6       	rcall	.+3106   	; 0xf7c <__mulsf3>
     35a:	20 e0       	ldi	r18, 0x00	; 0
     35c:	30 e0       	ldi	r19, 0x00	; 0
     35e:	4c ee       	ldi	r20, 0xEC	; 236
     360:	51 e4       	ldi	r21, 0x41	; 65
     362:	59 d4       	rcall	.+2226   	; 0xc16 <__subsf3>
     364:	60 93 ac 01 	sts	0x01AC, r22
     368:	70 93 ad 01 	sts	0x01AD, r23
     36c:	80 93 ae 01 	sts	0x01AE, r24
     370:	90 93 af 01 	sts	0x01AF, r25
	}
	
}
     374:	ff 91       	pop	r31
     376:	ef 91       	pop	r30
     378:	bf 91       	pop	r27
     37a:	af 91       	pop	r26
     37c:	9f 91       	pop	r25
     37e:	8f 91       	pop	r24
     380:	7f 91       	pop	r23
     382:	6f 91       	pop	r22
     384:	5f 91       	pop	r21
     386:	4f 91       	pop	r20
     388:	3f 91       	pop	r19
     38a:	2f 91       	pop	r18
     38c:	0f 90       	pop	r0
     38e:	0b be       	out	0x3b, r0	; 59
     390:	0f 90       	pop	r0
     392:	0f be       	out	0x3f, r0	; 63
     394:	0f 90       	pop	r0
     396:	1f 90       	pop	r1
     398:	18 95       	reti

0000039a <main>:

int main(void)
{
     39a:	2f 92       	push	r2
     39c:	3f 92       	push	r3
     39e:	4f 92       	push	r4
     3a0:	5f 92       	push	r5
     3a2:	6f 92       	push	r6
     3a4:	7f 92       	push	r7
     3a6:	8f 92       	push	r8
     3a8:	9f 92       	push	r9
     3aa:	af 92       	push	r10
     3ac:	bf 92       	push	r11
     3ae:	cf 92       	push	r12
     3b0:	df 92       	push	r13
     3b2:	ef 92       	push	r14
     3b4:	ff 92       	push	r15
     3b6:	0f 93       	push	r16
     3b8:	1f 93       	push	r17
     3ba:	cf 93       	push	r28
     3bc:	df 93       	push	r29
     3be:	cd b7       	in	r28, 0x3d	; 61
     3c0:	de b7       	in	r29, 0x3e	; 62
     3c2:	c9 55       	subi	r28, 0x59	; 89
     3c4:	d5 40       	sbci	r29, 0x05	; 5
     3c6:	0f b6       	in	r0, 0x3f	; 63
     3c8:	f8 94       	cli
     3ca:	de bf       	out	0x3e, r29	; 62
     3cc:	0f be       	out	0x3f, r0	; 63
     3ce:	cd bf       	out	0x3d, r28	; 61
	USART_Init(MYUBRR);//initialize transmission
     3d0:	81 e2       	ldi	r24, 0x21	; 33
     3d2:	90 e0       	ldi	r25, 0x00	; 0
     3d4:	05 d3       	rcall	.+1546   	; 0x9e0 <USART_Init>
	ADC_init();//initialize ADC.
     3d6:	92 d3       	rcall	.+1828   	; 0xafc <ADC_init>
	ping_init();
     3d8:	ce d3       	rcall	.+1948   	; 0xb76 <ping_init>
	timer3_init(); //initialize timer3 registers
     3da:	e6 d3       	rcall	.+1996   	; 0xba8 <timer3_init>
	lcd_init();
     3dc:	ed d1       	rcall	.+986    	; 0x7b8 <lcd_init>
	double current_IR_distance = 0; 
	double last_IR_distance = 0;
	int degree = 0;
	
	//transmit the title of the table to Putty
	char title[] = "Degree\t\tSonar Distance (cm)\tIR Distance (cm)";
     3de:	8d e2       	ldi	r24, 0x2D	; 45
     3e0:	e8 e4       	ldi	r30, 0x48	; 72
     3e2:	f1 e0       	ldi	r31, 0x01	; 1
     3e4:	de 01       	movw	r26, r28
     3e6:	a9 56       	subi	r26, 0x69	; 105
     3e8:	bf 4f       	sbci	r27, 0xFF	; 255
     3ea:	01 90       	ld	r0, Z+
     3ec:	0d 92       	st	X+, r0
     3ee:	8a 95       	dec	r24
     3f0:	e1 f7       	brne	.-8      	; 0x3ea <main+0x50>
     3f2:	9e 01       	movw	r18, r28
     3f4:	29 56       	subi	r18, 0x69	; 105
     3f6:	3f 4f       	sbci	r19, 0xFF	; 255
     3f8:	69 01       	movw	r12, r18
	int i;
	for(i = 0; i<strlen(title); i++){
     3fa:	00 e0       	ldi	r16, 0x00	; 0
     3fc:	10 e0       	ldi	r17, 0x00	; 0
     3fe:	79 01       	movw	r14, r18
     400:	06 c0       	rjmp	.+12     	; 0x40e <main+0x74>
		
		USART_Transmit(title[i]);
     402:	f6 01       	movw	r30, r12
     404:	81 91       	ld	r24, Z+
     406:	6f 01       	movw	r12, r30
     408:	f5 d2       	rcall	.+1514   	; 0x9f4 <USART_Transmit>
	int degree = 0;
	
	//transmit the title of the table to Putty
	char title[] = "Degree\t\tSonar Distance (cm)\tIR Distance (cm)";
	int i;
	for(i = 0; i<strlen(title); i++){
     40a:	0f 5f       	subi	r16, 0xFF	; 255
     40c:	1f 4f       	sbci	r17, 0xFF	; 255
     40e:	f7 01       	movw	r30, r14
     410:	01 90       	ld	r0, Z+
     412:	00 20       	and	r0, r0
     414:	e9 f7       	brne	.-6      	; 0x410 <main+0x76>
     416:	31 97       	sbiw	r30, 0x01	; 1
     418:	ee 19       	sub	r30, r14
     41a:	ff 09       	sbc	r31, r15
     41c:	0e 17       	cp	r16, r30
     41e:	1f 07       	cpc	r17, r31
     420:	80 f3       	brcs	.-32     	; 0x402 <main+0x68>
		
		USART_Transmit(title[i]);
	}
	USART_Transmit(0x0D);
     422:	8d e0       	ldi	r24, 0x0D	; 13
     424:	e7 d2       	rcall	.+1486   	; 0x9f4 <USART_Transmit>
	USART_Transmit(0x0A);
     426:	8a e0       	ldi	r24, 0x0A	; 10
     428:	e5 d2       	rcall	.+1482   	; 0x9f4 <USART_Transmit>
	wait_ms(500);
     42a:	84 ef       	ldi	r24, 0xF4	; 244
     42c:	91 e0       	ldi	r25, 0x01	; 1
     42e:	ab d2       	rcall	.+1366   	; 0x986 <wait_ms>
	double IR_distance[181];
	double Ping_distance[181];
  
		
		//set servo to initial position
		move_servo(0);
     430:	80 e0       	ldi	r24, 0x00	; 0
     432:	90 e0       	ldi	r25, 0x00	; 0
     434:	d5 d3       	rcall	.+1962   	; 0xbe0 <move_servo>
		degree = 0;
		wait_ms(1200);
     436:	80 eb       	ldi	r24, 0xB0	; 176
     438:	94 e0       	ldi	r25, 0x04	; 4
     43a:	a5 d2       	rcall	.+1354   	; 0x986 <wait_ms>
     43c:	5e 01       	movw	r10, r28
     43e:	fc ea       	ldi	r31, 0xAC	; 172
     440:	af 1a       	sub	r10, r31
     442:	fd ef       	ldi	r31, 0xFD	; 253
     444:	bf 0a       	sbc	r11, r31

	//Extra variables to help track distance data
	int IR_width = 0;
	int Ping_width = 0;
	
	int numObject_IR=0;
     446:	61 2c       	mov	r6, r1
     448:	71 2c       	mov	r7, r1
	USART_Transmit(0x0D);
	USART_Transmit(0x0A);
	wait_ms(500);

	//Extra variables to help track distance data
	int IR_width = 0;
     44a:	81 2c       	mov	r8, r1
     44c:	91 2c       	mov	r9, r1
	double Ping_distance[181];
  
		
		//set servo to initial position
		move_servo(0);
		degree = 0;
     44e:	c1 2c       	mov	r12, r1
     450:	d1 2c       	mov	r13, r1
	lcd_init();
	
	//variables that keep updated
	char ch[150]; //string to transmit for every 2 degree
	double current_IR_distance = 0; 
	double last_IR_distance = 0;
     452:	e1 2c       	mov	r14, r1
     454:	f1 2c       	mov	r15, r1
     456:	00 e0       	ldi	r16, 0x00	; 0
     458:	10 e0       	ldi	r17, 0x00	; 0
		degree = 0;
		wait_ms(1200);
		
		while(degree<180){ //every 180 degrees, do...
			
			send_pulse();
     45a:	97 d3       	rcall	.+1838   	; 0xb8a <send_pulse>
			move_servo(degree);
     45c:	c6 01       	movw	r24, r12
     45e:	c0 d3       	rcall	.+1920   	; 0xbe0 <move_servo>
			
			current_IR_distance = IR_measure_dis(ADC_channel); //calculate distance IR
     460:	80 91 06 01 	lds	r24, 0x0106
     464:	68 d3       	rcall	.+1744   	; 0xb36 <IR_measure_dis>
     466:	26 2e       	mov	r2, r22
     468:	37 2e       	mov	r3, r23
     46a:	48 2e       	mov	r4, r24
     46c:	59 2e       	mov	r5, r25
			
			IR_distance[degree] = current_IR_distance;	//store the distance measurements into two arrays
     46e:	86 2f       	mov	r24, r22
     470:	93 2d       	mov	r25, r3
     472:	a4 2d       	mov	r26, r4
     474:	b5 2d       	mov	r27, r5
     476:	f5 01       	movw	r30, r10
     478:	80 83       	st	Z, r24
     47a:	91 83       	std	Z+1, r25	; 0x01
     47c:	a2 83       	std	Z+2, r26	; 0x02
     47e:	b3 83       	std	Z+3, r27	; 0x03
			Ping_distance[numObject_Ping] = current_ping_distance;
     480:	80 91 ac 01 	lds	r24, 0x01AC
     484:	90 91 ad 01 	lds	r25, 0x01AD
     488:	a0 91 ae 01 	lds	r26, 0x01AE
     48c:	b0 91 af 01 	lds	r27, 0x01AF
			
			if ((current_IR_distance>34)&&(current_IR_distance<81)){	//when looking at start and middle of object
     490:	20 e0       	ldi	r18, 0x00	; 0
     492:	30 e0       	ldi	r19, 0x00	; 0
     494:	48 e0       	ldi	r20, 0x08	; 8
     496:	52 e4       	ldi	r21, 0x42	; 66
     498:	62 2d       	mov	r22, r2
     49a:	73 2d       	mov	r23, r3
     49c:	84 2d       	mov	r24, r4
     49e:	95 2d       	mov	r25, r5
     4a0:	69 d5       	rcall	.+2770   	; 0xf74 <__gesf2>
     4a2:	18 16       	cp	r1, r24
     4a4:	74 f4       	brge	.+28     	; 0x4c2 <main+0x128>
     4a6:	20 e0       	ldi	r18, 0x00	; 0
     4a8:	30 e0       	ldi	r19, 0x00	; 0
     4aa:	42 ea       	ldi	r20, 0xA2	; 162
     4ac:	52 e4       	ldi	r21, 0x42	; 66
     4ae:	62 2d       	mov	r22, r2
     4b0:	73 2d       	mov	r23, r3
     4b2:	84 2d       	mov	r24, r4
     4b4:	95 2d       	mov	r25, r5
     4b6:	14 d4       	rcall	.+2088   	; 0xce0 <__cmpsf2>
     4b8:	88 23       	and	r24, r24
     4ba:	1c f4       	brge	.+6      	; 0x4c2 <main+0x128>

				IR_width+=2;
     4bc:	f2 e0       	ldi	r31, 0x02	; 2
     4be:	8f 0e       	add	r8, r31
     4c0:	91 1c       	adc	r9, r1
				
			}

			if((last_IR_distance>34)&&(last_IR_distance<81)&&(current_IR_distance>81)){	//when looking at end of object
     4c2:	20 e0       	ldi	r18, 0x00	; 0
     4c4:	30 e0       	ldi	r19, 0x00	; 0
     4c6:	48 e0       	ldi	r20, 0x08	; 8
     4c8:	52 e4       	ldi	r21, 0x42	; 66
     4ca:	6e 2d       	mov	r22, r14
     4cc:	7f 2d       	mov	r23, r15
     4ce:	80 2f       	mov	r24, r16
     4d0:	91 2f       	mov	r25, r17
     4d2:	50 d5       	rcall	.+2720   	; 0xf74 <__gesf2>
     4d4:	18 16       	cp	r1, r24
     4d6:	0c f0       	brlt	.+2      	; 0x4da <main+0x140>
     4d8:	76 c0       	rjmp	.+236    	; 0x5c6 <main+0x22c>
     4da:	20 e0       	ldi	r18, 0x00	; 0
     4dc:	30 e0       	ldi	r19, 0x00	; 0
     4de:	42 ea       	ldi	r20, 0xA2	; 162
     4e0:	52 e4       	ldi	r21, 0x42	; 66
     4e2:	6e 2d       	mov	r22, r14
     4e4:	7f 2d       	mov	r23, r15
     4e6:	80 2f       	mov	r24, r16
     4e8:	91 2f       	mov	r25, r17
     4ea:	fa d3       	rcall	.+2036   	; 0xce0 <__cmpsf2>
     4ec:	88 23       	and	r24, r24
     4ee:	0c f0       	brlt	.+2      	; 0x4f2 <main+0x158>
     4f0:	6a c0       	rjmp	.+212    	; 0x5c6 <main+0x22c>
     4f2:	20 e0       	ldi	r18, 0x00	; 0
     4f4:	30 e0       	ldi	r19, 0x00	; 0
     4f6:	42 ea       	ldi	r20, 0xA2	; 162
     4f8:	52 e4       	ldi	r21, 0x42	; 66
     4fa:	62 2d       	mov	r22, r2
     4fc:	73 2d       	mov	r23, r3
     4fe:	84 2d       	mov	r24, r4
     500:	95 2d       	mov	r25, r5
     502:	38 d5       	rcall	.+2672   	; 0xf74 <__gesf2>
     504:	18 16       	cp	r1, r24
     506:	0c f0       	brlt	.+2      	; 0x50a <main+0x170>
     508:	5e c0       	rjmp	.+188    	; 0x5c6 <main+0x22c>
				
				numObject_IR++;
     50a:	2f ef       	ldi	r18, 0xFF	; 255
     50c:	62 1a       	sub	r6, r18
     50e:	72 0a       	sbc	r7, r18
				IR_object_size[numObject_IR] = IR_width;
     510:	f3 01       	movw	r30, r6
     512:	ee 0f       	add	r30, r30
     514:	ff 1f       	adc	r31, r31
     516:	48 e2       	ldi	r20, 0x28	; 40
     518:	51 e0       	ldi	r21, 0x01	; 1
     51a:	4c 0f       	add	r20, r28
     51c:	5d 1f       	adc	r21, r29
     51e:	e4 0f       	add	r30, r20
     520:	f5 1f       	adc	r31, r21
     522:	91 82       	std	Z+1, r9	; 0x01
     524:	80 82       	st	Z, r8
				IR_object_degree[numObject_IR] = degree - IR_width/2;	
     526:	c4 01       	movw	r24, r8
     528:	99 23       	and	r25, r25
     52a:	0c f4       	brge	.+2      	; 0x52e <main+0x194>
     52c:	01 96       	adiw	r24, 0x01	; 1
     52e:	95 95       	asr	r25
     530:	87 95       	ror	r24
     532:	f6 01       	movw	r30, r12
     534:	e8 1b       	sub	r30, r24
     536:	f9 0b       	sbc	r31, r25
     538:	cf 01       	movw	r24, r30
					
					if(IR_object_degree[numObject_IR] %2){IR_object_degree[numObject_IR]++;}
     53a:	e0 fd       	sbrc	r30, 0
     53c:	0c c0       	rjmp	.+24     	; 0x556 <main+0x1bc>

			if((last_IR_distance>34)&&(last_IR_distance<81)&&(current_IR_distance>81)){	//when looking at end of object
				
				numObject_IR++;
				IR_object_size[numObject_IR] = IR_width;
				IR_object_degree[numObject_IR] = degree - IR_width/2;	
     53e:	f3 01       	movw	r30, r6
     540:	ee 0f       	add	r30, r30
     542:	ff 1f       	adc	r31, r31
     544:	24 ec       	ldi	r18, 0xC4	; 196
     546:	30 e0       	ldi	r19, 0x00	; 0
     548:	2c 0f       	add	r18, r28
     54a:	3d 1f       	adc	r19, r29
     54c:	e2 0f       	add	r30, r18
     54e:	f3 1f       	adc	r31, r19
     550:	91 83       	std	Z+1, r25	; 0x01
     552:	80 83       	st	Z, r24
     554:	0c c0       	rjmp	.+24     	; 0x56e <main+0x1d4>
					
					if(IR_object_degree[numObject_IR] %2){IR_object_degree[numObject_IR]++;}
     556:	f3 01       	movw	r30, r6
     558:	ee 0f       	add	r30, r30
     55a:	ff 1f       	adc	r31, r31
     55c:	44 ec       	ldi	r20, 0xC4	; 196
     55e:	50 e0       	ldi	r21, 0x00	; 0
     560:	4c 0f       	add	r20, r28
     562:	5d 1f       	adc	r21, r29
     564:	e4 0f       	add	r30, r20
     566:	f5 1f       	adc	r31, r21
     568:	01 96       	adiw	r24, 0x01	; 1
     56a:	91 83       	std	Z+1, r25	; 0x01
     56c:	80 83       	st	Z, r24
				
				IR_object_distance[numObject_IR] = IR_distance[IR_object_degree[numObject_IR]];
     56e:	f3 01       	movw	r30, r6
     570:	ee 0f       	add	r30, r30
     572:	ff 1f       	adc	r31, r31
     574:	ee 0f       	add	r30, r30
     576:	ff 1f       	adc	r31, r31
     578:	8c e8       	ldi	r24, 0x8C	; 140
     57a:	91 e0       	ldi	r25, 0x01	; 1
     57c:	8c 0f       	add	r24, r28
     57e:	9d 1f       	adc	r25, r29
     580:	e8 0f       	add	r30, r24
     582:	f9 1f       	adc	r31, r25
     584:	d3 01       	movw	r26, r6
     586:	aa 0f       	add	r26, r26
     588:	bb 1f       	adc	r27, r27
     58a:	24 ec       	ldi	r18, 0xC4	; 196
     58c:	30 e0       	ldi	r19, 0x00	; 0
     58e:	2c 0f       	add	r18, r28
     590:	3d 1f       	adc	r19, r29
     592:	a2 0f       	add	r26, r18
     594:	b3 1f       	adc	r27, r19
     596:	0d 90       	ld	r0, X+
     598:	bc 91       	ld	r27, X
     59a:	a0 2d       	mov	r26, r0
     59c:	aa 0f       	add	r26, r26
     59e:	bb 1f       	adc	r27, r27
     5a0:	aa 0f       	add	r26, r26
     5a2:	bb 1f       	adc	r27, r27
     5a4:	44 e5       	ldi	r20, 0x54	; 84
     5a6:	52 e0       	ldi	r21, 0x02	; 2
     5a8:	4c 0f       	add	r20, r28
     5aa:	5d 1f       	adc	r21, r29
     5ac:	a4 0f       	add	r26, r20
     5ae:	b5 1f       	adc	r27, r21
     5b0:	8d 91       	ld	r24, X+
     5b2:	9d 91       	ld	r25, X+
     5b4:	0d 90       	ld	r0, X+
     5b6:	bc 91       	ld	r27, X
     5b8:	a0 2d       	mov	r26, r0
     5ba:	80 83       	st	Z, r24
     5bc:	91 83       	std	Z+1, r25	; 0x01
     5be:	a2 83       	std	Z+2, r26	; 0x02
     5c0:	b3 83       	std	Z+3, r27	; 0x03
				IR_width = 0;
     5c2:	81 2c       	mov	r8, r1
     5c4:	91 2c       	mov	r9, r1
				
			}

			last_IR_distance = current_IR_distance;//update last to current
			last_ping_distance = current_ping_distance;
     5c6:	80 91 ac 01 	lds	r24, 0x01AC
     5ca:	90 91 ad 01 	lds	r25, 0x01AD
     5ce:	a0 91 ae 01 	lds	r26, 0x01AE
     5d2:	b0 91 af 01 	lds	r27, 0x01AF
     5d6:	80 93 a8 01 	sts	0x01A8, r24
     5da:	90 93 a9 01 	sts	0x01A9, r25
     5de:	a0 93 aa 01 	sts	0x01AA, r26
     5e2:	b0 93 ab 01 	sts	0x01AB, r27

			wait_ms(25);
     5e6:	89 e1       	ldi	r24, 0x19	; 25
     5e8:	90 e0       	ldi	r25, 0x00	; 0
     5ea:	cd d1       	rcall	.+922    	; 0x986 <wait_ms>
			USART_Transmit_String1(ch,degree,current_ping_distance,current_IR_distance); //transmit to putty
     5ec:	20 91 ac 01 	lds	r18, 0x01AC
     5f0:	30 91 ad 01 	lds	r19, 0x01AD
     5f4:	40 91 ae 01 	lds	r20, 0x01AE
     5f8:	50 91 af 01 	lds	r21, 0x01AF
     5fc:	e2 2c       	mov	r14, r2
     5fe:	f3 2c       	mov	r15, r3
     600:	04 2d       	mov	r16, r4
     602:	15 2d       	mov	r17, r5
     604:	b6 01       	movw	r22, r12
     606:	ce 01       	movw	r24, r28
     608:	01 96       	adiw	r24, 0x01	; 1
     60a:	f8 d1       	rcall	.+1008   	; 0x9fc <USART_Transmit_String1>
			wait_ms(25);
     60c:	89 e1       	ldi	r24, 0x19	; 25
     60e:	90 e0       	ldi	r25, 0x00	; 0
     610:	ba d1       	rcall	.+884    	; 0x986 <wait_ms>
			degree += 2;
     612:	52 e0       	ldi	r21, 0x02	; 2
     614:	c5 0e       	add	r12, r21
     616:	d1 1c       	adc	r13, r1
     618:	88 e0       	ldi	r24, 0x08	; 8
     61a:	a8 0e       	add	r10, r24
     61c:	b1 1c       	adc	r11, r1
		//set servo to initial position
		move_servo(0);
		degree = 0;
		wait_ms(1200);
		
		while(degree<180){ //every 180 degrees, do...
     61e:	94 eb       	ldi	r25, 0xB4	; 180
     620:	c9 16       	cp	r12, r25
     622:	d1 04       	cpc	r13, r1
     624:	29 f0       	breq	.+10     	; 0x630 <main+0x296>
				IR_object_distance[numObject_IR] = IR_distance[IR_object_degree[numObject_IR]];
				IR_width = 0;
				
			}

			last_IR_distance = current_IR_distance;//update last to current
     626:	e2 2c       	mov	r14, r2
     628:	f3 2c       	mov	r15, r3
     62a:	04 2d       	mov	r16, r4
     62c:	15 2d       	mov	r17, r5
     62e:	15 cf       	rjmp	.-470    	; 0x45a <main+0xc0>
			degree += 2;
		}
		
		//number of objects found by IR
		char temp_IR[50];
		USART_Transmit_String2(temp_IR,numObject_IR);
     630:	b3 01       	movw	r22, r6
     632:	ce 01       	movw	r24, r28
     634:	88 5d       	subi	r24, 0xD8	; 216
     636:	9a 4f       	sbci	r25, 0xFA	; 250
     638:	28 d2       	rcall	.+1104   	; 0xa8a <USART_Transmit_String2>
		
		//number of objects found by Ping
		//smallest object found by IR
		int j;
		int minIndex = 1;
		for(j = 1; j<(numObject_IR+1); j++){
     63a:	ef ef       	ldi	r30, 0xFF	; 255
     63c:	6e 1a       	sub	r6, r30
     63e:	7e 0a       	sbc	r7, r30
     640:	f2 e0       	ldi	r31, 0x02	; 2
     642:	6f 16       	cp	r6, r31
     644:	71 04       	cpc	r7, r1
     646:	ec f0       	brlt	.+58     	; 0x682 <main+0x2e8>
     648:	fe 01       	movw	r30, r28
     64a:	e6 5d       	subi	r30, 0xD6	; 214
     64c:	fe 4f       	sbci	r31, 0xFE	; 254
		USART_Transmit_String2(temp_IR,numObject_IR);
		
		//number of objects found by Ping
		//smallest object found by IR
		int j;
		int minIndex = 1;
     64e:	01 e0       	ldi	r16, 0x01	; 1
     650:	10 e0       	ldi	r17, 0x00	; 0
		for(j = 1; j<(numObject_IR+1); j++){
     652:	81 e0       	ldi	r24, 0x01	; 1
     654:	90 e0       	ldi	r25, 0x00	; 0
			if(IR_object_size[minIndex] > IR_object_size[j]){
     656:	21 91       	ld	r18, Z+
     658:	31 91       	ld	r19, Z+
     65a:	d8 01       	movw	r26, r16
     65c:	aa 0f       	add	r26, r26
     65e:	bb 1f       	adc	r27, r27
     660:	48 e2       	ldi	r20, 0x28	; 40
     662:	51 e0       	ldi	r21, 0x01	; 1
     664:	4c 0f       	add	r20, r28
     666:	5d 1f       	adc	r21, r29
     668:	a4 0f       	add	r26, r20
     66a:	b5 1f       	adc	r27, r21
     66c:	4d 91       	ld	r20, X+
     66e:	5c 91       	ld	r21, X
     670:	24 17       	cp	r18, r20
     672:	35 07       	cpc	r19, r21
     674:	0c f4       	brge	.+2      	; 0x678 <main+0x2de>
     676:	8c 01       	movw	r16, r24
		
		//number of objects found by Ping
		//smallest object found by IR
		int j;
		int minIndex = 1;
		for(j = 1; j<(numObject_IR+1); j++){
     678:	01 96       	adiw	r24, 0x01	; 1
     67a:	86 15       	cp	r24, r6
     67c:	97 05       	cpc	r25, r7
     67e:	59 f7       	brne	.-42     	; 0x656 <main+0x2bc>
     680:	02 c0       	rjmp	.+4      	; 0x686 <main+0x2ec>
		USART_Transmit_String2(temp_IR,numObject_IR);
		
		//number of objects found by Ping
		//smallest object found by IR
		int j;
		int minIndex = 1;
     682:	01 e0       	ldi	r16, 0x01	; 1
     684:	10 e0       	ldi	r17, 0x00	; 0
		for(j = 1; j<(numObject_IR+1); j++){
			if(IR_object_size[minIndex] > IR_object_size[j]){
				minIndex = j;
			}
		}
		move_servo(IR_object_degree[minIndex]); //move servo to the smallest object
     686:	78 01       	movw	r14, r16
     688:	ee 0c       	add	r14, r14
     68a:	ff 1c       	adc	r15, r15
     68c:	e4 ec       	ldi	r30, 0xC4	; 196
     68e:	f0 e0       	ldi	r31, 0x00	; 0
     690:	ec 0f       	add	r30, r28
     692:	fd 1f       	adc	r31, r29
     694:	ee 0d       	add	r30, r14
     696:	ff 1d       	adc	r31, r15
     698:	80 81       	ld	r24, Z
     69a:	91 81       	ldd	r25, Z+1	; 0x01
     69c:	a1 d2       	rcall	.+1346   	; 0xbe0 <move_servo>
		//calculate the width of the object
		double width = 0;
		width = 2 * (IR_object_distance[minIndex]) * (tan(IR_object_size[minIndex] / 360.0 * 3.1415926));
     69e:	f8 01       	movw	r30, r16
     6a0:	ee 0f       	add	r30, r30
     6a2:	ff 1f       	adc	r31, r31
     6a4:	ee 0f       	add	r30, r30
     6a6:	ff 1f       	adc	r31, r31
     6a8:	8c e8       	ldi	r24, 0x8C	; 140
     6aa:	91 e0       	ldi	r25, 0x01	; 1
     6ac:	8c 0f       	add	r24, r28
     6ae:	9d 1f       	adc	r25, r29
     6b0:	e8 0f       	add	r30, r24
     6b2:	f9 1f       	adc	r31, r25
     6b4:	d0 80       	ld	r13, Z
     6b6:	c1 80       	ldd	r12, Z+1	; 0x01
     6b8:	72 80       	ldd	r7, Z+2	; 0x02
     6ba:	63 80       	ldd	r6, Z+3	; 0x03
     6bc:	e8 e2       	ldi	r30, 0x28	; 40
     6be:	f1 e0       	ldi	r31, 0x01	; 1
     6c0:	ec 0f       	add	r30, r28
     6c2:	fd 1f       	adc	r31, r29
     6c4:	ee 0d       	add	r30, r14
     6c6:	ff 1d       	adc	r31, r15
     6c8:	e0 80       	ld	r14, Z
     6ca:	f1 80       	ldd	r15, Z+1	; 0x01
     6cc:	b7 01       	movw	r22, r14
     6ce:	88 27       	eor	r24, r24
     6d0:	77 fd       	sbrc	r23, 7
     6d2:	80 95       	com	r24
     6d4:	98 2f       	mov	r25, r24
     6d6:	9e d3       	rcall	.+1852   	; 0xe14 <__floatsisf>
     6d8:	20 e0       	ldi	r18, 0x00	; 0
     6da:	30 e0       	ldi	r19, 0x00	; 0
     6dc:	44 eb       	ldi	r20, 0xB4	; 180
     6de:	53 e4       	ldi	r21, 0x43	; 67
     6e0:	03 d3       	rcall	.+1542   	; 0xce8 <__divsf3>
     6e2:	2a ed       	ldi	r18, 0xDA	; 218
     6e4:	3f e0       	ldi	r19, 0x0F	; 15
     6e6:	49 e4       	ldi	r20, 0x49	; 73
     6e8:	50 e4       	ldi	r21, 0x40	; 64
     6ea:	48 d4       	rcall	.+2192   	; 0xf7c <__mulsf3>
     6ec:	16 d5       	rcall	.+2604   	; 0x111a <tan>
     6ee:	4b 01       	movw	r8, r22
     6f0:	5c 01       	movw	r10, r24
     6f2:	2d 2d       	mov	r18, r13
     6f4:	3c 2d       	mov	r19, r12
     6f6:	47 2d       	mov	r20, r7
     6f8:	56 2d       	mov	r21, r6
     6fa:	6d 2d       	mov	r22, r13
     6fc:	7c 2d       	mov	r23, r12
     6fe:	87 2d       	mov	r24, r7
     700:	96 2d       	mov	r25, r6
     702:	8a d2       	rcall	.+1300   	; 0xc18 <__addsf3>
     704:	a5 01       	movw	r20, r10
     706:	94 01       	movw	r18, r8
     708:	39 d4       	rcall	.+2162   	; 0xf7c <__mulsf3>
		//print information on LCD
		lprintf("Index: %d\nAngular width: %d\nDist (cm): %.2f\nWidth (cm): %.2f", minIndex, IR_object_size[minIndex], IR_object_distance[minIndex], width);
     70a:	9f 93       	push	r25
     70c:	8f 93       	push	r24
     70e:	7f 93       	push	r23
     710:	6f 93       	push	r22
     712:	6f 92       	push	r6
     714:	7f 92       	push	r7
     716:	cf 92       	push	r12
     718:	df 92       	push	r13
     71a:	ff 92       	push	r15
     71c:	ef 92       	push	r14
     71e:	1f 93       	push	r17
     720:	0f 93       	push	r16
     722:	8b e0       	ldi	r24, 0x0B	; 11
     724:	91 e0       	ldi	r25, 0x01	; 1
     726:	9f 93       	push	r25
     728:	8f 93       	push	r24
     72a:	97 d0       	rcall	.+302    	; 0x85a <lprintf>
     72c:	0f b6       	in	r0, 0x3f	; 63
     72e:	f8 94       	cli
     730:	de bf       	out	0x3e, r29	; 62
     732:	0f be       	out	0x3f, r0	; 63
     734:	cd bf       	out	0x3d, r28	; 61

     736:	80 e0       	ldi	r24, 0x00	; 0
     738:	90 e0       	ldi	r25, 0x00	; 0
     73a:	c7 5a       	subi	r28, 0xA7	; 167
     73c:	da 4f       	sbci	r29, 0xFA	; 250
     73e:	0f b6       	in	r0, 0x3f	; 63
     740:	f8 94       	cli
     742:	de bf       	out	0x3e, r29	; 62
     744:	0f be       	out	0x3f, r0	; 63
     746:	cd bf       	out	0x3d, r28	; 61
     748:	df 91       	pop	r29
     74a:	cf 91       	pop	r28
     74c:	1f 91       	pop	r17
     74e:	0f 91       	pop	r16
     750:	ff 90       	pop	r15
     752:	ef 90       	pop	r14
     754:	df 90       	pop	r13
     756:	cf 90       	pop	r12
     758:	bf 90       	pop	r11
     75a:	af 90       	pop	r10
     75c:	9f 90       	pop	r9
     75e:	8f 90       	pop	r8
     760:	7f 90       	pop	r7
     762:	6f 90       	pop	r6
     764:	5f 90       	pop	r5
     766:	4f 90       	pop	r4
     768:	3f 90       	pop	r3
     76a:	2f 90       	pop	r2
     76c:	08 95       	ret

0000076e <lcd_toggle_clear>:
	int i;

	for (i=0;i<size;i++) {		
		lcd_putc(string[i]);
	}
}
     76e:	de 9a       	sbi	0x1b, 6	; 27
     770:	90 e0       	ldi	r25, 0x00	; 0
     772:	09 d1       	rcall	.+530    	; 0x986 <wait_ms>
     774:	de 98       	cbi	0x1b, 6	; 27
     776:	8b b3       	in	r24, 0x1b	; 27
     778:	80 7f       	andi	r24, 0xF0	; 240
     77a:	8b bb       	out	0x1b, r24	; 27
     77c:	08 95       	ret

0000077e <lcd_command>:
     77e:	cf 93       	push	r28
     780:	c8 2f       	mov	r28, r24
     782:	dc 98       	cbi	0x1b, 4	; 27
     784:	8b b3       	in	r24, 0x1b	; 27
     786:	9c 2f       	mov	r25, r28
     788:	92 95       	swap	r25
     78a:	9f 70       	andi	r25, 0x0F	; 15
     78c:	89 2b       	or	r24, r25
     78e:	8b bb       	out	0x1b, r24	; 27
     790:	82 e0       	ldi	r24, 0x02	; 2
     792:	ed df       	rcall	.-38     	; 0x76e <lcd_toggle_clear>
     794:	8b b3       	in	r24, 0x1b	; 27
     796:	cf 70       	andi	r28, 0x0F	; 15
     798:	c8 2b       	or	r28, r24
     79a:	cb bb       	out	0x1b, r28	; 27
     79c:	82 e0       	ldi	r24, 0x02	; 2
     79e:	e7 df       	rcall	.-50     	; 0x76e <lcd_toggle_clear>
     7a0:	dc 9a       	sbi	0x1b, 4	; 27
     7a2:	cf 91       	pop	r28
     7a4:	08 95       	ret

000007a6 <lcd_clear>:
     7a6:	81 e0       	ldi	r24, 0x01	; 1
     7a8:	ea df       	rcall	.-44     	; 0x77e <lcd_command>
     7aa:	81 e0       	ldi	r24, 0x01	; 1
     7ac:	90 e0       	ldi	r25, 0x00	; 0
     7ae:	eb c0       	rjmp	.+470    	; 0x986 <wait_ms>
     7b0:	08 95       	ret

000007b2 <lcd_home_line1>:
     7b2:	82 e0       	ldi	r24, 0x02	; 2
     7b4:	e4 cf       	rjmp	.-56     	; 0x77e <lcd_command>
     7b6:	08 95       	ret

000007b8 <lcd_init>:
     7b8:	8f ef       	ldi	r24, 0xFF	; 255
     7ba:	8a bb       	out	0x1a, r24	; 26
     7bc:	83 e0       	ldi	r24, 0x03	; 3
     7be:	8b bb       	out	0x1b, r24	; 27
     7c0:	de 9a       	sbi	0x1b, 6	; 27
     7c2:	81 e0       	ldi	r24, 0x01	; 1
     7c4:	90 e0       	ldi	r25, 0x00	; 0
     7c6:	df d0       	rcall	.+446    	; 0x986 <wait_ms>
     7c8:	de 98       	cbi	0x1b, 6	; 27
     7ca:	85 e0       	ldi	r24, 0x05	; 5
     7cc:	90 e0       	ldi	r25, 0x00	; 0
     7ce:	db d0       	rcall	.+438    	; 0x986 <wait_ms>
     7d0:	de 9a       	sbi	0x1b, 6	; 27
     7d2:	81 e0       	ldi	r24, 0x01	; 1
     7d4:	90 e0       	ldi	r25, 0x00	; 0
     7d6:	d7 d0       	rcall	.+430    	; 0x986 <wait_ms>
     7d8:	de 98       	cbi	0x1b, 6	; 27
     7da:	de 9a       	sbi	0x1b, 6	; 27
     7dc:	81 e0       	ldi	r24, 0x01	; 1
     7de:	90 e0       	ldi	r25, 0x00	; 0
     7e0:	d2 d0       	rcall	.+420    	; 0x986 <wait_ms>
     7e2:	de 98       	cbi	0x1b, 6	; 27
     7e4:	82 e0       	ldi	r24, 0x02	; 2
     7e6:	8b bb       	out	0x1b, r24	; 27
     7e8:	81 e0       	ldi	r24, 0x01	; 1
     7ea:	c1 df       	rcall	.-126    	; 0x76e <lcd_toggle_clear>
     7ec:	8b b3       	in	r24, 0x1b	; 27
     7ee:	8b bb       	out	0x1b, r24	; 27
     7f0:	81 e0       	ldi	r24, 0x01	; 1
     7f2:	bd df       	rcall	.-134    	; 0x76e <lcd_toggle_clear>
     7f4:	8b b3       	in	r24, 0x1b	; 27
     7f6:	8e 60       	ori	r24, 0x0E	; 14
     7f8:	8b bb       	out	0x1b, r24	; 27
     7fa:	81 e0       	ldi	r24, 0x01	; 1
     7fc:	b8 df       	rcall	.-144    	; 0x76e <lcd_toggle_clear>
     7fe:	8b b3       	in	r24, 0x1b	; 27
     800:	8b bb       	out	0x1b, r24	; 27
     802:	81 e0       	ldi	r24, 0x01	; 1
     804:	b4 df       	rcall	.-152    	; 0x76e <lcd_toggle_clear>
     806:	8b b3       	in	r24, 0x1b	; 27
     808:	86 60       	ori	r24, 0x06	; 6
     80a:	8b bb       	out	0x1b, r24	; 27
     80c:	81 e0       	ldi	r24, 0x01	; 1
     80e:	af df       	rcall	.-162    	; 0x76e <lcd_toggle_clear>
     810:	8b b3       	in	r24, 0x1b	; 27
     812:	8b bb       	out	0x1b, r24	; 27
     814:	81 e0       	ldi	r24, 0x01	; 1
     816:	ab df       	rcall	.-170    	; 0x76e <lcd_toggle_clear>
     818:	d8 9a       	sbi	0x1b, 0	; 27
     81a:	81 e0       	ldi	r24, 0x01	; 1
     81c:	a8 df       	rcall	.-176    	; 0x76e <lcd_toggle_clear>
     81e:	dc 9a       	sbi	0x1b, 4	; 27
     820:	c8 cf       	rjmp	.-112    	; 0x7b2 <lcd_home_line1>
     822:	08 95       	ret

00000824 <lcd_home_line2>:
     824:	80 ec       	ldi	r24, 0xC0	; 192
     826:	ab cf       	rjmp	.-170    	; 0x77e <lcd_command>
     828:	08 95       	ret

0000082a <lcd_home_line3>:
     82a:	84 e9       	ldi	r24, 0x94	; 148
     82c:	a8 cf       	rjmp	.-176    	; 0x77e <lcd_command>
     82e:	08 95       	ret

00000830 <lcd_home_line4>:
     830:	84 ed       	ldi	r24, 0xD4	; 212
     832:	a5 cf       	rjmp	.-182    	; 0x77e <lcd_command>
     834:	08 95       	ret

00000836 <lcd_putc>:
     836:	cf 93       	push	r28
     838:	c8 2f       	mov	r28, r24
     83a:	8b b3       	in	r24, 0x1b	; 27
     83c:	9c 2f       	mov	r25, r28
     83e:	92 95       	swap	r25
     840:	9f 70       	andi	r25, 0x0F	; 15
     842:	89 2b       	or	r24, r25
     844:	8b bb       	out	0x1b, r24	; 27
     846:	81 e0       	ldi	r24, 0x01	; 1
     848:	92 df       	rcall	.-220    	; 0x76e <lcd_toggle_clear>
     84a:	8b b3       	in	r24, 0x1b	; 27
     84c:	cf 70       	andi	r28, 0x0F	; 15
     84e:	c8 2b       	or	r28, r24
     850:	cb bb       	out	0x1b, r28	; 27
     852:	81 e0       	ldi	r24, 0x01	; 1
     854:	8c df       	rcall	.-232    	; 0x76e <lcd_toggle_clear>
     856:	cf 91       	pop	r28
     858:	08 95       	ret

0000085a <lprintf>:
 *
 * Code from this site was also used: http://www.ozzu.com/cpp-tutorials/tutorial-writing-custom-printf-wrapper-function-t89166.html
 * @author Kerrick Staley & Chad Nelson
 * @date 05/16/2012
 */
void lprintf(const char *format, ...) {
     85a:	cf 92       	push	r12
     85c:	df 92       	push	r13
     85e:	ef 92       	push	r14
     860:	ff 92       	push	r15
     862:	0f 93       	push	r16
     864:	1f 93       	push	r17
     866:	cf 93       	push	r28
     868:	df 93       	push	r29
     86a:	cd b7       	in	r28, 0x3d	; 61
     86c:	de b7       	in	r29, 0x3e	; 62
     86e:	c1 55       	subi	r28, 0x51	; 81
     870:	d1 09       	sbc	r29, r1
     872:	0f b6       	in	r0, 0x3f	; 63
     874:	f8 94       	cli
     876:	de bf       	out	0x3e, r29	; 62
     878:	0f be       	out	0x3f, r0	; 63
     87a:	cd bf       	out	0x3d, r28	; 61
     87c:	fe 01       	movw	r30, r28
     87e:	e4 5a       	subi	r30, 0xA4	; 164
     880:	ff 4f       	sbci	r31, 0xFF	; 255
     882:	41 91       	ld	r20, Z+
     884:	51 91       	ld	r21, Z+
	static char lastbuffer[LCD_TOTAL_CHARS + 1];

	char buffer[LCD_TOTAL_CHARS + 1];
	va_list arglist;
	va_start(arglist, format);
	vsnprintf(buffer, LCD_TOTAL_CHARS + 1, format, arglist);
     886:	9f 01       	movw	r18, r30
     888:	61 e5       	ldi	r22, 0x51	; 81
     88a:	70 e0       	ldi	r23, 0x00	; 0
     88c:	ce 01       	movw	r24, r28
     88e:	01 96       	adiw	r24, 0x01	; 1
     890:	0e 94 26 0f 	call	0x1e4c	; 0x1e4c <vsnprintf>
	
	if (!strcmp(lastbuffer, buffer))
     894:	be 01       	movw	r22, r28
     896:	6f 5f       	subi	r22, 0xFF	; 255
     898:	7f 4f       	sbci	r23, 0xFF	; 255
     89a:	8c eb       	ldi	r24, 0xBC	; 188
     89c:	91 e0       	ldi	r25, 0x01	; 1
     89e:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <strcmp>
     8a2:	89 2b       	or	r24, r25
     8a4:	09 f4       	brne	.+2      	; 0x8a8 <lprintf+0x4e>
     8a6:	43 c0       	rjmp	.+134    	; 0x92e <lprintf+0xd4>
		return;
	
	strcpy(lastbuffer, buffer);
     8a8:	be 01       	movw	r22, r28
     8aa:	6f 5f       	subi	r22, 0xFF	; 255
     8ac:	7f 4f       	sbci	r23, 0xFF	; 255
     8ae:	8c eb       	ldi	r24, 0xBC	; 188
     8b0:	91 e0       	ldi	r25, 0x01	; 1
     8b2:	0e 94 b4 0e 	call	0x1d68	; 0x1d68 <strcpy>
	lcd_clear();
     8b6:	77 df       	rcall	.-274    	; 0x7a6 <lcd_clear>
     8b8:	9e 01       	movw	r18, r28
     8ba:	2f 5f       	subi	r18, 0xFF	; 255
     8bc:	3f 4f       	sbci	r19, 0xFF	; 255
     8be:	69 01       	movw	r12, r18
	char *str = buffer;
	int charnum = 0;
     8c0:	00 e0       	ldi	r16, 0x00	; 0
     8c2:	10 e0       	ldi	r17, 0x00	; 0
	while (*str && charnum < LCD_TOTAL_CHARS) {
		if (*str == '\n') {
			/* fill remainder of line with spaces */
			charnum += LCD_WIDTH - charnum % LCD_WIDTH;
     8c4:	0f 2e       	mov	r0, r31
     8c6:	f4 e1       	ldi	r31, 0x14	; 20
     8c8:	ef 2e       	mov	r14, r31
     8ca:	f1 2c       	mov	r15, r1
     8cc:	f0 2d       	mov	r31, r0
	
	strcpy(lastbuffer, buffer);
	lcd_clear();
	char *str = buffer;
	int charnum = 0;
	while (*str && charnum < LCD_TOTAL_CHARS) {
     8ce:	27 c0       	rjmp	.+78     	; 0x91e <lprintf+0xc4>
		if (*str == '\n') {
     8d0:	8a 30       	cpi	r24, 0x0A	; 10
     8d2:	51 f4       	brne	.+20     	; 0x8e8 <lprintf+0x8e>
			/* fill remainder of line with spaces */
			charnum += LCD_WIDTH - charnum % LCD_WIDTH;
     8d4:	c8 01       	movw	r24, r16
     8d6:	b7 01       	movw	r22, r14
     8d8:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <__divmodhi4>
     8dc:	f7 01       	movw	r30, r14
     8de:	e8 1b       	sub	r30, r24
     8e0:	f9 0b       	sbc	r31, r25
     8e2:	0e 0f       	add	r16, r30
     8e4:	1f 1f       	adc	r17, r31
     8e6:	03 c0       	rjmp	.+6      	; 0x8ee <lprintf+0x94>
		} else {
			lcd_putc(*str);
     8e8:	a6 df       	rcall	.-180    	; 0x836 <lcd_putc>
			charnum++;
     8ea:	0f 5f       	subi	r16, 0xFF	; 255
     8ec:	1f 4f       	sbci	r17, 0xFF	; 255
		 * 0x54...0x68 : line 4
		 * 
		 * The cursor position must be reset at the end of every line, otherwise, after writing line 1, it writes line 3 and then nothingness
		 */
		
		if (charnum % LCD_WIDTH == 0) { 
     8ee:	c8 01       	movw	r24, r16
     8f0:	b7 01       	movw	r22, r14
     8f2:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <__divmodhi4>
     8f6:	89 2b       	or	r24, r25
     8f8:	91 f4       	brne	.+36     	; 0x91e <lprintf+0xc4>
			switch (charnum / LCD_WIDTH) {
     8fa:	c8 01       	movw	r24, r16
     8fc:	b7 01       	movw	r22, r14
     8fe:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <__divmodhi4>
     902:	62 30       	cpi	r22, 0x02	; 2
     904:	71 05       	cpc	r23, r1
     906:	41 f0       	breq	.+16     	; 0x918 <lprintf+0xbe>
     908:	63 30       	cpi	r22, 0x03	; 3
     90a:	71 05       	cpc	r23, r1
     90c:	39 f0       	breq	.+14     	; 0x91c <lprintf+0xc2>
     90e:	61 30       	cpi	r22, 0x01	; 1
     910:	71 05       	cpc	r23, r1
     912:	29 f4       	brne	.+10     	; 0x91e <lprintf+0xc4>
			case 1:
				lcd_home_line2();
     914:	87 df       	rcall	.-242    	; 0x824 <lcd_home_line2>
				break;
     916:	03 c0       	rjmp	.+6      	; 0x91e <lprintf+0xc4>
			case 2:
				lcd_home_line3();
     918:	88 df       	rcall	.-240    	; 0x82a <lcd_home_line3>
				break;
     91a:	01 c0       	rjmp	.+2      	; 0x91e <lprintf+0xc4>
			case 3:
				lcd_home_line4();
     91c:	89 df       	rcall	.-238    	; 0x830 <lcd_home_line4>
	
	strcpy(lastbuffer, buffer);
	lcd_clear();
	char *str = buffer;
	int charnum = 0;
	while (*str && charnum < LCD_TOTAL_CHARS) {
     91e:	f6 01       	movw	r30, r12
     920:	81 91       	ld	r24, Z+
     922:	6f 01       	movw	r12, r30
     924:	88 23       	and	r24, r24
     926:	19 f0       	breq	.+6      	; 0x92e <lprintf+0xd4>
     928:	00 35       	cpi	r16, 0x50	; 80
     92a:	11 05       	cpc	r17, r1
     92c:	8c f2       	brlt	.-94     	; 0x8d0 <lprintf+0x76>
				lcd_home_line4();
			}
		}
	}
	va_end(arglist);
}
     92e:	cf 5a       	subi	r28, 0xAF	; 175
     930:	df 4f       	sbci	r29, 0xFF	; 255
     932:	0f b6       	in	r0, 0x3f	; 63
     934:	f8 94       	cli
     936:	de bf       	out	0x3e, r29	; 62
     938:	0f be       	out	0x3f, r0	; 63
     93a:	cd bf       	out	0x3d, r28	; 61
     93c:	df 91       	pop	r29
     93e:	cf 91       	pop	r28
     940:	1f 91       	pop	r17
     942:	0f 91       	pop	r16
     944:	ff 90       	pop	r15
     946:	ef 90       	pop	r14
     948:	df 90       	pop	r13
     94a:	cf 90       	pop	r12
     94c:	08 95       	ret

0000094e <timer2_start>:
}


// Start timer2
void timer2_start(char unit) {
	timer2_tick=0;
     94e:	10 92 10 02 	sts	0x0210, r1
     952:	10 92 0f 02 	sts	0x020F, r1
	if ( unit == 0 ) { 		//unit = 0 is for slow 
     956:	81 11       	cpse	r24, r1
     958:	06 c0       	rjmp	.+12     	; 0x966 <timer2_start+0x18>
        TCCR2=0b00001011;	//WGM:CTC, COM:OC2 disconnected,pre_scaler = 64
     95a:	8b e0       	ldi	r24, 0x0B	; 11
     95c:	85 bd       	out	0x25, r24	; 37
        TIMSK|=0b10000000;	//Enabling O.C. Interrupt for Timer2
     95e:	87 b7       	in	r24, 0x37	; 55
     960:	80 68       	ori	r24, 0x80	; 128
     962:	87 bf       	out	0x37, r24	; 55
     964:	07 c0       	rjmp	.+14     	; 0x974 <timer2_start+0x26>
	}
	if (unit == 1) { 		//unit = 1 is for fast
     966:	81 30       	cpi	r24, 0x01	; 1
     968:	29 f4       	brne	.+10     	; 0x974 <timer2_start+0x26>
        TCCR2=0b00001001;	//WGM:CTC, COM:OC2 disconnected,pre_scaler = 1
     96a:	89 e0       	ldi	r24, 0x09	; 9
     96c:	85 bd       	out	0x25, r24	; 37
        TIMSK|=0b10000000;	//Enabling O.C. Interrupt for Timer2
     96e:	87 b7       	in	r24, 0x37	; 55
     970:	80 68       	ori	r24, 0x80	; 128
     972:	87 bf       	out	0x37, r24	; 55
	}
	sei();
     974:	78 94       	sei
     976:	08 95       	ret

00000978 <timer2_stop>:
}


// Stop timer2
void timer2_stop() {
	TIMSK&=~0b10000000;		//Disabling O.C. Interrupt for Timer2
     978:	87 b7       	in	r24, 0x37	; 55
     97a:	8f 77       	andi	r24, 0x7F	; 127
     97c:	87 bf       	out	0x37, r24	; 55
	TCCR2&=0b01111111;		//Clearing O.C. settings
     97e:	85 b5       	in	r24, 0x25	; 37
     980:	8f 77       	andi	r24, 0x7F	; 127
     982:	85 bd       	out	0x25, r24	; 37
     984:	08 95       	ret

00000986 <wait_ms>:
unsigned int top = 4725;
unsigned int bottom = 1125;
unsigned int pulse_width = 0; //pulse width in cycles

/// Blocks for a specified number of milliseconds
void wait_ms(unsigned int time_val) {
     986:	cf 93       	push	r28
     988:	df 93       	push	r29
     98a:	ec 01       	movw	r28, r24
	//Seting OC value for time requested
	OCR2=250; 				//Clock is 16 MHz. At a prescaler of 64, 250 timer ticks = 1ms.
     98c:	8a ef       	ldi	r24, 0xFA	; 250
     98e:	83 bd       	out	0x23, r24	; 35
	timer2_tick=0;
     990:	10 92 10 02 	sts	0x0210, r1
     994:	10 92 0f 02 	sts	0x020F, r1
	timer2_start(0);
     998:	80 e0       	ldi	r24, 0x00	; 0
     99a:	d9 df       	rcall	.-78     	; 0x94e <timer2_start>

	//Waiting for time
	while(timer2_tick < time_val);
     99c:	20 91 0f 02 	lds	r18, 0x020F
     9a0:	30 91 10 02 	lds	r19, 0x0210
     9a4:	2c 17       	cp	r18, r28
     9a6:	3d 07       	cpc	r19, r29
     9a8:	c8 f3       	brcs	.-14     	; 0x99c <wait_ms+0x16>

	timer2_stop();
     9aa:	e6 df       	rcall	.-52     	; 0x978 <timer2_stop>
}
     9ac:	df 91       	pop	r29
     9ae:	cf 91       	pop	r28
     9b0:	08 95       	ret

000009b2 <__vector_9>:
	TCCR2&=0b01111111;		//Clearing O.C. settings
}


// Interrupt handler (runs every 1 ms)
ISR (TIMER2_COMP_vect) {
     9b2:	1f 92       	push	r1
     9b4:	0f 92       	push	r0
     9b6:	0f b6       	in	r0, 0x3f	; 63
     9b8:	0f 92       	push	r0
     9ba:	11 24       	eor	r1, r1
     9bc:	8f 93       	push	r24
     9be:	9f 93       	push	r25
	timer2_tick++;
     9c0:	80 91 0f 02 	lds	r24, 0x020F
     9c4:	90 91 10 02 	lds	r25, 0x0210
     9c8:	01 96       	adiw	r24, 0x01	; 1
     9ca:	90 93 10 02 	sts	0x0210, r25
     9ce:	80 93 0f 02 	sts	0x020F, r24
}
     9d2:	9f 91       	pop	r25
     9d4:	8f 91       	pop	r24
     9d6:	0f 90       	pop	r0
     9d8:	0f be       	out	0x3f, r0	; 63
     9da:	0f 90       	pop	r0
     9dc:	1f 90       	pop	r1
     9de:	18 95       	reti

000009e0 <USART_Init>:

//Initialize USART communication
void USART_Init(unsigned int ubrr){
	UBRR0H = (unsigned char)(ubrr>>8);
     9e0:	90 93 90 00 	sts	0x0090, r25
	UBRR0L = (unsigned char)(ubrr);
     9e4:	89 b9       	out	0x09, r24	; 9

	UCSR0A |= 0x02;
     9e6:	59 9a       	sbi	0x0b, 1	; 11
	UCSR0B = (1<<RXEN)|(1<<TXEN);
     9e8:	88 e1       	ldi	r24, 0x18	; 24
     9ea:	8a b9       	out	0x0a, r24	; 10
	UCSR0C = (1<<USBS)|(3<<UCSZ0);
     9ec:	8e e0       	ldi	r24, 0x0E	; 14
     9ee:	80 93 95 00 	sts	0x0095, r24
     9f2:	08 95       	ret

000009f4 <USART_Transmit>:
}

//Transmit one byte character to putty
void USART_Transmit(unsigned char data){
	while(!(UCSR0A & (1<<UDRE)));
     9f4:	5d 9b       	sbis	0x0b, 5	; 11
     9f6:	fe cf       	rjmp	.-4      	; 0x9f4 <USART_Transmit>
	UDR0 = data;
     9f8:	8c b9       	out	0x0c, r24	; 12
     9fa:	08 95       	ret

000009fc <USART_Transmit_String1>:
}

//Takes three parameters: degree, pingDistance, and irDistance and transmit them to putty
void USART_Transmit_String1 (char* String, int degree, double pingDistance, double irDistance){
     9fc:	cf 92       	push	r12
     9fe:	df 92       	push	r13
     a00:	ef 92       	push	r14
     a02:	ff 92       	push	r15
     a04:	0f 93       	push	r16
     a06:	1f 93       	push	r17
     a08:	cf 93       	push	r28
     a0a:	df 93       	push	r29
     a0c:	c8 2e       	mov	r12, r24
     a0e:	d9 2e       	mov	r13, r25
	int i;
	sprintf(String, "%d\t\t%.2f\t\t\t%.2f",degree,pingDistance,irDistance);
     a10:	1f 93       	push	r17
     a12:	0f 93       	push	r16
     a14:	ff 92       	push	r15
     a16:	ef 92       	push	r14
     a18:	5f 93       	push	r21
     a1a:	4f 93       	push	r20
     a1c:	3f 93       	push	r19
     a1e:	2f 93       	push	r18
     a20:	7f 93       	push	r23
     a22:	6f 93       	push	r22
     a24:	25 e7       	ldi	r18, 0x75	; 117
     a26:	31 e0       	ldi	r19, 0x01	; 1
     a28:	3f 93       	push	r19
     a2a:	2f 93       	push	r18
     a2c:	9f 93       	push	r25
     a2e:	8f 93       	push	r24
     a30:	0e 94 f8 0e 	call	0x1df0	; 0x1df0 <sprintf>
     a34:	0c 2d       	mov	r16, r12
     a36:	1d 2d       	mov	r17, r13
	for(i = 0; i<strlen(String); i++){
     a38:	8d b7       	in	r24, 0x3d	; 61
     a3a:	9e b7       	in	r25, 0x3e	; 62
     a3c:	0e 96       	adiw	r24, 0x0e	; 14
     a3e:	0f b6       	in	r0, 0x3f	; 63
     a40:	f8 94       	cli
     a42:	9e bf       	out	0x3e, r25	; 62
     a44:	0f be       	out	0x3f, r0	; 63
     a46:	8d bf       	out	0x3d, r24	; 61
     a48:	c0 e0       	ldi	r28, 0x00	; 0
     a4a:	d0 e0       	ldi	r29, 0x00	; 0
     a4c:	05 c0       	rjmp	.+10     	; 0xa58 <USART_Transmit_String1+0x5c>
		
		USART_Transmit(String[i]);
     a4e:	f8 01       	movw	r30, r16
     a50:	81 91       	ld	r24, Z+
     a52:	8f 01       	movw	r16, r30
     a54:	cf df       	rcall	.-98     	; 0x9f4 <USART_Transmit>

//Takes three parameters: degree, pingDistance, and irDistance and transmit them to putty
void USART_Transmit_String1 (char* String, int degree, double pingDistance, double irDistance){
	int i;
	sprintf(String, "%d\t\t%.2f\t\t\t%.2f",degree,pingDistance,irDistance);
	for(i = 0; i<strlen(String); i++){
     a56:	21 96       	adiw	r28, 0x01	; 1
     a58:	ec 2d       	mov	r30, r12
     a5a:	fd 2d       	mov	r31, r13
     a5c:	df 01       	movw	r26, r30
     a5e:	0d 90       	ld	r0, X+
     a60:	00 20       	and	r0, r0
     a62:	e9 f7       	brne	.-6      	; 0xa5e <USART_Transmit_String1+0x62>
     a64:	11 97       	sbiw	r26, 0x01	; 1
     a66:	ae 1b       	sub	r26, r30
     a68:	bf 0b       	sbc	r27, r31
     a6a:	ca 17       	cp	r28, r26
     a6c:	db 07       	cpc	r29, r27
     a6e:	78 f3       	brcs	.-34     	; 0xa4e <USART_Transmit_String1+0x52>
		
		USART_Transmit(String[i]);
	}
	USART_Transmit(0x0D);
     a70:	8d e0       	ldi	r24, 0x0D	; 13
     a72:	c0 df       	rcall	.-128    	; 0x9f4 <USART_Transmit>
	USART_Transmit(0x0A);
     a74:	8a e0       	ldi	r24, 0x0A	; 10
     a76:	be df       	rcall	.-132    	; 0x9f4 <USART_Transmit>
}
     a78:	df 91       	pop	r29
     a7a:	cf 91       	pop	r28
     a7c:	1f 91       	pop	r17
     a7e:	0f 91       	pop	r16
     a80:	ff 90       	pop	r15
     a82:	ef 90       	pop	r14
     a84:	df 90       	pop	r13
     a86:	cf 90       	pop	r12
     a88:	08 95       	ret

00000a8a <USART_Transmit_String2>:

//Transmit the number of object detected by IR
void USART_Transmit_String2 (char* String, int numObject_IR){
     a8a:	ef 92       	push	r14
     a8c:	ff 92       	push	r15
     a8e:	0f 93       	push	r16
     a90:	1f 93       	push	r17
     a92:	cf 93       	push	r28
     a94:	df 93       	push	r29
     a96:	e8 2e       	mov	r14, r24
     a98:	f9 2e       	mov	r15, r25
	int i;
	sprintf(String, "Number of objects found by IR: %d",numObject_IR);
     a9a:	7f 93       	push	r23
     a9c:	6f 93       	push	r22
     a9e:	25 e8       	ldi	r18, 0x85	; 133
     aa0:	31 e0       	ldi	r19, 0x01	; 1
     aa2:	3f 93       	push	r19
     aa4:	2f 93       	push	r18
     aa6:	9f 93       	push	r25
     aa8:	8f 93       	push	r24
     aaa:	0e 94 f8 0e 	call	0x1df0	; 0x1df0 <sprintf>
     aae:	0e 2d       	mov	r16, r14
     ab0:	1f 2d       	mov	r17, r15
	for(i = 0; i<strlen(String); i++){
     ab2:	0f 90       	pop	r0
     ab4:	0f 90       	pop	r0
     ab6:	0f 90       	pop	r0
     ab8:	0f 90       	pop	r0
     aba:	0f 90       	pop	r0
     abc:	0f 90       	pop	r0
     abe:	c0 e0       	ldi	r28, 0x00	; 0
     ac0:	d0 e0       	ldi	r29, 0x00	; 0
     ac2:	05 c0       	rjmp	.+10     	; 0xace <USART_Transmit_String2+0x44>
		
		USART_Transmit(String[i]);
     ac4:	f8 01       	movw	r30, r16
     ac6:	81 91       	ld	r24, Z+
     ac8:	8f 01       	movw	r16, r30
     aca:	94 df       	rcall	.-216    	; 0x9f4 <USART_Transmit>

//Transmit the number of object detected by IR
void USART_Transmit_String2 (char* String, int numObject_IR){
	int i;
	sprintf(String, "Number of objects found by IR: %d",numObject_IR);
	for(i = 0; i<strlen(String); i++){
     acc:	21 96       	adiw	r28, 0x01	; 1
     ace:	ee 2d       	mov	r30, r14
     ad0:	ff 2d       	mov	r31, r15
     ad2:	df 01       	movw	r26, r30
     ad4:	0d 90       	ld	r0, X+
     ad6:	00 20       	and	r0, r0
     ad8:	e9 f7       	brne	.-6      	; 0xad4 <USART_Transmit_String2+0x4a>
     ada:	11 97       	sbiw	r26, 0x01	; 1
     adc:	ae 1b       	sub	r26, r30
     ade:	bf 0b       	sbc	r27, r31
     ae0:	ca 17       	cp	r28, r26
     ae2:	db 07       	cpc	r29, r27
     ae4:	78 f3       	brcs	.-34     	; 0xac4 <USART_Transmit_String2+0x3a>
		
		USART_Transmit(String[i]);
	}
	USART_Transmit(0x0D);
     ae6:	8d e0       	ldi	r24, 0x0D	; 13
     ae8:	85 df       	rcall	.-246    	; 0x9f4 <USART_Transmit>
	USART_Transmit(0x0A);
     aea:	8a e0       	ldi	r24, 0x0A	; 10
     aec:	83 df       	rcall	.-250    	; 0x9f4 <USART_Transmit>
}
     aee:	df 91       	pop	r29
     af0:	cf 91       	pop	r28
     af2:	1f 91       	pop	r17
     af4:	0f 91       	pop	r16
     af6:	ff 90       	pop	r15
     af8:	ef 90       	pop	r14
     afa:	08 95       	ret

00000afc <ADC_init>:

//Initialize ADC
void ADC_init(){
	//Reference voltage, alignment, channel
	ADMUX = 0b11000010;
     afc:	82 ec       	ldi	r24, 0xC2	; 194
     afe:	87 b9       	out	0x07, r24	; 7
	//Enable, running mode, interrupt and clock select
	ADCSRA = 0b10100111;
     b00:	87 ea       	ldi	r24, 0xA7	; 167
     b02:	86 b9       	out	0x06, r24	; 6
     b04:	08 95       	ret

00000b06 <ADC_read>:
}
//Single-shot ADC reading
int ADC_read(char channel){
	//Select channel
	ADMUX = channel;
     b06:	87 b9       	out	0x07, r24	; 7
	//Start ADC sampling
	ADCSRA |= 0x40;
     b08:	36 9a       	sbi	0x06, 6	; 6
	
	while(!(ADCSRA & 0x10)){}
     b0a:	34 9b       	sbis	0x06, 4	; 6
     b0c:	fe cf       	rjmp	.-4      	; 0xb0a <ADC_read+0x4>

	return ADC;
     b0e:	84 b1       	in	r24, 0x04	; 4
     b10:	95 b1       	in	r25, 0x05	; 5
}
     b12:	08 95       	ret

00000b14 <D_to_distance>:

//convert digital value to distance(cm)
double D_to_distance(int digitalValue){
	double distance = 0;
	distance = ((pow(digitalValue, -1.096)) * 18494);
     b14:	bc 01       	movw	r22, r24
     b16:	88 27       	eor	r24, r24
     b18:	77 fd       	sbrc	r23, 7
     b1a:	80 95       	com	r24
     b1c:	98 2f       	mov	r25, r24
     b1e:	7a d1       	rcall	.+756    	; 0xe14 <__floatsisf>
     b20:	2a eb       	ldi	r18, 0xBA	; 186
     b22:	39 e4       	ldi	r19, 0x49	; 73
     b24:	4c e8       	ldi	r20, 0x8C	; 140
     b26:	5f eb       	ldi	r21, 0xBF	; 191
     b28:	8c d2       	rcall	.+1304   	; 0x1042 <pow>
     b2a:	20 e0       	ldi	r18, 0x00	; 0
     b2c:	3c e7       	ldi	r19, 0x7C	; 124
     b2e:	40 e9       	ldi	r20, 0x90	; 144
     b30:	56 e4       	ldi	r21, 0x46	; 70
     b32:	24 c2       	rjmp	.+1096   	; 0xf7c <__mulsf3>
	return distance;
}
     b34:	08 95       	ret

00000b36 <IR_measure_dis>:

//calculate and return the average distance measured by IR
double IR_measure_dis(char channel){
     b36:	ff 92       	push	r15
     b38:	0f 93       	push	r16
     b3a:	1f 93       	push	r17
     b3c:	cf 93       	push	r28
     b3e:	df 93       	push	r29
     b40:	f8 2e       	mov	r15, r24
     b42:	c5 e0       	ldi	r28, 0x05	; 5
     b44:	d0 e0       	ldi	r29, 0x00	; 0
	int sensorValue = 0; //initialize sensor value.
     b46:	00 e0       	ldi	r16, 0x00	; 0
     b48:	10 e0       	ldi	r17, 0x00	; 0
	double distance = 0;
	int count = 0;
	int average = 0;
	
	while(count<5){
		sensorValue += ADC_read(channel); //read value from ADC.
     b4a:	8f 2d       	mov	r24, r15
     b4c:	dc df       	rcall	.-72     	; 0xb06 <ADC_read>
     b4e:	08 0f       	add	r16, r24
     b50:	19 1f       	adc	r17, r25
		wait_ms(40);
     b52:	88 e2       	ldi	r24, 0x28	; 40
     b54:	90 e0       	ldi	r25, 0x00	; 0
     b56:	17 df       	rcall	.-466    	; 0x986 <wait_ms>
     b58:	21 97       	sbiw	r28, 0x01	; 1
	int sensorValue = 0; //initialize sensor value.
	double distance = 0;
	int count = 0;
	int average = 0;
	
	while(count<5){
     b5a:	20 97       	sbiw	r28, 0x00	; 0
     b5c:	b1 f7       	brne	.-20     	; 0xb4a <IR_measure_dis+0x14>
		sensorValue += ADC_read(channel); //read value from ADC.
		wait_ms(40);
		count++;
	}
	average = sensorValue/5; //take the average of the five readings.
     b5e:	c8 01       	movw	r24, r16
     b60:	65 e0       	ldi	r22, 0x05	; 5
     b62:	70 e0       	ldi	r23, 0x00	; 0
     b64:	ee d7       	rcall	.+4060   	; 0x1b42 <__divmodhi4>
     b66:	cb 01       	movw	r24, r22
	distance = D_to_distance(average); //convert value to distance.
     b68:	d5 df       	rcall	.-86     	; 0xb14 <D_to_distance>
	return distance;
}
     b6a:	df 91       	pop	r29
     b6c:	cf 91       	pop	r28
     b6e:	1f 91       	pop	r17
     b70:	0f 91       	pop	r16
     b72:	ff 90       	pop	r15
     b74:	08 95       	ret

00000b76 <ping_init>:

//Initialize ping sensor
void ping_init(){
	TCCR1A = 0x00; //don't care Compare Output Mode. Set Waveform Generator Mode: 00.
     b76:	1f bc       	out	0x2f, r1	; 47
	TCCR1B = 0xC2; //set Noise Canceler, Capture rising edge, prescaler = 64.
     b78:	82 ec       	ldi	r24, 0xC2	; 194
     b7a:	8e bd       	out	0x2e, r24	; 46
	TCCR1C = 0x00; //set to zero, Force output compare is not used.
     b7c:	10 92 7a 00 	sts	0x007A, r1
	TIMSK = (1<<TICIE1)|(1<<TOIE1); //Enable Input Capture Interrupt and Overflow Interrupt.
     b80:	84 e2       	ldi	r24, 0x24	; 36
     b82:	87 bf       	out	0x37, r24	; 55
	DDRD = 0; //set port D to input.
     b84:	11 ba       	out	0x11, r1	; 17
	sei();
     b86:	78 94       	sei
     b88:	08 95       	ret

00000b8a <send_pulse>:
}

//send out a pulse on PD4
void send_pulse(){
	TIMSK &= (0<<TICIE1)|(0<<TOIE1); //disable interrupts
     b8a:	87 b7       	in	r24, 0x37	; 55
     b8c:	17 be       	out	0x37, r1	; 55
	
	DDRD |= 0x10; //set PD4 as output
     b8e:	8c 9a       	sbi	0x11, 4	; 17
	PORTD |= 0x10; //set PD4 to high
     b90:	94 9a       	sbi	0x12, 4	; 18
	wait_ms(1);
     b92:	81 e0       	ldi	r24, 0x01	; 1
     b94:	90 e0       	ldi	r25, 0x00	; 0
     b96:	f7 de       	rcall	.-530    	; 0x986 <wait_ms>
	PORTD &= 0xEF; //set PD4 to low
     b98:	94 98       	cbi	0x12, 4	; 18
	DDRD &= 0xEF; //set PD4 as input
     b9a:	8c 98       	cbi	0x11, 4	; 17
	
	TIFR &= (0<<ICF1); //Clear Input Capture Flag
     b9c:	86 b7       	in	r24, 0x36	; 54
     b9e:	16 be       	out	0x36, r1	; 54
	TIMSK |= (1<<TICIE1)|(1<<TOIE1); //Enable Input Capture Interrupt and Overflow Interrupt.
     ba0:	87 b7       	in	r24, 0x37	; 55
     ba2:	84 62       	ori	r24, 0x24	; 36
     ba4:	87 bf       	out	0x37, r24	; 55
     ba6:	08 95       	ret

00000ba8 <timer3_init>:
}

//Initialize timer3
void timer3_init(){
	OCR3A = pulse_interval - 1; //number of cycles in the interval
     ba8:	80 91 09 01 	lds	r24, 0x0109
     bac:	90 91 0a 01 	lds	r25, 0x010A
     bb0:	01 97       	sbiw	r24, 0x01	; 1
     bb2:	90 93 87 00 	sts	0x0087, r25
     bb6:	80 93 86 00 	sts	0x0086, r24
	OCR3B = mid_point - 1; //move servo to the middle
     bba:	80 91 07 01 	lds	r24, 0x0107
     bbe:	90 91 08 01 	lds	r25, 0x0108
     bc2:	01 97       	sbiw	r24, 0x01	; 1
     bc4:	90 93 85 00 	sts	0x0085, r25
     bc8:	80 93 84 00 	sts	0x0084, r24
	TCCR3A = 0b10101011; //set COM and WGM
     bcc:	8b ea       	ldi	r24, 0xAB	; 171
     bce:	80 93 8b 00 	sts	0x008B, r24
	TCCR3B = 0b00011010; //set WGM and CS
     bd2:	8a e1       	ldi	r24, 0x1A	; 26
     bd4:	80 93 8a 00 	sts	0x008A, r24
	TCCR3C = 0; //don't need
     bd8:	10 92 8c 00 	sts	0x008C, r1
	
	DDRE |= _BV(4); //set Port E pin4 (OCR3B) as output
     bdc:	14 9a       	sbi	0x02, 4	; 2
     bde:	08 95       	ret

00000be0 <move_servo>:
//move servo to a certain degree
void move_servo(unsigned int degree){
	
	//pulse_width = round(degree * 18.47222 + 700); //calculate pulse width -- ROBO#8
	//pulse_width = round(degree * 18.88889 + 1200); //calculate pulse width -- ROBO#6
	pulse_width = round(degree * 20.01 + 800); //calculate pulse width -- ROBO#6
     be0:	bc 01       	movw	r22, r24
     be2:	80 e0       	ldi	r24, 0x00	; 0
     be4:	90 e0       	ldi	r25, 0x00	; 0
     be6:	14 d1       	rcall	.+552    	; 0xe10 <__floatunsisf>
     be8:	2b e7       	ldi	r18, 0x7B	; 123
     bea:	34 e1       	ldi	r19, 0x14	; 20
     bec:	40 ea       	ldi	r20, 0xA0	; 160
     bee:	51 e4       	ldi	r21, 0x41	; 65
     bf0:	c5 d1       	rcall	.+906    	; 0xf7c <__mulsf3>
     bf2:	20 e0       	ldi	r18, 0x00	; 0
     bf4:	30 e0       	ldi	r19, 0x00	; 0
     bf6:	48 e4       	ldi	r20, 0x48	; 72
     bf8:	54 e4       	ldi	r21, 0x44	; 68
     bfa:	0e d0       	rcall	.+28     	; 0xc18 <__addsf3>
     bfc:	6e d2       	rcall	.+1244   	; 0x10da <round>
     bfe:	dc d0       	rcall	.+440    	; 0xdb8 <__fixunssfsi>
     c00:	70 93 0e 02 	sts	0x020E, r23
     c04:	60 93 0d 02 	sts	0x020D, r22
	OCR3B = pulse_width - 1; //set pulse width
     c08:	61 50       	subi	r22, 0x01	; 1
     c0a:	71 09       	sbc	r23, r1
     c0c:	70 93 85 00 	sts	0x0085, r23
     c10:	60 93 84 00 	sts	0x0084, r22
     c14:	08 95       	ret

00000c16 <__subsf3>:
     c16:	50 58       	subi	r21, 0x80	; 128

00000c18 <__addsf3>:
     c18:	bb 27       	eor	r27, r27
     c1a:	aa 27       	eor	r26, r26
     c1c:	0e d0       	rcall	.+28     	; 0xc3a <__addsf3x>
     c1e:	70 c1       	rjmp	.+736    	; 0xf00 <__fp_round>
     c20:	61 d1       	rcall	.+706    	; 0xee4 <__fp_pscA>
     c22:	30 f0       	brcs	.+12     	; 0xc30 <__addsf3+0x18>
     c24:	66 d1       	rcall	.+716    	; 0xef2 <__fp_pscB>
     c26:	20 f0       	brcs	.+8      	; 0xc30 <__addsf3+0x18>
     c28:	31 f4       	brne	.+12     	; 0xc36 <__addsf3+0x1e>
     c2a:	9f 3f       	cpi	r25, 0xFF	; 255
     c2c:	11 f4       	brne	.+4      	; 0xc32 <__addsf3+0x1a>
     c2e:	1e f4       	brtc	.+6      	; 0xc36 <__addsf3+0x1e>
     c30:	56 c1       	rjmp	.+684    	; 0xede <__fp_nan>
     c32:	0e f4       	brtc	.+2      	; 0xc36 <__addsf3+0x1e>
     c34:	e0 95       	com	r30
     c36:	e7 fb       	bst	r30, 7
     c38:	4c c1       	rjmp	.+664    	; 0xed2 <__fp_inf>

00000c3a <__addsf3x>:
     c3a:	e9 2f       	mov	r30, r25
     c3c:	72 d1       	rcall	.+740    	; 0xf22 <__fp_split3>
     c3e:	80 f3       	brcs	.-32     	; 0xc20 <__addsf3+0x8>
     c40:	ba 17       	cp	r27, r26
     c42:	62 07       	cpc	r22, r18
     c44:	73 07       	cpc	r23, r19
     c46:	84 07       	cpc	r24, r20
     c48:	95 07       	cpc	r25, r21
     c4a:	18 f0       	brcs	.+6      	; 0xc52 <__addsf3x+0x18>
     c4c:	71 f4       	brne	.+28     	; 0xc6a <__addsf3x+0x30>
     c4e:	9e f5       	brtc	.+102    	; 0xcb6 <__addsf3x+0x7c>
     c50:	8a c1       	rjmp	.+788    	; 0xf66 <__fp_zero>
     c52:	0e f4       	brtc	.+2      	; 0xc56 <__addsf3x+0x1c>
     c54:	e0 95       	com	r30
     c56:	0b 2e       	mov	r0, r27
     c58:	ba 2f       	mov	r27, r26
     c5a:	a0 2d       	mov	r26, r0
     c5c:	0b 01       	movw	r0, r22
     c5e:	b9 01       	movw	r22, r18
     c60:	90 01       	movw	r18, r0
     c62:	0c 01       	movw	r0, r24
     c64:	ca 01       	movw	r24, r20
     c66:	a0 01       	movw	r20, r0
     c68:	11 24       	eor	r1, r1
     c6a:	ff 27       	eor	r31, r31
     c6c:	59 1b       	sub	r21, r25
     c6e:	99 f0       	breq	.+38     	; 0xc96 <__addsf3x+0x5c>
     c70:	59 3f       	cpi	r21, 0xF9	; 249
     c72:	50 f4       	brcc	.+20     	; 0xc88 <__addsf3x+0x4e>
     c74:	50 3e       	cpi	r21, 0xE0	; 224
     c76:	68 f1       	brcs	.+90     	; 0xcd2 <__addsf3x+0x98>
     c78:	1a 16       	cp	r1, r26
     c7a:	f0 40       	sbci	r31, 0x00	; 0
     c7c:	a2 2f       	mov	r26, r18
     c7e:	23 2f       	mov	r18, r19
     c80:	34 2f       	mov	r19, r20
     c82:	44 27       	eor	r20, r20
     c84:	58 5f       	subi	r21, 0xF8	; 248
     c86:	f3 cf       	rjmp	.-26     	; 0xc6e <__addsf3x+0x34>
     c88:	46 95       	lsr	r20
     c8a:	37 95       	ror	r19
     c8c:	27 95       	ror	r18
     c8e:	a7 95       	ror	r26
     c90:	f0 40       	sbci	r31, 0x00	; 0
     c92:	53 95       	inc	r21
     c94:	c9 f7       	brne	.-14     	; 0xc88 <__addsf3x+0x4e>
     c96:	7e f4       	brtc	.+30     	; 0xcb6 <__addsf3x+0x7c>
     c98:	1f 16       	cp	r1, r31
     c9a:	ba 0b       	sbc	r27, r26
     c9c:	62 0b       	sbc	r22, r18
     c9e:	73 0b       	sbc	r23, r19
     ca0:	84 0b       	sbc	r24, r20
     ca2:	ba f0       	brmi	.+46     	; 0xcd2 <__addsf3x+0x98>
     ca4:	91 50       	subi	r25, 0x01	; 1
     ca6:	a1 f0       	breq	.+40     	; 0xcd0 <__addsf3x+0x96>
     ca8:	ff 0f       	add	r31, r31
     caa:	bb 1f       	adc	r27, r27
     cac:	66 1f       	adc	r22, r22
     cae:	77 1f       	adc	r23, r23
     cb0:	88 1f       	adc	r24, r24
     cb2:	c2 f7       	brpl	.-16     	; 0xca4 <__addsf3x+0x6a>
     cb4:	0e c0       	rjmp	.+28     	; 0xcd2 <__addsf3x+0x98>
     cb6:	ba 0f       	add	r27, r26
     cb8:	62 1f       	adc	r22, r18
     cba:	73 1f       	adc	r23, r19
     cbc:	84 1f       	adc	r24, r20
     cbe:	48 f4       	brcc	.+18     	; 0xcd2 <__addsf3x+0x98>
     cc0:	87 95       	ror	r24
     cc2:	77 95       	ror	r23
     cc4:	67 95       	ror	r22
     cc6:	b7 95       	ror	r27
     cc8:	f7 95       	ror	r31
     cca:	9e 3f       	cpi	r25, 0xFE	; 254
     ccc:	08 f0       	brcs	.+2      	; 0xcd0 <__addsf3x+0x96>
     cce:	b3 cf       	rjmp	.-154    	; 0xc36 <__addsf3+0x1e>
     cd0:	93 95       	inc	r25
     cd2:	88 0f       	add	r24, r24
     cd4:	08 f0       	brcs	.+2      	; 0xcd8 <__addsf3x+0x9e>
     cd6:	99 27       	eor	r25, r25
     cd8:	ee 0f       	add	r30, r30
     cda:	97 95       	ror	r25
     cdc:	87 95       	ror	r24
     cde:	08 95       	ret

00000ce0 <__cmpsf2>:
     ce0:	d4 d0       	rcall	.+424    	; 0xe8a <__fp_cmp>
     ce2:	08 f4       	brcc	.+2      	; 0xce6 <__cmpsf2+0x6>
     ce4:	81 e0       	ldi	r24, 0x01	; 1
     ce6:	08 95       	ret

00000ce8 <__divsf3>:
     ce8:	0c d0       	rcall	.+24     	; 0xd02 <__divsf3x>
     cea:	0a c1       	rjmp	.+532    	; 0xf00 <__fp_round>
     cec:	02 d1       	rcall	.+516    	; 0xef2 <__fp_pscB>
     cee:	40 f0       	brcs	.+16     	; 0xd00 <__divsf3+0x18>
     cf0:	f9 d0       	rcall	.+498    	; 0xee4 <__fp_pscA>
     cf2:	30 f0       	brcs	.+12     	; 0xd00 <__divsf3+0x18>
     cf4:	21 f4       	brne	.+8      	; 0xcfe <__divsf3+0x16>
     cf6:	5f 3f       	cpi	r21, 0xFF	; 255
     cf8:	19 f0       	breq	.+6      	; 0xd00 <__divsf3+0x18>
     cfa:	eb c0       	rjmp	.+470    	; 0xed2 <__fp_inf>
     cfc:	51 11       	cpse	r21, r1
     cfe:	34 c1       	rjmp	.+616    	; 0xf68 <__fp_szero>
     d00:	ee c0       	rjmp	.+476    	; 0xede <__fp_nan>

00000d02 <__divsf3x>:
     d02:	0f d1       	rcall	.+542    	; 0xf22 <__fp_split3>
     d04:	98 f3       	brcs	.-26     	; 0xcec <__divsf3+0x4>

00000d06 <__divsf3_pse>:
     d06:	99 23       	and	r25, r25
     d08:	c9 f3       	breq	.-14     	; 0xcfc <__divsf3+0x14>
     d0a:	55 23       	and	r21, r21
     d0c:	b1 f3       	breq	.-20     	; 0xcfa <__divsf3+0x12>
     d0e:	95 1b       	sub	r25, r21
     d10:	55 0b       	sbc	r21, r21
     d12:	bb 27       	eor	r27, r27
     d14:	aa 27       	eor	r26, r26
     d16:	62 17       	cp	r22, r18
     d18:	73 07       	cpc	r23, r19
     d1a:	84 07       	cpc	r24, r20
     d1c:	38 f0       	brcs	.+14     	; 0xd2c <__divsf3_pse+0x26>
     d1e:	9f 5f       	subi	r25, 0xFF	; 255
     d20:	5f 4f       	sbci	r21, 0xFF	; 255
     d22:	22 0f       	add	r18, r18
     d24:	33 1f       	adc	r19, r19
     d26:	44 1f       	adc	r20, r20
     d28:	aa 1f       	adc	r26, r26
     d2a:	a9 f3       	breq	.-22     	; 0xd16 <__divsf3_pse+0x10>
     d2c:	33 d0       	rcall	.+102    	; 0xd94 <__divsf3_pse+0x8e>
     d2e:	0e 2e       	mov	r0, r30
     d30:	3a f0       	brmi	.+14     	; 0xd40 <__divsf3_pse+0x3a>
     d32:	e0 e8       	ldi	r30, 0x80	; 128
     d34:	30 d0       	rcall	.+96     	; 0xd96 <__divsf3_pse+0x90>
     d36:	91 50       	subi	r25, 0x01	; 1
     d38:	50 40       	sbci	r21, 0x00	; 0
     d3a:	e6 95       	lsr	r30
     d3c:	00 1c       	adc	r0, r0
     d3e:	ca f7       	brpl	.-14     	; 0xd32 <__divsf3_pse+0x2c>
     d40:	29 d0       	rcall	.+82     	; 0xd94 <__divsf3_pse+0x8e>
     d42:	fe 2f       	mov	r31, r30
     d44:	27 d0       	rcall	.+78     	; 0xd94 <__divsf3_pse+0x8e>
     d46:	66 0f       	add	r22, r22
     d48:	77 1f       	adc	r23, r23
     d4a:	88 1f       	adc	r24, r24
     d4c:	bb 1f       	adc	r27, r27
     d4e:	26 17       	cp	r18, r22
     d50:	37 07       	cpc	r19, r23
     d52:	48 07       	cpc	r20, r24
     d54:	ab 07       	cpc	r26, r27
     d56:	b0 e8       	ldi	r27, 0x80	; 128
     d58:	09 f0       	breq	.+2      	; 0xd5c <__divsf3_pse+0x56>
     d5a:	bb 0b       	sbc	r27, r27
     d5c:	80 2d       	mov	r24, r0
     d5e:	bf 01       	movw	r22, r30
     d60:	ff 27       	eor	r31, r31
     d62:	93 58       	subi	r25, 0x83	; 131
     d64:	5f 4f       	sbci	r21, 0xFF	; 255
     d66:	2a f0       	brmi	.+10     	; 0xd72 <__divsf3_pse+0x6c>
     d68:	9e 3f       	cpi	r25, 0xFE	; 254
     d6a:	51 05       	cpc	r21, r1
     d6c:	68 f0       	brcs	.+26     	; 0xd88 <__divsf3_pse+0x82>
     d6e:	b1 c0       	rjmp	.+354    	; 0xed2 <__fp_inf>
     d70:	fb c0       	rjmp	.+502    	; 0xf68 <__fp_szero>
     d72:	5f 3f       	cpi	r21, 0xFF	; 255
     d74:	ec f3       	brlt	.-6      	; 0xd70 <__divsf3_pse+0x6a>
     d76:	98 3e       	cpi	r25, 0xE8	; 232
     d78:	dc f3       	brlt	.-10     	; 0xd70 <__divsf3_pse+0x6a>
     d7a:	86 95       	lsr	r24
     d7c:	77 95       	ror	r23
     d7e:	67 95       	ror	r22
     d80:	b7 95       	ror	r27
     d82:	f7 95       	ror	r31
     d84:	9f 5f       	subi	r25, 0xFF	; 255
     d86:	c9 f7       	brne	.-14     	; 0xd7a <__divsf3_pse+0x74>
     d88:	88 0f       	add	r24, r24
     d8a:	91 1d       	adc	r25, r1
     d8c:	96 95       	lsr	r25
     d8e:	87 95       	ror	r24
     d90:	97 f9       	bld	r25, 7
     d92:	08 95       	ret
     d94:	e1 e0       	ldi	r30, 0x01	; 1
     d96:	66 0f       	add	r22, r22
     d98:	77 1f       	adc	r23, r23
     d9a:	88 1f       	adc	r24, r24
     d9c:	bb 1f       	adc	r27, r27
     d9e:	62 17       	cp	r22, r18
     da0:	73 07       	cpc	r23, r19
     da2:	84 07       	cpc	r24, r20
     da4:	ba 07       	cpc	r27, r26
     da6:	20 f0       	brcs	.+8      	; 0xdb0 <__divsf3_pse+0xaa>
     da8:	62 1b       	sub	r22, r18
     daa:	73 0b       	sbc	r23, r19
     dac:	84 0b       	sbc	r24, r20
     dae:	ba 0b       	sbc	r27, r26
     db0:	ee 1f       	adc	r30, r30
     db2:	88 f7       	brcc	.-30     	; 0xd96 <__divsf3_pse+0x90>
     db4:	e0 95       	com	r30
     db6:	08 95       	ret

00000db8 <__fixunssfsi>:
     db8:	bc d0       	rcall	.+376    	; 0xf32 <__fp_splitA>
     dba:	88 f0       	brcs	.+34     	; 0xdde <__fixunssfsi+0x26>
     dbc:	9f 57       	subi	r25, 0x7F	; 127
     dbe:	90 f0       	brcs	.+36     	; 0xde4 <__fixunssfsi+0x2c>
     dc0:	b9 2f       	mov	r27, r25
     dc2:	99 27       	eor	r25, r25
     dc4:	b7 51       	subi	r27, 0x17	; 23
     dc6:	a0 f0       	brcs	.+40     	; 0xdf0 <__fixunssfsi+0x38>
     dc8:	d1 f0       	breq	.+52     	; 0xdfe <__fixunssfsi+0x46>
     dca:	66 0f       	add	r22, r22
     dcc:	77 1f       	adc	r23, r23
     dce:	88 1f       	adc	r24, r24
     dd0:	99 1f       	adc	r25, r25
     dd2:	1a f0       	brmi	.+6      	; 0xdda <__fixunssfsi+0x22>
     dd4:	ba 95       	dec	r27
     dd6:	c9 f7       	brne	.-14     	; 0xdca <__fixunssfsi+0x12>
     dd8:	12 c0       	rjmp	.+36     	; 0xdfe <__fixunssfsi+0x46>
     dda:	b1 30       	cpi	r27, 0x01	; 1
     ddc:	81 f0       	breq	.+32     	; 0xdfe <__fixunssfsi+0x46>
     dde:	c3 d0       	rcall	.+390    	; 0xf66 <__fp_zero>
     de0:	b1 e0       	ldi	r27, 0x01	; 1
     de2:	08 95       	ret
     de4:	c0 c0       	rjmp	.+384    	; 0xf66 <__fp_zero>
     de6:	67 2f       	mov	r22, r23
     de8:	78 2f       	mov	r23, r24
     dea:	88 27       	eor	r24, r24
     dec:	b8 5f       	subi	r27, 0xF8	; 248
     dee:	39 f0       	breq	.+14     	; 0xdfe <__fixunssfsi+0x46>
     df0:	b9 3f       	cpi	r27, 0xF9	; 249
     df2:	cc f3       	brlt	.-14     	; 0xde6 <__fixunssfsi+0x2e>
     df4:	86 95       	lsr	r24
     df6:	77 95       	ror	r23
     df8:	67 95       	ror	r22
     dfa:	b3 95       	inc	r27
     dfc:	d9 f7       	brne	.-10     	; 0xdf4 <__fixunssfsi+0x3c>
     dfe:	3e f4       	brtc	.+14     	; 0xe0e <__fixunssfsi+0x56>
     e00:	90 95       	com	r25
     e02:	80 95       	com	r24
     e04:	70 95       	com	r23
     e06:	61 95       	neg	r22
     e08:	7f 4f       	sbci	r23, 0xFF	; 255
     e0a:	8f 4f       	sbci	r24, 0xFF	; 255
     e0c:	9f 4f       	sbci	r25, 0xFF	; 255
     e0e:	08 95       	ret

00000e10 <__floatunsisf>:
     e10:	e8 94       	clt
     e12:	09 c0       	rjmp	.+18     	; 0xe26 <__floatsisf+0x12>

00000e14 <__floatsisf>:
     e14:	97 fb       	bst	r25, 7
     e16:	3e f4       	brtc	.+14     	; 0xe26 <__floatsisf+0x12>
     e18:	90 95       	com	r25
     e1a:	80 95       	com	r24
     e1c:	70 95       	com	r23
     e1e:	61 95       	neg	r22
     e20:	7f 4f       	sbci	r23, 0xFF	; 255
     e22:	8f 4f       	sbci	r24, 0xFF	; 255
     e24:	9f 4f       	sbci	r25, 0xFF	; 255
     e26:	99 23       	and	r25, r25
     e28:	a9 f0       	breq	.+42     	; 0xe54 <__floatsisf+0x40>
     e2a:	f9 2f       	mov	r31, r25
     e2c:	96 e9       	ldi	r25, 0x96	; 150
     e2e:	bb 27       	eor	r27, r27
     e30:	93 95       	inc	r25
     e32:	f6 95       	lsr	r31
     e34:	87 95       	ror	r24
     e36:	77 95       	ror	r23
     e38:	67 95       	ror	r22
     e3a:	b7 95       	ror	r27
     e3c:	f1 11       	cpse	r31, r1
     e3e:	f8 cf       	rjmp	.-16     	; 0xe30 <__floatsisf+0x1c>
     e40:	fa f4       	brpl	.+62     	; 0xe80 <__floatsisf+0x6c>
     e42:	bb 0f       	add	r27, r27
     e44:	11 f4       	brne	.+4      	; 0xe4a <__floatsisf+0x36>
     e46:	60 ff       	sbrs	r22, 0
     e48:	1b c0       	rjmp	.+54     	; 0xe80 <__floatsisf+0x6c>
     e4a:	6f 5f       	subi	r22, 0xFF	; 255
     e4c:	7f 4f       	sbci	r23, 0xFF	; 255
     e4e:	8f 4f       	sbci	r24, 0xFF	; 255
     e50:	9f 4f       	sbci	r25, 0xFF	; 255
     e52:	16 c0       	rjmp	.+44     	; 0xe80 <__floatsisf+0x6c>
     e54:	88 23       	and	r24, r24
     e56:	11 f0       	breq	.+4      	; 0xe5c <__floatsisf+0x48>
     e58:	96 e9       	ldi	r25, 0x96	; 150
     e5a:	11 c0       	rjmp	.+34     	; 0xe7e <__floatsisf+0x6a>
     e5c:	77 23       	and	r23, r23
     e5e:	21 f0       	breq	.+8      	; 0xe68 <__floatsisf+0x54>
     e60:	9e e8       	ldi	r25, 0x8E	; 142
     e62:	87 2f       	mov	r24, r23
     e64:	76 2f       	mov	r23, r22
     e66:	05 c0       	rjmp	.+10     	; 0xe72 <__floatsisf+0x5e>
     e68:	66 23       	and	r22, r22
     e6a:	71 f0       	breq	.+28     	; 0xe88 <__floatsisf+0x74>
     e6c:	96 e8       	ldi	r25, 0x86	; 134
     e6e:	86 2f       	mov	r24, r22
     e70:	70 e0       	ldi	r23, 0x00	; 0
     e72:	60 e0       	ldi	r22, 0x00	; 0
     e74:	2a f0       	brmi	.+10     	; 0xe80 <__floatsisf+0x6c>
     e76:	9a 95       	dec	r25
     e78:	66 0f       	add	r22, r22
     e7a:	77 1f       	adc	r23, r23
     e7c:	88 1f       	adc	r24, r24
     e7e:	da f7       	brpl	.-10     	; 0xe76 <__floatsisf+0x62>
     e80:	88 0f       	add	r24, r24
     e82:	96 95       	lsr	r25
     e84:	87 95       	ror	r24
     e86:	97 f9       	bld	r25, 7
     e88:	08 95       	ret

00000e8a <__fp_cmp>:
     e8a:	99 0f       	add	r25, r25
     e8c:	00 08       	sbc	r0, r0
     e8e:	55 0f       	add	r21, r21
     e90:	aa 0b       	sbc	r26, r26
     e92:	e0 e8       	ldi	r30, 0x80	; 128
     e94:	fe ef       	ldi	r31, 0xFE	; 254
     e96:	16 16       	cp	r1, r22
     e98:	17 06       	cpc	r1, r23
     e9a:	e8 07       	cpc	r30, r24
     e9c:	f9 07       	cpc	r31, r25
     e9e:	c0 f0       	brcs	.+48     	; 0xed0 <__fp_cmp+0x46>
     ea0:	12 16       	cp	r1, r18
     ea2:	13 06       	cpc	r1, r19
     ea4:	e4 07       	cpc	r30, r20
     ea6:	f5 07       	cpc	r31, r21
     ea8:	98 f0       	brcs	.+38     	; 0xed0 <__fp_cmp+0x46>
     eaa:	62 1b       	sub	r22, r18
     eac:	73 0b       	sbc	r23, r19
     eae:	84 0b       	sbc	r24, r20
     eb0:	95 0b       	sbc	r25, r21
     eb2:	39 f4       	brne	.+14     	; 0xec2 <__fp_cmp+0x38>
     eb4:	0a 26       	eor	r0, r26
     eb6:	61 f0       	breq	.+24     	; 0xed0 <__fp_cmp+0x46>
     eb8:	23 2b       	or	r18, r19
     eba:	24 2b       	or	r18, r20
     ebc:	25 2b       	or	r18, r21
     ebe:	21 f4       	brne	.+8      	; 0xec8 <__fp_cmp+0x3e>
     ec0:	08 95       	ret
     ec2:	0a 26       	eor	r0, r26
     ec4:	09 f4       	brne	.+2      	; 0xec8 <__fp_cmp+0x3e>
     ec6:	a1 40       	sbci	r26, 0x01	; 1
     ec8:	a6 95       	lsr	r26
     eca:	8f ef       	ldi	r24, 0xFF	; 255
     ecc:	81 1d       	adc	r24, r1
     ece:	81 1d       	adc	r24, r1
     ed0:	08 95       	ret

00000ed2 <__fp_inf>:
     ed2:	97 f9       	bld	r25, 7
     ed4:	9f 67       	ori	r25, 0x7F	; 127
     ed6:	80 e8       	ldi	r24, 0x80	; 128
     ed8:	70 e0       	ldi	r23, 0x00	; 0
     eda:	60 e0       	ldi	r22, 0x00	; 0
     edc:	08 95       	ret

00000ede <__fp_nan>:
     ede:	9f ef       	ldi	r25, 0xFF	; 255
     ee0:	80 ec       	ldi	r24, 0xC0	; 192
     ee2:	08 95       	ret

00000ee4 <__fp_pscA>:
     ee4:	00 24       	eor	r0, r0
     ee6:	0a 94       	dec	r0
     ee8:	16 16       	cp	r1, r22
     eea:	17 06       	cpc	r1, r23
     eec:	18 06       	cpc	r1, r24
     eee:	09 06       	cpc	r0, r25
     ef0:	08 95       	ret

00000ef2 <__fp_pscB>:
     ef2:	00 24       	eor	r0, r0
     ef4:	0a 94       	dec	r0
     ef6:	12 16       	cp	r1, r18
     ef8:	13 06       	cpc	r1, r19
     efa:	14 06       	cpc	r1, r20
     efc:	05 06       	cpc	r0, r21
     efe:	08 95       	ret

00000f00 <__fp_round>:
     f00:	09 2e       	mov	r0, r25
     f02:	03 94       	inc	r0
     f04:	00 0c       	add	r0, r0
     f06:	11 f4       	brne	.+4      	; 0xf0c <__fp_round+0xc>
     f08:	88 23       	and	r24, r24
     f0a:	52 f0       	brmi	.+20     	; 0xf20 <__fp_round+0x20>
     f0c:	bb 0f       	add	r27, r27
     f0e:	40 f4       	brcc	.+16     	; 0xf20 <__fp_round+0x20>
     f10:	bf 2b       	or	r27, r31
     f12:	11 f4       	brne	.+4      	; 0xf18 <__fp_round+0x18>
     f14:	60 ff       	sbrs	r22, 0
     f16:	04 c0       	rjmp	.+8      	; 0xf20 <__fp_round+0x20>
     f18:	6f 5f       	subi	r22, 0xFF	; 255
     f1a:	7f 4f       	sbci	r23, 0xFF	; 255
     f1c:	8f 4f       	sbci	r24, 0xFF	; 255
     f1e:	9f 4f       	sbci	r25, 0xFF	; 255
     f20:	08 95       	ret

00000f22 <__fp_split3>:
     f22:	57 fd       	sbrc	r21, 7
     f24:	90 58       	subi	r25, 0x80	; 128
     f26:	44 0f       	add	r20, r20
     f28:	55 1f       	adc	r21, r21
     f2a:	59 f0       	breq	.+22     	; 0xf42 <__fp_splitA+0x10>
     f2c:	5f 3f       	cpi	r21, 0xFF	; 255
     f2e:	71 f0       	breq	.+28     	; 0xf4c <__fp_splitA+0x1a>
     f30:	47 95       	ror	r20

00000f32 <__fp_splitA>:
     f32:	88 0f       	add	r24, r24
     f34:	97 fb       	bst	r25, 7
     f36:	99 1f       	adc	r25, r25
     f38:	61 f0       	breq	.+24     	; 0xf52 <__fp_splitA+0x20>
     f3a:	9f 3f       	cpi	r25, 0xFF	; 255
     f3c:	79 f0       	breq	.+30     	; 0xf5c <__fp_splitA+0x2a>
     f3e:	87 95       	ror	r24
     f40:	08 95       	ret
     f42:	12 16       	cp	r1, r18
     f44:	13 06       	cpc	r1, r19
     f46:	14 06       	cpc	r1, r20
     f48:	55 1f       	adc	r21, r21
     f4a:	f2 cf       	rjmp	.-28     	; 0xf30 <__fp_split3+0xe>
     f4c:	46 95       	lsr	r20
     f4e:	f1 df       	rcall	.-30     	; 0xf32 <__fp_splitA>
     f50:	08 c0       	rjmp	.+16     	; 0xf62 <__fp_splitA+0x30>
     f52:	16 16       	cp	r1, r22
     f54:	17 06       	cpc	r1, r23
     f56:	18 06       	cpc	r1, r24
     f58:	99 1f       	adc	r25, r25
     f5a:	f1 cf       	rjmp	.-30     	; 0xf3e <__fp_splitA+0xc>
     f5c:	86 95       	lsr	r24
     f5e:	71 05       	cpc	r23, r1
     f60:	61 05       	cpc	r22, r1
     f62:	08 94       	sec
     f64:	08 95       	ret

00000f66 <__fp_zero>:
     f66:	e8 94       	clt

00000f68 <__fp_szero>:
     f68:	bb 27       	eor	r27, r27
     f6a:	66 27       	eor	r22, r22
     f6c:	77 27       	eor	r23, r23
     f6e:	cb 01       	movw	r24, r22
     f70:	97 f9       	bld	r25, 7
     f72:	08 95       	ret

00000f74 <__gesf2>:
     f74:	8a df       	rcall	.-236    	; 0xe8a <__fp_cmp>
     f76:	08 f4       	brcc	.+2      	; 0xf7a <__gesf2+0x6>
     f78:	8f ef       	ldi	r24, 0xFF	; 255
     f7a:	08 95       	ret

00000f7c <__mulsf3>:
     f7c:	0b d0       	rcall	.+22     	; 0xf94 <__mulsf3x>
     f7e:	c0 cf       	rjmp	.-128    	; 0xf00 <__fp_round>
     f80:	b1 df       	rcall	.-158    	; 0xee4 <__fp_pscA>
     f82:	28 f0       	brcs	.+10     	; 0xf8e <__mulsf3+0x12>
     f84:	b6 df       	rcall	.-148    	; 0xef2 <__fp_pscB>
     f86:	18 f0       	brcs	.+6      	; 0xf8e <__mulsf3+0x12>
     f88:	95 23       	and	r25, r21
     f8a:	09 f0       	breq	.+2      	; 0xf8e <__mulsf3+0x12>
     f8c:	a2 cf       	rjmp	.-188    	; 0xed2 <__fp_inf>
     f8e:	a7 cf       	rjmp	.-178    	; 0xede <__fp_nan>
     f90:	11 24       	eor	r1, r1
     f92:	ea cf       	rjmp	.-44     	; 0xf68 <__fp_szero>

00000f94 <__mulsf3x>:
     f94:	c6 df       	rcall	.-116    	; 0xf22 <__fp_split3>
     f96:	a0 f3       	brcs	.-24     	; 0xf80 <__mulsf3+0x4>

00000f98 <__mulsf3_pse>:
     f98:	95 9f       	mul	r25, r21
     f9a:	d1 f3       	breq	.-12     	; 0xf90 <__mulsf3+0x14>
     f9c:	95 0f       	add	r25, r21
     f9e:	50 e0       	ldi	r21, 0x00	; 0
     fa0:	55 1f       	adc	r21, r21
     fa2:	62 9f       	mul	r22, r18
     fa4:	f0 01       	movw	r30, r0
     fa6:	72 9f       	mul	r23, r18
     fa8:	bb 27       	eor	r27, r27
     faa:	f0 0d       	add	r31, r0
     fac:	b1 1d       	adc	r27, r1
     fae:	63 9f       	mul	r22, r19
     fb0:	aa 27       	eor	r26, r26
     fb2:	f0 0d       	add	r31, r0
     fb4:	b1 1d       	adc	r27, r1
     fb6:	aa 1f       	adc	r26, r26
     fb8:	64 9f       	mul	r22, r20
     fba:	66 27       	eor	r22, r22
     fbc:	b0 0d       	add	r27, r0
     fbe:	a1 1d       	adc	r26, r1
     fc0:	66 1f       	adc	r22, r22
     fc2:	82 9f       	mul	r24, r18
     fc4:	22 27       	eor	r18, r18
     fc6:	b0 0d       	add	r27, r0
     fc8:	a1 1d       	adc	r26, r1
     fca:	62 1f       	adc	r22, r18
     fcc:	73 9f       	mul	r23, r19
     fce:	b0 0d       	add	r27, r0
     fd0:	a1 1d       	adc	r26, r1
     fd2:	62 1f       	adc	r22, r18
     fd4:	83 9f       	mul	r24, r19
     fd6:	a0 0d       	add	r26, r0
     fd8:	61 1d       	adc	r22, r1
     fda:	22 1f       	adc	r18, r18
     fdc:	74 9f       	mul	r23, r20
     fde:	33 27       	eor	r19, r19
     fe0:	a0 0d       	add	r26, r0
     fe2:	61 1d       	adc	r22, r1
     fe4:	23 1f       	adc	r18, r19
     fe6:	84 9f       	mul	r24, r20
     fe8:	60 0d       	add	r22, r0
     fea:	21 1d       	adc	r18, r1
     fec:	82 2f       	mov	r24, r18
     fee:	76 2f       	mov	r23, r22
     ff0:	6a 2f       	mov	r22, r26
     ff2:	11 24       	eor	r1, r1
     ff4:	9f 57       	subi	r25, 0x7F	; 127
     ff6:	50 40       	sbci	r21, 0x00	; 0
     ff8:	8a f0       	brmi	.+34     	; 0x101c <__mulsf3_pse+0x84>
     ffa:	e1 f0       	breq	.+56     	; 0x1034 <__mulsf3_pse+0x9c>
     ffc:	88 23       	and	r24, r24
     ffe:	4a f0       	brmi	.+18     	; 0x1012 <__mulsf3_pse+0x7a>
    1000:	ee 0f       	add	r30, r30
    1002:	ff 1f       	adc	r31, r31
    1004:	bb 1f       	adc	r27, r27
    1006:	66 1f       	adc	r22, r22
    1008:	77 1f       	adc	r23, r23
    100a:	88 1f       	adc	r24, r24
    100c:	91 50       	subi	r25, 0x01	; 1
    100e:	50 40       	sbci	r21, 0x00	; 0
    1010:	a9 f7       	brne	.-22     	; 0xffc <__mulsf3_pse+0x64>
    1012:	9e 3f       	cpi	r25, 0xFE	; 254
    1014:	51 05       	cpc	r21, r1
    1016:	70 f0       	brcs	.+28     	; 0x1034 <__mulsf3_pse+0x9c>
    1018:	5c cf       	rjmp	.-328    	; 0xed2 <__fp_inf>
    101a:	a6 cf       	rjmp	.-180    	; 0xf68 <__fp_szero>
    101c:	5f 3f       	cpi	r21, 0xFF	; 255
    101e:	ec f3       	brlt	.-6      	; 0x101a <__mulsf3_pse+0x82>
    1020:	98 3e       	cpi	r25, 0xE8	; 232
    1022:	dc f3       	brlt	.-10     	; 0x101a <__mulsf3_pse+0x82>
    1024:	86 95       	lsr	r24
    1026:	77 95       	ror	r23
    1028:	67 95       	ror	r22
    102a:	b7 95       	ror	r27
    102c:	f7 95       	ror	r31
    102e:	e7 95       	ror	r30
    1030:	9f 5f       	subi	r25, 0xFF	; 255
    1032:	c1 f7       	brne	.-16     	; 0x1024 <__mulsf3_pse+0x8c>
    1034:	fe 2b       	or	r31, r30
    1036:	88 0f       	add	r24, r24
    1038:	91 1d       	adc	r25, r1
    103a:	96 95       	lsr	r25
    103c:	87 95       	ror	r24
    103e:	97 f9       	bld	r25, 7
    1040:	08 95       	ret

00001042 <pow>:
    1042:	fa 01       	movw	r30, r20
    1044:	ee 0f       	add	r30, r30
    1046:	ff 1f       	adc	r31, r31
    1048:	30 96       	adiw	r30, 0x00	; 0
    104a:	21 05       	cpc	r18, r1
    104c:	31 05       	cpc	r19, r1
    104e:	99 f1       	breq	.+102    	; 0x10b6 <pow+0x74>
    1050:	61 15       	cp	r22, r1
    1052:	71 05       	cpc	r23, r1
    1054:	61 f4       	brne	.+24     	; 0x106e <pow+0x2c>
    1056:	80 38       	cpi	r24, 0x80	; 128
    1058:	bf e3       	ldi	r27, 0x3F	; 63
    105a:	9b 07       	cpc	r25, r27
    105c:	49 f1       	breq	.+82     	; 0x10b0 <pow+0x6e>
    105e:	68 94       	set
    1060:	90 38       	cpi	r25, 0x80	; 128
    1062:	81 05       	cpc	r24, r1
    1064:	61 f0       	breq	.+24     	; 0x107e <pow+0x3c>
    1066:	80 38       	cpi	r24, 0x80	; 128
    1068:	bf ef       	ldi	r27, 0xFF	; 255
    106a:	9b 07       	cpc	r25, r27
    106c:	41 f0       	breq	.+16     	; 0x107e <pow+0x3c>
    106e:	99 23       	and	r25, r25
    1070:	42 f5       	brpl	.+80     	; 0x10c2 <pow+0x80>
    1072:	ff 3f       	cpi	r31, 0xFF	; 255
    1074:	e1 05       	cpc	r30, r1
    1076:	31 05       	cpc	r19, r1
    1078:	21 05       	cpc	r18, r1
    107a:	11 f1       	breq	.+68     	; 0x10c0 <pow+0x7e>
    107c:	e8 94       	clt
    107e:	08 94       	sec
    1080:	e7 95       	ror	r30
    1082:	d9 01       	movw	r26, r18
    1084:	aa 23       	and	r26, r26
    1086:	29 f4       	brne	.+10     	; 0x1092 <pow+0x50>
    1088:	ab 2f       	mov	r26, r27
    108a:	be 2f       	mov	r27, r30
    108c:	f8 5f       	subi	r31, 0xF8	; 248
    108e:	d0 f3       	brcs	.-12     	; 0x1084 <pow+0x42>
    1090:	10 c0       	rjmp	.+32     	; 0x10b2 <pow+0x70>
    1092:	ff 5f       	subi	r31, 0xFF	; 255
    1094:	70 f4       	brcc	.+28     	; 0x10b2 <pow+0x70>
    1096:	a6 95       	lsr	r26
    1098:	e0 f7       	brcc	.-8      	; 0x1092 <pow+0x50>
    109a:	f7 39       	cpi	r31, 0x97	; 151
    109c:	50 f0       	brcs	.+20     	; 0x10b2 <pow+0x70>
    109e:	19 f0       	breq	.+6      	; 0x10a6 <pow+0x64>
    10a0:	ff 3a       	cpi	r31, 0xAF	; 175
    10a2:	38 f4       	brcc	.+14     	; 0x10b2 <pow+0x70>
    10a4:	9f 77       	andi	r25, 0x7F	; 127
    10a6:	9f 93       	push	r25
    10a8:	0c d0       	rcall	.+24     	; 0x10c2 <pow+0x80>
    10aa:	0f 90       	pop	r0
    10ac:	07 fc       	sbrc	r0, 7
    10ae:	90 58       	subi	r25, 0x80	; 128
    10b0:	08 95       	ret
    10b2:	3e f0       	brts	.+14     	; 0x10c2 <pow+0x80>
    10b4:	14 cf       	rjmp	.-472    	; 0xede <__fp_nan>
    10b6:	60 e0       	ldi	r22, 0x00	; 0
    10b8:	70 e0       	ldi	r23, 0x00	; 0
    10ba:	80 e8       	ldi	r24, 0x80	; 128
    10bc:	9f e3       	ldi	r25, 0x3F	; 63
    10be:	08 95       	ret
    10c0:	4f e7       	ldi	r20, 0x7F	; 127
    10c2:	9f 77       	andi	r25, 0x7F	; 127
    10c4:	5f 93       	push	r21
    10c6:	4f 93       	push	r20
    10c8:	3f 93       	push	r19
    10ca:	2f 93       	push	r18
    10cc:	40 d1       	rcall	.+640    	; 0x134e <log>
    10ce:	2f 91       	pop	r18
    10d0:	3f 91       	pop	r19
    10d2:	4f 91       	pop	r20
    10d4:	5f 91       	pop	r21
    10d6:	52 df       	rcall	.-348    	; 0xf7c <__mulsf3>
    10d8:	45 c0       	rjmp	.+138    	; 0x1164 <exp>

000010da <round>:
    10da:	2b df       	rcall	.-426    	; 0xf32 <__fp_splitA>
    10dc:	e0 f0       	brcs	.+56     	; 0x1116 <__stack+0x17>
    10de:	9e 37       	cpi	r25, 0x7E	; 126
    10e0:	d8 f0       	brcs	.+54     	; 0x1118 <__stack+0x19>
    10e2:	96 39       	cpi	r25, 0x96	; 150
    10e4:	b8 f4       	brcc	.+46     	; 0x1114 <__stack+0x15>
    10e6:	9e 38       	cpi	r25, 0x8E	; 142
    10e8:	48 f4       	brcc	.+18     	; 0x10fc <round+0x22>
    10ea:	67 2f       	mov	r22, r23
    10ec:	78 2f       	mov	r23, r24
    10ee:	88 27       	eor	r24, r24
    10f0:	98 5f       	subi	r25, 0xF8	; 248
    10f2:	f9 cf       	rjmp	.-14     	; 0x10e6 <round+0xc>
    10f4:	86 95       	lsr	r24
    10f6:	77 95       	ror	r23
    10f8:	67 95       	ror	r22
    10fa:	93 95       	inc	r25
    10fc:	95 39       	cpi	r25, 0x95	; 149
    10fe:	d0 f3       	brcs	.-12     	; 0x10f4 <round+0x1a>
    1100:	b6 2f       	mov	r27, r22
    1102:	b1 70       	andi	r27, 0x01	; 1
    1104:	6b 0f       	add	r22, r27
    1106:	71 1d       	adc	r23, r1
    1108:	81 1d       	adc	r24, r1
    110a:	20 f4       	brcc	.+8      	; 0x1114 <__stack+0x15>
    110c:	87 95       	ror	r24
    110e:	77 95       	ror	r23
    1110:	67 95       	ror	r22
    1112:	93 95       	inc	r25
    1114:	53 c0       	rjmp	.+166    	; 0x11bc <__fp_mintl>
    1116:	6d c0       	rjmp	.+218    	; 0x11f2 <__fp_mpack>
    1118:	27 cf       	rjmp	.-434    	; 0xf68 <__fp_szero>

0000111a <tan>:
    111a:	df 93       	push	r29
    111c:	d9 2f       	mov	r29, r25
    111e:	ae d0       	rcall	.+348    	; 0x127c <__fp_rempio2>
    1120:	e6 95       	lsr	r30
    1122:	d7 95       	ror	r29
    1124:	2a ed       	ldi	r18, 0xDA	; 218
    1126:	3f e0       	ldi	r19, 0x0F	; 15
    1128:	49 e4       	ldi	r20, 0x49	; 73
    112a:	5f e3       	ldi	r21, 0x3F	; 63
    112c:	b3 3a       	cpi	r27, 0xA3	; 163
    112e:	62 07       	cpc	r22, r18
    1130:	73 07       	cpc	r23, r19
    1132:	84 07       	cpc	r24, r20
    1134:	95 07       	cpc	r25, r21
    1136:	d7 95       	ror	r29
    1138:	2a f0       	brmi	.+10     	; 0x1144 <tan+0x2a>
    113a:	a2 ea       	ldi	r26, 0xA2	; 162
    113c:	49 ec       	ldi	r20, 0xC9	; 201
    113e:	90 68       	ori	r25, 0x80	; 128
    1140:	7c dd       	rcall	.-1288   	; 0xc3a <__addsf3x>
    1142:	de de       	rcall	.-580    	; 0xf00 <__fp_round>
    1144:	ec e8       	ldi	r30, 0x8C	; 140
    1146:	f0 e0       	ldi	r31, 0x00	; 0
    1148:	87 d0       	rcall	.+270    	; 0x1258 <__fp_powsodd>
    114a:	dd 0f       	add	r29, r29
    114c:	0b f0       	brvs	.+2      	; 0x1150 <tan+0x36>
    114e:	bd d0       	rcall	.+378    	; 0x12ca <inverse>
    1150:	dd 0f       	add	r29, r29
    1152:	0b f4       	brvc	.+2      	; 0x1156 <tan+0x3c>
    1154:	90 58       	subi	r25, 0x80	; 128
    1156:	df 91       	pop	r29
    1158:	08 95       	ret
    115a:	19 f4       	brne	.+6      	; 0x1162 <tan+0x48>
    115c:	0e f0       	brts	.+2      	; 0x1160 <tan+0x46>
    115e:	b9 ce       	rjmp	.-654    	; 0xed2 <__fp_inf>
    1160:	02 cf       	rjmp	.-508    	; 0xf66 <__fp_zero>
    1162:	bd ce       	rjmp	.-646    	; 0xede <__fp_nan>

00001164 <exp>:
    1164:	e6 de       	rcall	.-564    	; 0xf32 <__fp_splitA>
    1166:	c8 f3       	brcs	.-14     	; 0x115a <tan+0x40>
    1168:	96 38       	cpi	r25, 0x86	; 134
    116a:	c0 f7       	brcc	.-16     	; 0x115c <tan+0x42>
    116c:	07 f8       	bld	r0, 7
    116e:	0f 92       	push	r0
    1170:	e8 94       	clt
    1172:	2b e3       	ldi	r18, 0x3B	; 59
    1174:	3a ea       	ldi	r19, 0xAA	; 170
    1176:	48 eb       	ldi	r20, 0xB8	; 184
    1178:	5f e7       	ldi	r21, 0x7F	; 127
    117a:	0e df       	rcall	.-484    	; 0xf98 <__mulsf3_pse>
    117c:	0f 92       	push	r0
    117e:	0f 92       	push	r0
    1180:	0f 92       	push	r0
    1182:	4d b7       	in	r20, 0x3d	; 61
    1184:	5e b7       	in	r21, 0x3e	; 62
    1186:	0f 92       	push	r0
    1188:	22 d1       	rcall	.+580    	; 0x13ce <modf>
    118a:	ef ea       	ldi	r30, 0xAF	; 175
    118c:	f0 e0       	ldi	r31, 0x00	; 0
    118e:	3f d0       	rcall	.+126    	; 0x120e <__fp_powser>
    1190:	4f 91       	pop	r20
    1192:	5f 91       	pop	r21
    1194:	ef 91       	pop	r30
    1196:	ff 91       	pop	r31
    1198:	e5 95       	asr	r30
    119a:	ee 1f       	adc	r30, r30
    119c:	ff 1f       	adc	r31, r31
    119e:	49 f0       	breq	.+18     	; 0x11b2 <exp+0x4e>
    11a0:	fe 57       	subi	r31, 0x7E	; 126
    11a2:	e0 68       	ori	r30, 0x80	; 128
    11a4:	44 27       	eor	r20, r20
    11a6:	ee 0f       	add	r30, r30
    11a8:	44 1f       	adc	r20, r20
    11aa:	fa 95       	dec	r31
    11ac:	e1 f7       	brne	.-8      	; 0x11a6 <exp+0x42>
    11ae:	41 95       	neg	r20
    11b0:	55 0b       	sbc	r21, r21
    11b2:	94 d0       	rcall	.+296    	; 0x12dc <ldexp>
    11b4:	0f 90       	pop	r0
    11b6:	07 fe       	sbrs	r0, 7
    11b8:	88 c0       	rjmp	.+272    	; 0x12ca <inverse>
    11ba:	08 95       	ret

000011bc <__fp_mintl>:
    11bc:	88 23       	and	r24, r24
    11be:	71 f4       	brne	.+28     	; 0x11dc <__fp_mintl+0x20>
    11c0:	77 23       	and	r23, r23
    11c2:	21 f0       	breq	.+8      	; 0x11cc <__fp_mintl+0x10>
    11c4:	98 50       	subi	r25, 0x08	; 8
    11c6:	87 2b       	or	r24, r23
    11c8:	76 2f       	mov	r23, r22
    11ca:	07 c0       	rjmp	.+14     	; 0x11da <__fp_mintl+0x1e>
    11cc:	66 23       	and	r22, r22
    11ce:	11 f4       	brne	.+4      	; 0x11d4 <__fp_mintl+0x18>
    11d0:	99 27       	eor	r25, r25
    11d2:	0d c0       	rjmp	.+26     	; 0x11ee <__fp_mintl+0x32>
    11d4:	90 51       	subi	r25, 0x10	; 16
    11d6:	86 2b       	or	r24, r22
    11d8:	70 e0       	ldi	r23, 0x00	; 0
    11da:	60 e0       	ldi	r22, 0x00	; 0
    11dc:	2a f0       	brmi	.+10     	; 0x11e8 <__fp_mintl+0x2c>
    11de:	9a 95       	dec	r25
    11e0:	66 0f       	add	r22, r22
    11e2:	77 1f       	adc	r23, r23
    11e4:	88 1f       	adc	r24, r24
    11e6:	da f7       	brpl	.-10     	; 0x11de <__fp_mintl+0x22>
    11e8:	88 0f       	add	r24, r24
    11ea:	96 95       	lsr	r25
    11ec:	87 95       	ror	r24
    11ee:	97 f9       	bld	r25, 7
    11f0:	08 95       	ret

000011f2 <__fp_mpack>:
    11f2:	9f 3f       	cpi	r25, 0xFF	; 255
    11f4:	31 f0       	breq	.+12     	; 0x1202 <__fp_mpack_finite+0xc>

000011f6 <__fp_mpack_finite>:
    11f6:	91 50       	subi	r25, 0x01	; 1
    11f8:	20 f4       	brcc	.+8      	; 0x1202 <__fp_mpack_finite+0xc>
    11fa:	87 95       	ror	r24
    11fc:	77 95       	ror	r23
    11fe:	67 95       	ror	r22
    1200:	b7 95       	ror	r27
    1202:	88 0f       	add	r24, r24
    1204:	91 1d       	adc	r25, r1
    1206:	96 95       	lsr	r25
    1208:	87 95       	ror	r24
    120a:	97 f9       	bld	r25, 7
    120c:	08 95       	ret

0000120e <__fp_powser>:
    120e:	df 93       	push	r29
    1210:	cf 93       	push	r28
    1212:	1f 93       	push	r17
    1214:	0f 93       	push	r16
    1216:	ff 92       	push	r15
    1218:	ef 92       	push	r14
    121a:	df 92       	push	r13
    121c:	7b 01       	movw	r14, r22
    121e:	8c 01       	movw	r16, r24
    1220:	68 94       	set
    1222:	05 c0       	rjmp	.+10     	; 0x122e <__fp_powser+0x20>
    1224:	da 2e       	mov	r13, r26
    1226:	ef 01       	movw	r28, r30
    1228:	b5 de       	rcall	.-662    	; 0xf94 <__mulsf3x>
    122a:	fe 01       	movw	r30, r28
    122c:	e8 94       	clt
    122e:	a5 91       	lpm	r26, Z+
    1230:	25 91       	lpm	r18, Z+
    1232:	35 91       	lpm	r19, Z+
    1234:	45 91       	lpm	r20, Z+
    1236:	55 91       	lpm	r21, Z+
    1238:	ae f3       	brts	.-22     	; 0x1224 <__fp_powser+0x16>
    123a:	ef 01       	movw	r28, r30
    123c:	fe dc       	rcall	.-1540   	; 0xc3a <__addsf3x>
    123e:	fe 01       	movw	r30, r28
    1240:	97 01       	movw	r18, r14
    1242:	a8 01       	movw	r20, r16
    1244:	da 94       	dec	r13
    1246:	79 f7       	brne	.-34     	; 0x1226 <__fp_powser+0x18>
    1248:	df 90       	pop	r13
    124a:	ef 90       	pop	r14
    124c:	ff 90       	pop	r15
    124e:	0f 91       	pop	r16
    1250:	1f 91       	pop	r17
    1252:	cf 91       	pop	r28
    1254:	df 91       	pop	r29
    1256:	08 95       	ret

00001258 <__fp_powsodd>:
    1258:	9f 93       	push	r25
    125a:	8f 93       	push	r24
    125c:	7f 93       	push	r23
    125e:	6f 93       	push	r22
    1260:	ff 93       	push	r31
    1262:	ef 93       	push	r30
    1264:	9b 01       	movw	r18, r22
    1266:	ac 01       	movw	r20, r24
    1268:	89 de       	rcall	.-750    	; 0xf7c <__mulsf3>
    126a:	ef 91       	pop	r30
    126c:	ff 91       	pop	r31
    126e:	cf df       	rcall	.-98     	; 0x120e <__fp_powser>
    1270:	2f 91       	pop	r18
    1272:	3f 91       	pop	r19
    1274:	4f 91       	pop	r20
    1276:	5f 91       	pop	r21
    1278:	81 ce       	rjmp	.-766    	; 0xf7c <__mulsf3>
    127a:	31 ce       	rjmp	.-926    	; 0xede <__fp_nan>

0000127c <__fp_rempio2>:
    127c:	5a de       	rcall	.-844    	; 0xf32 <__fp_splitA>
    127e:	e8 f3       	brcs	.-6      	; 0x127a <__fp_powsodd+0x22>
    1280:	e8 94       	clt
    1282:	e0 e0       	ldi	r30, 0x00	; 0
    1284:	bb 27       	eor	r27, r27
    1286:	9f 57       	subi	r25, 0x7F	; 127
    1288:	f0 f0       	brcs	.+60     	; 0x12c6 <__fp_rempio2+0x4a>
    128a:	2a ed       	ldi	r18, 0xDA	; 218
    128c:	3f e0       	ldi	r19, 0x0F	; 15
    128e:	49 ec       	ldi	r20, 0xC9	; 201
    1290:	06 c0       	rjmp	.+12     	; 0x129e <__fp_rempio2+0x22>
    1292:	ee 0f       	add	r30, r30
    1294:	bb 0f       	add	r27, r27
    1296:	66 1f       	adc	r22, r22
    1298:	77 1f       	adc	r23, r23
    129a:	88 1f       	adc	r24, r24
    129c:	28 f0       	brcs	.+10     	; 0x12a8 <__fp_rempio2+0x2c>
    129e:	b2 3a       	cpi	r27, 0xA2	; 162
    12a0:	62 07       	cpc	r22, r18
    12a2:	73 07       	cpc	r23, r19
    12a4:	84 07       	cpc	r24, r20
    12a6:	28 f0       	brcs	.+10     	; 0x12b2 <__fp_rempio2+0x36>
    12a8:	b2 5a       	subi	r27, 0xA2	; 162
    12aa:	62 0b       	sbc	r22, r18
    12ac:	73 0b       	sbc	r23, r19
    12ae:	84 0b       	sbc	r24, r20
    12b0:	e3 95       	inc	r30
    12b2:	9a 95       	dec	r25
    12b4:	72 f7       	brpl	.-36     	; 0x1292 <__fp_rempio2+0x16>
    12b6:	80 38       	cpi	r24, 0x80	; 128
    12b8:	30 f4       	brcc	.+12     	; 0x12c6 <__fp_rempio2+0x4a>
    12ba:	9a 95       	dec	r25
    12bc:	bb 0f       	add	r27, r27
    12be:	66 1f       	adc	r22, r22
    12c0:	77 1f       	adc	r23, r23
    12c2:	88 1f       	adc	r24, r24
    12c4:	d2 f7       	brpl	.-12     	; 0x12ba <__fp_rempio2+0x3e>
    12c6:	90 48       	sbci	r25, 0x80	; 128
    12c8:	96 cf       	rjmp	.-212    	; 0x11f6 <__fp_mpack_finite>

000012ca <inverse>:
    12ca:	9b 01       	movw	r18, r22
    12cc:	ac 01       	movw	r20, r24
    12ce:	60 e0       	ldi	r22, 0x00	; 0
    12d0:	70 e0       	ldi	r23, 0x00	; 0
    12d2:	80 e8       	ldi	r24, 0x80	; 128
    12d4:	9f e3       	ldi	r25, 0x3F	; 63
    12d6:	08 cd       	rjmp	.-1520   	; 0xce8 <__divsf3>
    12d8:	fc cd       	rjmp	.-1032   	; 0xed2 <__fp_inf>
    12da:	8b cf       	rjmp	.-234    	; 0x11f2 <__fp_mpack>

000012dc <ldexp>:
    12dc:	2a de       	rcall	.-940    	; 0xf32 <__fp_splitA>
    12de:	e8 f3       	brcs	.-6      	; 0x12da <inverse+0x10>
    12e0:	99 23       	and	r25, r25
    12e2:	d9 f3       	breq	.-10     	; 0x12da <inverse+0x10>
    12e4:	94 0f       	add	r25, r20
    12e6:	51 1d       	adc	r21, r1
    12e8:	bb f3       	brvs	.-18     	; 0x12d8 <inverse+0xe>
    12ea:	91 50       	subi	r25, 0x01	; 1
    12ec:	50 40       	sbci	r21, 0x00	; 0
    12ee:	94 f0       	brlt	.+36     	; 0x1314 <ldexp+0x38>
    12f0:	59 f0       	breq	.+22     	; 0x1308 <ldexp+0x2c>
    12f2:	88 23       	and	r24, r24
    12f4:	32 f0       	brmi	.+12     	; 0x1302 <ldexp+0x26>
    12f6:	66 0f       	add	r22, r22
    12f8:	77 1f       	adc	r23, r23
    12fa:	88 1f       	adc	r24, r24
    12fc:	91 50       	subi	r25, 0x01	; 1
    12fe:	50 40       	sbci	r21, 0x00	; 0
    1300:	c1 f7       	brne	.-16     	; 0x12f2 <ldexp+0x16>
    1302:	9e 3f       	cpi	r25, 0xFE	; 254
    1304:	51 05       	cpc	r21, r1
    1306:	44 f7       	brge	.-48     	; 0x12d8 <inverse+0xe>
    1308:	88 0f       	add	r24, r24
    130a:	91 1d       	adc	r25, r1
    130c:	96 95       	lsr	r25
    130e:	87 95       	ror	r24
    1310:	97 f9       	bld	r25, 7
    1312:	08 95       	ret
    1314:	5f 3f       	cpi	r21, 0xFF	; 255
    1316:	ac f0       	brlt	.+42     	; 0x1342 <ldexp+0x66>
    1318:	98 3e       	cpi	r25, 0xE8	; 232
    131a:	9c f0       	brlt	.+38     	; 0x1342 <ldexp+0x66>
    131c:	bb 27       	eor	r27, r27
    131e:	86 95       	lsr	r24
    1320:	77 95       	ror	r23
    1322:	67 95       	ror	r22
    1324:	b7 95       	ror	r27
    1326:	08 f4       	brcc	.+2      	; 0x132a <ldexp+0x4e>
    1328:	b1 60       	ori	r27, 0x01	; 1
    132a:	93 95       	inc	r25
    132c:	c1 f7       	brne	.-16     	; 0x131e <ldexp+0x42>
    132e:	bb 0f       	add	r27, r27
    1330:	58 f7       	brcc	.-42     	; 0x1308 <ldexp+0x2c>
    1332:	11 f4       	brne	.+4      	; 0x1338 <ldexp+0x5c>
    1334:	60 ff       	sbrs	r22, 0
    1336:	e8 cf       	rjmp	.-48     	; 0x1308 <ldexp+0x2c>
    1338:	6f 5f       	subi	r22, 0xFF	; 255
    133a:	7f 4f       	sbci	r23, 0xFF	; 255
    133c:	8f 4f       	sbci	r24, 0xFF	; 255
    133e:	9f 4f       	sbci	r25, 0xFF	; 255
    1340:	e3 cf       	rjmp	.-58     	; 0x1308 <ldexp+0x2c>
    1342:	12 ce       	rjmp	.-988    	; 0xf68 <__fp_szero>
    1344:	0e f0       	brts	.+2      	; 0x1348 <ldexp+0x6c>
    1346:	55 cf       	rjmp	.-342    	; 0x11f2 <__fp_mpack>
    1348:	ca cd       	rjmp	.-1132   	; 0xede <__fp_nan>
    134a:	68 94       	set
    134c:	c2 cd       	rjmp	.-1148   	; 0xed2 <__fp_inf>

0000134e <log>:
    134e:	f1 dd       	rcall	.-1054   	; 0xf32 <__fp_splitA>
    1350:	c8 f3       	brcs	.-14     	; 0x1344 <ldexp+0x68>
    1352:	99 23       	and	r25, r25
    1354:	d1 f3       	breq	.-12     	; 0x134a <ldexp+0x6e>
    1356:	c6 f3       	brts	.-16     	; 0x1348 <ldexp+0x6c>
    1358:	df 93       	push	r29
    135a:	cf 93       	push	r28
    135c:	1f 93       	push	r17
    135e:	0f 93       	push	r16
    1360:	ff 92       	push	r15
    1362:	c9 2f       	mov	r28, r25
    1364:	dd 27       	eor	r29, r29
    1366:	88 23       	and	r24, r24
    1368:	2a f0       	brmi	.+10     	; 0x1374 <log+0x26>
    136a:	21 97       	sbiw	r28, 0x01	; 1
    136c:	66 0f       	add	r22, r22
    136e:	77 1f       	adc	r23, r23
    1370:	88 1f       	adc	r24, r24
    1372:	da f7       	brpl	.-10     	; 0x136a <log+0x1c>
    1374:	20 e0       	ldi	r18, 0x00	; 0
    1376:	30 e0       	ldi	r19, 0x00	; 0
    1378:	40 e8       	ldi	r20, 0x80	; 128
    137a:	5f eb       	ldi	r21, 0xBF	; 191
    137c:	9f e3       	ldi	r25, 0x3F	; 63
    137e:	88 39       	cpi	r24, 0x98	; 152
    1380:	20 f0       	brcs	.+8      	; 0x138a <log+0x3c>
    1382:	80 3e       	cpi	r24, 0xE0	; 224
    1384:	30 f0       	brcs	.+12     	; 0x1392 <log+0x44>
    1386:	21 96       	adiw	r28, 0x01	; 1
    1388:	8f 77       	andi	r24, 0x7F	; 127
    138a:	46 dc       	rcall	.-1908   	; 0xc18 <__addsf3>
    138c:	e7 ed       	ldi	r30, 0xD7	; 215
    138e:	f0 e0       	ldi	r31, 0x00	; 0
    1390:	03 c0       	rjmp	.+6      	; 0x1398 <log+0x4a>
    1392:	42 dc       	rcall	.-1916   	; 0xc18 <__addsf3>
    1394:	e4 e0       	ldi	r30, 0x04	; 4
    1396:	f1 e0       	ldi	r31, 0x01	; 1
    1398:	3a df       	rcall	.-396    	; 0x120e <__fp_powser>
    139a:	8b 01       	movw	r16, r22
    139c:	be 01       	movw	r22, r28
    139e:	ec 01       	movw	r28, r24
    13a0:	fb 2e       	mov	r15, r27
    13a2:	6f 57       	subi	r22, 0x7F	; 127
    13a4:	71 09       	sbc	r23, r1
    13a6:	75 95       	asr	r23
    13a8:	77 1f       	adc	r23, r23
    13aa:	88 0b       	sbc	r24, r24
    13ac:	99 0b       	sbc	r25, r25
    13ae:	32 dd       	rcall	.-1436   	; 0xe14 <__floatsisf>
    13b0:	28 e1       	ldi	r18, 0x18	; 24
    13b2:	32 e7       	ldi	r19, 0x72	; 114
    13b4:	41 e3       	ldi	r20, 0x31	; 49
    13b6:	5f e3       	ldi	r21, 0x3F	; 63
    13b8:	ed dd       	rcall	.-1062   	; 0xf94 <__mulsf3x>
    13ba:	af 2d       	mov	r26, r15
    13bc:	98 01       	movw	r18, r16
    13be:	ae 01       	movw	r20, r28
    13c0:	ff 90       	pop	r15
    13c2:	0f 91       	pop	r16
    13c4:	1f 91       	pop	r17
    13c6:	cf 91       	pop	r28
    13c8:	df 91       	pop	r29
    13ca:	37 dc       	rcall	.-1938   	; 0xc3a <__addsf3x>
    13cc:	99 cd       	rjmp	.-1230   	; 0xf00 <__fp_round>

000013ce <modf>:
    13ce:	fa 01       	movw	r30, r20
    13d0:	dc 01       	movw	r26, r24
    13d2:	aa 0f       	add	r26, r26
    13d4:	bb 1f       	adc	r27, r27
    13d6:	9b 01       	movw	r18, r22
    13d8:	ac 01       	movw	r20, r24
    13da:	bf 57       	subi	r27, 0x7F	; 127
    13dc:	28 f4       	brcc	.+10     	; 0x13e8 <modf+0x1a>
    13de:	22 27       	eor	r18, r18
    13e0:	33 27       	eor	r19, r19
    13e2:	44 27       	eor	r20, r20
    13e4:	50 78       	andi	r21, 0x80	; 128
    13e6:	1f c0       	rjmp	.+62     	; 0x1426 <modf+0x58>
    13e8:	b7 51       	subi	r27, 0x17	; 23
    13ea:	88 f4       	brcc	.+34     	; 0x140e <modf+0x40>
    13ec:	ab 2f       	mov	r26, r27
    13ee:	00 24       	eor	r0, r0
    13f0:	46 95       	lsr	r20
    13f2:	37 95       	ror	r19
    13f4:	27 95       	ror	r18
    13f6:	01 1c       	adc	r0, r1
    13f8:	a3 95       	inc	r26
    13fa:	d2 f3       	brmi	.-12     	; 0x13f0 <modf+0x22>
    13fc:	00 20       	and	r0, r0
    13fe:	69 f0       	breq	.+26     	; 0x141a <modf+0x4c>
    1400:	22 0f       	add	r18, r18
    1402:	33 1f       	adc	r19, r19
    1404:	44 1f       	adc	r20, r20
    1406:	b3 95       	inc	r27
    1408:	da f3       	brmi	.-10     	; 0x1400 <modf+0x32>
    140a:	0d d0       	rcall	.+26     	; 0x1426 <modf+0x58>
    140c:	04 cc       	rjmp	.-2040   	; 0xc16 <__subsf3>
    140e:	61 30       	cpi	r22, 0x01	; 1
    1410:	71 05       	cpc	r23, r1
    1412:	a0 e8       	ldi	r26, 0x80	; 128
    1414:	8a 07       	cpc	r24, r26
    1416:	b9 46       	sbci	r27, 0x69	; 105
    1418:	30 f4       	brcc	.+12     	; 0x1426 <modf+0x58>
    141a:	9b 01       	movw	r18, r22
    141c:	ac 01       	movw	r20, r24
    141e:	66 27       	eor	r22, r22
    1420:	77 27       	eor	r23, r23
    1422:	88 27       	eor	r24, r24
    1424:	90 78       	andi	r25, 0x80	; 128
    1426:	30 96       	adiw	r30, 0x00	; 0
    1428:	21 f0       	breq	.+8      	; 0x1432 <modf+0x64>
    142a:	20 83       	st	Z, r18
    142c:	31 83       	std	Z+1, r19	; 0x01
    142e:	42 83       	std	Z+2, r20	; 0x02
    1430:	53 83       	std	Z+3, r21	; 0x03
    1432:	08 95       	ret

00001434 <vfprintf>:
    1434:	2f 92       	push	r2
    1436:	3f 92       	push	r3
    1438:	4f 92       	push	r4
    143a:	5f 92       	push	r5
    143c:	6f 92       	push	r6
    143e:	7f 92       	push	r7
    1440:	8f 92       	push	r8
    1442:	9f 92       	push	r9
    1444:	af 92       	push	r10
    1446:	bf 92       	push	r11
    1448:	cf 92       	push	r12
    144a:	df 92       	push	r13
    144c:	ef 92       	push	r14
    144e:	ff 92       	push	r15
    1450:	0f 93       	push	r16
    1452:	1f 93       	push	r17
    1454:	cf 93       	push	r28
    1456:	df 93       	push	r29
    1458:	cd b7       	in	r28, 0x3d	; 61
    145a:	de b7       	in	r29, 0x3e	; 62
    145c:	63 97       	sbiw	r28, 0x13	; 19
    145e:	0f b6       	in	r0, 0x3f	; 63
    1460:	f8 94       	cli
    1462:	de bf       	out	0x3e, r29	; 62
    1464:	0f be       	out	0x3f, r0	; 63
    1466:	cd bf       	out	0x3d, r28	; 61
    1468:	7c 01       	movw	r14, r24
    146a:	1b 01       	movw	r2, r22
    146c:	6a 01       	movw	r12, r20
    146e:	fc 01       	movw	r30, r24
    1470:	17 82       	std	Z+7, r1	; 0x07
    1472:	16 82       	std	Z+6, r1	; 0x06
    1474:	83 81       	ldd	r24, Z+3	; 0x03
    1476:	81 ff       	sbrs	r24, 1
    1478:	49 c3       	rjmp	.+1682   	; 0x1b0c <vfprintf+0x6d8>
    147a:	be 01       	movw	r22, r28
    147c:	6f 5f       	subi	r22, 0xFF	; 255
    147e:	7f 4f       	sbci	r23, 0xFF	; 255
    1480:	4b 01       	movw	r8, r22
    1482:	f7 01       	movw	r30, r14
    1484:	93 81       	ldd	r25, Z+3	; 0x03
    1486:	f1 01       	movw	r30, r2
    1488:	93 fd       	sbrc	r25, 3
    148a:	85 91       	lpm	r24, Z+
    148c:	93 ff       	sbrs	r25, 3
    148e:	81 91       	ld	r24, Z+
    1490:	1f 01       	movw	r2, r30
    1492:	88 23       	and	r24, r24
    1494:	09 f4       	brne	.+2      	; 0x1498 <vfprintf+0x64>
    1496:	36 c3       	rjmp	.+1644   	; 0x1b04 <vfprintf+0x6d0>
    1498:	85 32       	cpi	r24, 0x25	; 37
    149a:	39 f4       	brne	.+14     	; 0x14aa <vfprintf+0x76>
    149c:	93 fd       	sbrc	r25, 3
    149e:	85 91       	lpm	r24, Z+
    14a0:	93 ff       	sbrs	r25, 3
    14a2:	81 91       	ld	r24, Z+
    14a4:	1f 01       	movw	r2, r30
    14a6:	85 32       	cpi	r24, 0x25	; 37
    14a8:	31 f4       	brne	.+12     	; 0x14b6 <vfprintf+0x82>
    14aa:	b7 01       	movw	r22, r14
    14ac:	90 e0       	ldi	r25, 0x00	; 0
    14ae:	6e d4       	rcall	.+2268   	; 0x1d8c <fputc>
    14b0:	56 01       	movw	r10, r12
    14b2:	65 01       	movw	r12, r10
    14b4:	e6 cf       	rjmp	.-52     	; 0x1482 <vfprintf+0x4e>
    14b6:	10 e0       	ldi	r17, 0x00	; 0
    14b8:	51 2c       	mov	r5, r1
    14ba:	20 e0       	ldi	r18, 0x00	; 0
    14bc:	20 32       	cpi	r18, 0x20	; 32
    14be:	a0 f4       	brcc	.+40     	; 0x14e8 <vfprintf+0xb4>
    14c0:	8b 32       	cpi	r24, 0x2B	; 43
    14c2:	69 f0       	breq	.+26     	; 0x14de <vfprintf+0xaa>
    14c4:	30 f4       	brcc	.+12     	; 0x14d2 <vfprintf+0x9e>
    14c6:	80 32       	cpi	r24, 0x20	; 32
    14c8:	59 f0       	breq	.+22     	; 0x14e0 <vfprintf+0xac>
    14ca:	83 32       	cpi	r24, 0x23	; 35
    14cc:	69 f4       	brne	.+26     	; 0x14e8 <vfprintf+0xb4>
    14ce:	20 61       	ori	r18, 0x10	; 16
    14d0:	2c c0       	rjmp	.+88     	; 0x152a <vfprintf+0xf6>
    14d2:	8d 32       	cpi	r24, 0x2D	; 45
    14d4:	39 f0       	breq	.+14     	; 0x14e4 <vfprintf+0xb0>
    14d6:	80 33       	cpi	r24, 0x30	; 48
    14d8:	39 f4       	brne	.+14     	; 0x14e8 <vfprintf+0xb4>
    14da:	21 60       	ori	r18, 0x01	; 1
    14dc:	26 c0       	rjmp	.+76     	; 0x152a <vfprintf+0xf6>
    14de:	22 60       	ori	r18, 0x02	; 2
    14e0:	24 60       	ori	r18, 0x04	; 4
    14e2:	23 c0       	rjmp	.+70     	; 0x152a <vfprintf+0xf6>
    14e4:	28 60       	ori	r18, 0x08	; 8
    14e6:	21 c0       	rjmp	.+66     	; 0x152a <vfprintf+0xf6>
    14e8:	27 fd       	sbrc	r18, 7
    14ea:	27 c0       	rjmp	.+78     	; 0x153a <vfprintf+0x106>
    14ec:	30 ed       	ldi	r19, 0xD0	; 208
    14ee:	38 0f       	add	r19, r24
    14f0:	3a 30       	cpi	r19, 0x0A	; 10
    14f2:	78 f4       	brcc	.+30     	; 0x1512 <vfprintf+0xde>
    14f4:	26 ff       	sbrs	r18, 6
    14f6:	06 c0       	rjmp	.+12     	; 0x1504 <vfprintf+0xd0>
    14f8:	fa e0       	ldi	r31, 0x0A	; 10
    14fa:	1f 9f       	mul	r17, r31
    14fc:	30 0d       	add	r19, r0
    14fe:	11 24       	eor	r1, r1
    1500:	13 2f       	mov	r17, r19
    1502:	13 c0       	rjmp	.+38     	; 0x152a <vfprintf+0xf6>
    1504:	6a e0       	ldi	r22, 0x0A	; 10
    1506:	56 9e       	mul	r5, r22
    1508:	30 0d       	add	r19, r0
    150a:	11 24       	eor	r1, r1
    150c:	53 2e       	mov	r5, r19
    150e:	20 62       	ori	r18, 0x20	; 32
    1510:	0c c0       	rjmp	.+24     	; 0x152a <vfprintf+0xf6>
    1512:	8e 32       	cpi	r24, 0x2E	; 46
    1514:	21 f4       	brne	.+8      	; 0x151e <vfprintf+0xea>
    1516:	26 fd       	sbrc	r18, 6
    1518:	f5 c2       	rjmp	.+1514   	; 0x1b04 <vfprintf+0x6d0>
    151a:	20 64       	ori	r18, 0x40	; 64
    151c:	06 c0       	rjmp	.+12     	; 0x152a <vfprintf+0xf6>
    151e:	8c 36       	cpi	r24, 0x6C	; 108
    1520:	11 f4       	brne	.+4      	; 0x1526 <vfprintf+0xf2>
    1522:	20 68       	ori	r18, 0x80	; 128
    1524:	02 c0       	rjmp	.+4      	; 0x152a <vfprintf+0xf6>
    1526:	88 36       	cpi	r24, 0x68	; 104
    1528:	41 f4       	brne	.+16     	; 0x153a <vfprintf+0x106>
    152a:	f1 01       	movw	r30, r2
    152c:	93 fd       	sbrc	r25, 3
    152e:	85 91       	lpm	r24, Z+
    1530:	93 ff       	sbrs	r25, 3
    1532:	81 91       	ld	r24, Z+
    1534:	1f 01       	movw	r2, r30
    1536:	81 11       	cpse	r24, r1
    1538:	c1 cf       	rjmp	.-126    	; 0x14bc <vfprintf+0x88>
    153a:	9b eb       	ldi	r25, 0xBB	; 187
    153c:	98 0f       	add	r25, r24
    153e:	93 30       	cpi	r25, 0x03	; 3
    1540:	18 f4       	brcc	.+6      	; 0x1548 <vfprintf+0x114>
    1542:	20 61       	ori	r18, 0x10	; 16
    1544:	80 5e       	subi	r24, 0xE0	; 224
    1546:	06 c0       	rjmp	.+12     	; 0x1554 <vfprintf+0x120>
    1548:	9b e9       	ldi	r25, 0x9B	; 155
    154a:	98 0f       	add	r25, r24
    154c:	93 30       	cpi	r25, 0x03	; 3
    154e:	08 f0       	brcs	.+2      	; 0x1552 <vfprintf+0x11e>
    1550:	9a c1       	rjmp	.+820    	; 0x1886 <vfprintf+0x452>
    1552:	2f 7e       	andi	r18, 0xEF	; 239
    1554:	26 ff       	sbrs	r18, 6
    1556:	16 e0       	ldi	r17, 0x06	; 6
    1558:	2f 73       	andi	r18, 0x3F	; 63
    155a:	72 2e       	mov	r7, r18
    155c:	85 36       	cpi	r24, 0x65	; 101
    155e:	21 f4       	brne	.+8      	; 0x1568 <vfprintf+0x134>
    1560:	f2 2f       	mov	r31, r18
    1562:	f0 64       	ori	r31, 0x40	; 64
    1564:	7f 2e       	mov	r7, r31
    1566:	08 c0       	rjmp	.+16     	; 0x1578 <vfprintf+0x144>
    1568:	86 36       	cpi	r24, 0x66	; 102
    156a:	21 f4       	brne	.+8      	; 0x1574 <vfprintf+0x140>
    156c:	62 2f       	mov	r22, r18
    156e:	60 68       	ori	r22, 0x80	; 128
    1570:	76 2e       	mov	r7, r22
    1572:	02 c0       	rjmp	.+4      	; 0x1578 <vfprintf+0x144>
    1574:	11 11       	cpse	r17, r1
    1576:	11 50       	subi	r17, 0x01	; 1
    1578:	77 fe       	sbrs	r7, 7
    157a:	07 c0       	rjmp	.+14     	; 0x158a <vfprintf+0x156>
    157c:	1c 33       	cpi	r17, 0x3C	; 60
    157e:	48 f4       	brcc	.+18     	; 0x1592 <vfprintf+0x15e>
    1580:	44 24       	eor	r4, r4
    1582:	43 94       	inc	r4
    1584:	41 0e       	add	r4, r17
    1586:	27 e0       	ldi	r18, 0x07	; 7
    1588:	0b c0       	rjmp	.+22     	; 0x15a0 <vfprintf+0x16c>
    158a:	18 30       	cpi	r17, 0x08	; 8
    158c:	30 f4       	brcc	.+12     	; 0x159a <vfprintf+0x166>
    158e:	21 2f       	mov	r18, r17
    1590:	06 c0       	rjmp	.+12     	; 0x159e <vfprintf+0x16a>
    1592:	27 e0       	ldi	r18, 0x07	; 7
    1594:	4c e3       	ldi	r20, 0x3C	; 60
    1596:	44 2e       	mov	r4, r20
    1598:	03 c0       	rjmp	.+6      	; 0x15a0 <vfprintf+0x16c>
    159a:	27 e0       	ldi	r18, 0x07	; 7
    159c:	17 e0       	ldi	r17, 0x07	; 7
    159e:	41 2c       	mov	r4, r1
    15a0:	56 01       	movw	r10, r12
    15a2:	74 e0       	ldi	r23, 0x04	; 4
    15a4:	a7 0e       	add	r10, r23
    15a6:	b1 1c       	adc	r11, r1
    15a8:	f6 01       	movw	r30, r12
    15aa:	60 81       	ld	r22, Z
    15ac:	71 81       	ldd	r23, Z+1	; 0x01
    15ae:	82 81       	ldd	r24, Z+2	; 0x02
    15b0:	93 81       	ldd	r25, Z+3	; 0x03
    15b2:	04 2d       	mov	r16, r4
    15b4:	a4 01       	movw	r20, r8
    15b6:	ec d2       	rcall	.+1496   	; 0x1b90 <__ftoa_engine>
    15b8:	6c 01       	movw	r12, r24
    15ba:	09 81       	ldd	r16, Y+1	; 0x01
    15bc:	00 ff       	sbrs	r16, 0
    15be:	02 c0       	rjmp	.+4      	; 0x15c4 <vfprintf+0x190>
    15c0:	03 ff       	sbrs	r16, 3
    15c2:	06 c0       	rjmp	.+12     	; 0x15d0 <vfprintf+0x19c>
    15c4:	71 fc       	sbrc	r7, 1
    15c6:	07 c0       	rjmp	.+14     	; 0x15d6 <vfprintf+0x1a2>
    15c8:	72 fc       	sbrc	r7, 2
    15ca:	08 c0       	rjmp	.+16     	; 0x15dc <vfprintf+0x1a8>
    15cc:	61 2c       	mov	r6, r1
    15ce:	08 c0       	rjmp	.+16     	; 0x15e0 <vfprintf+0x1ac>
    15d0:	3d e2       	ldi	r19, 0x2D	; 45
    15d2:	63 2e       	mov	r6, r19
    15d4:	05 c0       	rjmp	.+10     	; 0x15e0 <vfprintf+0x1ac>
    15d6:	2b e2       	ldi	r18, 0x2B	; 43
    15d8:	62 2e       	mov	r6, r18
    15da:	02 c0       	rjmp	.+4      	; 0x15e0 <vfprintf+0x1ac>
    15dc:	90 e2       	ldi	r25, 0x20	; 32
    15de:	69 2e       	mov	r6, r25
    15e0:	80 2f       	mov	r24, r16
    15e2:	8c 70       	andi	r24, 0x0C	; 12
    15e4:	81 f1       	breq	.+96     	; 0x1646 <vfprintf+0x212>
    15e6:	66 20       	and	r6, r6
    15e8:	11 f0       	breq	.+4      	; 0x15ee <vfprintf+0x1ba>
    15ea:	84 e0       	ldi	r24, 0x04	; 4
    15ec:	01 c0       	rjmp	.+2      	; 0x15f0 <vfprintf+0x1bc>
    15ee:	83 e0       	ldi	r24, 0x03	; 3
    15f0:	85 15       	cp	r24, r5
    15f2:	10 f0       	brcs	.+4      	; 0x15f8 <vfprintf+0x1c4>
    15f4:	51 2c       	mov	r5, r1
    15f6:	0a c0       	rjmp	.+20     	; 0x160c <vfprintf+0x1d8>
    15f8:	58 1a       	sub	r5, r24
    15fa:	73 fc       	sbrc	r7, 3
    15fc:	07 c0       	rjmp	.+14     	; 0x160c <vfprintf+0x1d8>
    15fe:	b7 01       	movw	r22, r14
    1600:	80 e2       	ldi	r24, 0x20	; 32
    1602:	90 e0       	ldi	r25, 0x00	; 0
    1604:	c3 d3       	rcall	.+1926   	; 0x1d8c <fputc>
    1606:	5a 94       	dec	r5
    1608:	d1 f7       	brne	.-12     	; 0x15fe <vfprintf+0x1ca>
    160a:	f4 cf       	rjmp	.-24     	; 0x15f4 <vfprintf+0x1c0>
    160c:	66 20       	and	r6, r6
    160e:	21 f0       	breq	.+8      	; 0x1618 <vfprintf+0x1e4>
    1610:	b7 01       	movw	r22, r14
    1612:	86 2d       	mov	r24, r6
    1614:	90 e0       	ldi	r25, 0x00	; 0
    1616:	ba d3       	rcall	.+1908   	; 0x1d8c <fputc>
    1618:	03 fd       	sbrc	r16, 3
    161a:	03 c0       	rjmp	.+6      	; 0x1622 <vfprintf+0x1ee>
    161c:	06 e3       	ldi	r16, 0x36	; 54
    161e:	11 e0       	ldi	r17, 0x01	; 1
    1620:	02 c0       	rjmp	.+4      	; 0x1626 <vfprintf+0x1f2>
    1622:	02 e3       	ldi	r16, 0x32	; 50
    1624:	11 e0       	ldi	r17, 0x01	; 1
    1626:	f7 2d       	mov	r31, r7
    1628:	f0 71       	andi	r31, 0x10	; 16
    162a:	7f 2e       	mov	r7, r31
    162c:	f8 01       	movw	r30, r16
    162e:	84 91       	lpm	r24, Z
    1630:	88 23       	and	r24, r24
    1632:	09 f4       	brne	.+2      	; 0x1636 <vfprintf+0x202>
    1634:	5e c2       	rjmp	.+1212   	; 0x1af2 <vfprintf+0x6be>
    1636:	71 10       	cpse	r7, r1
    1638:	80 52       	subi	r24, 0x20	; 32
    163a:	b7 01       	movw	r22, r14
    163c:	90 e0       	ldi	r25, 0x00	; 0
    163e:	a6 d3       	rcall	.+1868   	; 0x1d8c <fputc>
    1640:	0f 5f       	subi	r16, 0xFF	; 255
    1642:	1f 4f       	sbci	r17, 0xFF	; 255
    1644:	f3 cf       	rjmp	.-26     	; 0x162c <vfprintf+0x1f8>
    1646:	77 fe       	sbrs	r7, 7
    1648:	0f c0       	rjmp	.+30     	; 0x1668 <vfprintf+0x234>
    164a:	4c 0c       	add	r4, r12
    164c:	04 ff       	sbrs	r16, 4
    164e:	04 c0       	rjmp	.+8      	; 0x1658 <vfprintf+0x224>
    1650:	8a 81       	ldd	r24, Y+2	; 0x02
    1652:	81 33       	cpi	r24, 0x31	; 49
    1654:	09 f4       	brne	.+2      	; 0x1658 <vfprintf+0x224>
    1656:	4a 94       	dec	r4
    1658:	14 14       	cp	r1, r4
    165a:	74 f5       	brge	.+92     	; 0x16b8 <vfprintf+0x284>
    165c:	f8 e0       	ldi	r31, 0x08	; 8
    165e:	f4 15       	cp	r31, r4
    1660:	78 f5       	brcc	.+94     	; 0x16c0 <vfprintf+0x28c>
    1662:	88 e0       	ldi	r24, 0x08	; 8
    1664:	48 2e       	mov	r4, r24
    1666:	2c c0       	rjmp	.+88     	; 0x16c0 <vfprintf+0x28c>
    1668:	76 fc       	sbrc	r7, 6
    166a:	2a c0       	rjmp	.+84     	; 0x16c0 <vfprintf+0x28c>
    166c:	81 2f       	mov	r24, r17
    166e:	90 e0       	ldi	r25, 0x00	; 0
    1670:	8c 15       	cp	r24, r12
    1672:	9d 05       	cpc	r25, r13
    1674:	9c f0       	brlt	.+38     	; 0x169c <vfprintf+0x268>
    1676:	6c ef       	ldi	r22, 0xFC	; 252
    1678:	c6 16       	cp	r12, r22
    167a:	6f ef       	ldi	r22, 0xFF	; 255
    167c:	d6 06       	cpc	r13, r22
    167e:	74 f0       	brlt	.+28     	; 0x169c <vfprintf+0x268>
    1680:	77 2d       	mov	r23, r7
    1682:	70 68       	ori	r23, 0x80	; 128
    1684:	77 2e       	mov	r7, r23
    1686:	0a c0       	rjmp	.+20     	; 0x169c <vfprintf+0x268>
    1688:	e2 e0       	ldi	r30, 0x02	; 2
    168a:	f0 e0       	ldi	r31, 0x00	; 0
    168c:	ec 0f       	add	r30, r28
    168e:	fd 1f       	adc	r31, r29
    1690:	e1 0f       	add	r30, r17
    1692:	f1 1d       	adc	r31, r1
    1694:	80 81       	ld	r24, Z
    1696:	80 33       	cpi	r24, 0x30	; 48
    1698:	19 f4       	brne	.+6      	; 0x16a0 <vfprintf+0x26c>
    169a:	11 50       	subi	r17, 0x01	; 1
    169c:	11 11       	cpse	r17, r1
    169e:	f4 cf       	rjmp	.-24     	; 0x1688 <vfprintf+0x254>
    16a0:	77 fe       	sbrs	r7, 7
    16a2:	0e c0       	rjmp	.+28     	; 0x16c0 <vfprintf+0x28c>
    16a4:	44 24       	eor	r4, r4
    16a6:	43 94       	inc	r4
    16a8:	41 0e       	add	r4, r17
    16aa:	81 2f       	mov	r24, r17
    16ac:	90 e0       	ldi	r25, 0x00	; 0
    16ae:	c8 16       	cp	r12, r24
    16b0:	d9 06       	cpc	r13, r25
    16b2:	2c f4       	brge	.+10     	; 0x16be <vfprintf+0x28a>
    16b4:	1c 19       	sub	r17, r12
    16b6:	04 c0       	rjmp	.+8      	; 0x16c0 <vfprintf+0x28c>
    16b8:	44 24       	eor	r4, r4
    16ba:	43 94       	inc	r4
    16bc:	01 c0       	rjmp	.+2      	; 0x16c0 <vfprintf+0x28c>
    16be:	10 e0       	ldi	r17, 0x00	; 0
    16c0:	77 fe       	sbrs	r7, 7
    16c2:	07 c0       	rjmp	.+14     	; 0x16d2 <vfprintf+0x29e>
    16c4:	1c 14       	cp	r1, r12
    16c6:	1d 04       	cpc	r1, r13
    16c8:	3c f4       	brge	.+14     	; 0x16d8 <vfprintf+0x2a4>
    16ca:	96 01       	movw	r18, r12
    16cc:	2f 5f       	subi	r18, 0xFF	; 255
    16ce:	3f 4f       	sbci	r19, 0xFF	; 255
    16d0:	05 c0       	rjmp	.+10     	; 0x16dc <vfprintf+0x2a8>
    16d2:	25 e0       	ldi	r18, 0x05	; 5
    16d4:	30 e0       	ldi	r19, 0x00	; 0
    16d6:	02 c0       	rjmp	.+4      	; 0x16dc <vfprintf+0x2a8>
    16d8:	21 e0       	ldi	r18, 0x01	; 1
    16da:	30 e0       	ldi	r19, 0x00	; 0
    16dc:	66 20       	and	r6, r6
    16de:	11 f0       	breq	.+4      	; 0x16e4 <vfprintf+0x2b0>
    16e0:	2f 5f       	subi	r18, 0xFF	; 255
    16e2:	3f 4f       	sbci	r19, 0xFF	; 255
    16e4:	11 23       	and	r17, r17
    16e6:	31 f0       	breq	.+12     	; 0x16f4 <vfprintf+0x2c0>
    16e8:	41 2f       	mov	r20, r17
    16ea:	50 e0       	ldi	r21, 0x00	; 0
    16ec:	4f 5f       	subi	r20, 0xFF	; 255
    16ee:	5f 4f       	sbci	r21, 0xFF	; 255
    16f0:	24 0f       	add	r18, r20
    16f2:	35 1f       	adc	r19, r21
    16f4:	45 2d       	mov	r20, r5
    16f6:	50 e0       	ldi	r21, 0x00	; 0
    16f8:	24 17       	cp	r18, r20
    16fa:	35 07       	cpc	r19, r21
    16fc:	14 f4       	brge	.+4      	; 0x1702 <vfprintf+0x2ce>
    16fe:	52 1a       	sub	r5, r18
    1700:	01 c0       	rjmp	.+2      	; 0x1704 <vfprintf+0x2d0>
    1702:	51 2c       	mov	r5, r1
    1704:	87 2d       	mov	r24, r7
    1706:	89 70       	andi	r24, 0x09	; 9
    1708:	41 f4       	brne	.+16     	; 0x171a <vfprintf+0x2e6>
    170a:	55 20       	and	r5, r5
    170c:	31 f0       	breq	.+12     	; 0x171a <vfprintf+0x2e6>
    170e:	b7 01       	movw	r22, r14
    1710:	80 e2       	ldi	r24, 0x20	; 32
    1712:	90 e0       	ldi	r25, 0x00	; 0
    1714:	3b d3       	rcall	.+1654   	; 0x1d8c <fputc>
    1716:	5a 94       	dec	r5
    1718:	f8 cf       	rjmp	.-16     	; 0x170a <vfprintf+0x2d6>
    171a:	66 20       	and	r6, r6
    171c:	21 f0       	breq	.+8      	; 0x1726 <vfprintf+0x2f2>
    171e:	b7 01       	movw	r22, r14
    1720:	86 2d       	mov	r24, r6
    1722:	90 e0       	ldi	r25, 0x00	; 0
    1724:	33 d3       	rcall	.+1638   	; 0x1d8c <fputc>
    1726:	73 fc       	sbrc	r7, 3
    1728:	08 c0       	rjmp	.+16     	; 0x173a <vfprintf+0x306>
    172a:	55 20       	and	r5, r5
    172c:	31 f0       	breq	.+12     	; 0x173a <vfprintf+0x306>
    172e:	b7 01       	movw	r22, r14
    1730:	80 e3       	ldi	r24, 0x30	; 48
    1732:	90 e0       	ldi	r25, 0x00	; 0
    1734:	2b d3       	rcall	.+1622   	; 0x1d8c <fputc>
    1736:	5a 94       	dec	r5
    1738:	f8 cf       	rjmp	.-16     	; 0x172a <vfprintf+0x2f6>
    173a:	77 fe       	sbrs	r7, 7
    173c:	5d c0       	rjmp	.+186    	; 0x17f8 <vfprintf+0x3c4>
    173e:	9c 2d       	mov	r25, r12
    1740:	8d 2d       	mov	r24, r13
    1742:	d7 fe       	sbrs	r13, 7
    1744:	02 c0       	rjmp	.+4      	; 0x174a <vfprintf+0x316>
    1746:	90 e0       	ldi	r25, 0x00	; 0
    1748:	80 e0       	ldi	r24, 0x00	; 0
    174a:	69 2e       	mov	r6, r25
    174c:	78 2e       	mov	r7, r24
    174e:	40 e0       	ldi	r20, 0x00	; 0
    1750:	50 e0       	ldi	r21, 0x00	; 0
    1752:	c6 01       	movw	r24, r12
    1754:	84 19       	sub	r24, r4
    1756:	91 09       	sbc	r25, r1
    1758:	9d 87       	std	Y+13, r25	; 0x0d
    175a:	8c 87       	std	Y+12, r24	; 0x0c
    175c:	96 01       	movw	r18, r12
    175e:	26 19       	sub	r18, r6
    1760:	37 09       	sbc	r19, r7
    1762:	28 0d       	add	r18, r8
    1764:	39 1d       	adc	r19, r9
    1766:	81 2f       	mov	r24, r17
    1768:	90 e0       	ldi	r25, 0x00	; 0
    176a:	ee 27       	eor	r30, r30
    176c:	ff 27       	eor	r31, r31
    176e:	e8 1b       	sub	r30, r24
    1770:	f9 0b       	sbc	r31, r25
    1772:	ff 87       	std	Y+15, r31	; 0x0f
    1774:	ee 87       	std	Y+14, r30	; 0x0e
    1776:	ff ef       	ldi	r31, 0xFF	; 255
    1778:	6f 16       	cp	r6, r31
    177a:	7f 06       	cpc	r7, r31
    177c:	61 f4       	brne	.+24     	; 0x1796 <vfprintf+0x362>
    177e:	b7 01       	movw	r22, r14
    1780:	8e e2       	ldi	r24, 0x2E	; 46
    1782:	90 e0       	ldi	r25, 0x00	; 0
    1784:	2b 8b       	std	Y+19, r18	; 0x13
    1786:	3a 8b       	std	Y+18, r19	; 0x12
    1788:	48 8b       	std	Y+16, r20	; 0x10
    178a:	59 8b       	std	Y+17, r21	; 0x11
    178c:	ff d2       	rcall	.+1534   	; 0x1d8c <fputc>
    178e:	59 89       	ldd	r21, Y+17	; 0x11
    1790:	48 89       	ldd	r20, Y+16	; 0x10
    1792:	3a 89       	ldd	r19, Y+18	; 0x12
    1794:	2b 89       	ldd	r18, Y+19	; 0x13
    1796:	c6 14       	cp	r12, r6
    1798:	d7 04       	cpc	r13, r7
    179a:	54 f0       	brlt	.+20     	; 0x17b0 <vfprintf+0x37c>
    179c:	6c 85       	ldd	r22, Y+12	; 0x0c
    179e:	7d 85       	ldd	r23, Y+13	; 0x0d
    17a0:	66 15       	cp	r22, r6
    17a2:	77 05       	cpc	r23, r7
    17a4:	2c f4       	brge	.+10     	; 0x17b0 <vfprintf+0x37c>
    17a6:	f9 01       	movw	r30, r18
    17a8:	e4 0f       	add	r30, r20
    17aa:	f5 1f       	adc	r31, r21
    17ac:	81 81       	ldd	r24, Z+1	; 0x01
    17ae:	01 c0       	rjmp	.+2      	; 0x17b2 <vfprintf+0x37e>
    17b0:	80 e3       	ldi	r24, 0x30	; 48
    17b2:	71 e0       	ldi	r23, 0x01	; 1
    17b4:	67 1a       	sub	r6, r23
    17b6:	71 08       	sbc	r7, r1
    17b8:	4f 5f       	subi	r20, 0xFF	; 255
    17ba:	5f 4f       	sbci	r21, 0xFF	; 255
    17bc:	ee 85       	ldd	r30, Y+14	; 0x0e
    17be:	ff 85       	ldd	r31, Y+15	; 0x0f
    17c0:	6e 16       	cp	r6, r30
    17c2:	7f 06       	cpc	r7, r31
    17c4:	64 f0       	brlt	.+24     	; 0x17de <vfprintf+0x3aa>
    17c6:	b7 01       	movw	r22, r14
    17c8:	90 e0       	ldi	r25, 0x00	; 0
    17ca:	2b 8b       	std	Y+19, r18	; 0x13
    17cc:	3a 8b       	std	Y+18, r19	; 0x12
    17ce:	48 8b       	std	Y+16, r20	; 0x10
    17d0:	59 8b       	std	Y+17, r21	; 0x11
    17d2:	dc d2       	rcall	.+1464   	; 0x1d8c <fputc>
    17d4:	2b 89       	ldd	r18, Y+19	; 0x13
    17d6:	3a 89       	ldd	r19, Y+18	; 0x12
    17d8:	48 89       	ldd	r20, Y+16	; 0x10
    17da:	59 89       	ldd	r21, Y+17	; 0x11
    17dc:	cc cf       	rjmp	.-104    	; 0x1776 <vfprintf+0x342>
    17de:	6c 14       	cp	r6, r12
    17e0:	7d 04       	cpc	r7, r13
    17e2:	39 f4       	brne	.+14     	; 0x17f2 <vfprintf+0x3be>
    17e4:	9a 81       	ldd	r25, Y+2	; 0x02
    17e6:	96 33       	cpi	r25, 0x36	; 54
    17e8:	18 f4       	brcc	.+6      	; 0x17f0 <vfprintf+0x3bc>
    17ea:	95 33       	cpi	r25, 0x35	; 53
    17ec:	11 f4       	brne	.+4      	; 0x17f2 <vfprintf+0x3be>
    17ee:	04 ff       	sbrs	r16, 4
    17f0:	81 e3       	ldi	r24, 0x31	; 49
    17f2:	b7 01       	movw	r22, r14
    17f4:	90 e0       	ldi	r25, 0x00	; 0
    17f6:	45 c0       	rjmp	.+138    	; 0x1882 <vfprintf+0x44e>
    17f8:	8a 81       	ldd	r24, Y+2	; 0x02
    17fa:	81 33       	cpi	r24, 0x31	; 49
    17fc:	09 f0       	breq	.+2      	; 0x1800 <vfprintf+0x3cc>
    17fe:	0f 7e       	andi	r16, 0xEF	; 239
    1800:	b7 01       	movw	r22, r14
    1802:	90 e0       	ldi	r25, 0x00	; 0
    1804:	c3 d2       	rcall	.+1414   	; 0x1d8c <fputc>
    1806:	11 11       	cpse	r17, r1
    1808:	05 c0       	rjmp	.+10     	; 0x1814 <vfprintf+0x3e0>
    180a:	74 fe       	sbrs	r7, 4
    180c:	16 c0       	rjmp	.+44     	; 0x183a <vfprintf+0x406>
    180e:	85 e4       	ldi	r24, 0x45	; 69
    1810:	90 e0       	ldi	r25, 0x00	; 0
    1812:	15 c0       	rjmp	.+42     	; 0x183e <vfprintf+0x40a>
    1814:	b7 01       	movw	r22, r14
    1816:	8e e2       	ldi	r24, 0x2E	; 46
    1818:	90 e0       	ldi	r25, 0x00	; 0
    181a:	b8 d2       	rcall	.+1392   	; 0x1d8c <fputc>
    181c:	82 e0       	ldi	r24, 0x02	; 2
    181e:	66 24       	eor	r6, r6
    1820:	63 94       	inc	r6
    1822:	68 0e       	add	r6, r24
    1824:	f4 01       	movw	r30, r8
    1826:	e8 0f       	add	r30, r24
    1828:	f1 1d       	adc	r31, r1
    182a:	80 81       	ld	r24, Z
    182c:	b7 01       	movw	r22, r14
    182e:	90 e0       	ldi	r25, 0x00	; 0
    1830:	ad d2       	rcall	.+1370   	; 0x1d8c <fputc>
    1832:	11 50       	subi	r17, 0x01	; 1
    1834:	51 f3       	breq	.-44     	; 0x180a <vfprintf+0x3d6>
    1836:	86 2d       	mov	r24, r6
    1838:	f2 cf       	rjmp	.-28     	; 0x181e <vfprintf+0x3ea>
    183a:	85 e6       	ldi	r24, 0x65	; 101
    183c:	90 e0       	ldi	r25, 0x00	; 0
    183e:	b7 01       	movw	r22, r14
    1840:	a5 d2       	rcall	.+1354   	; 0x1d8c <fputc>
    1842:	d7 fc       	sbrc	r13, 7
    1844:	05 c0       	rjmp	.+10     	; 0x1850 <vfprintf+0x41c>
    1846:	c1 14       	cp	r12, r1
    1848:	d1 04       	cpc	r13, r1
    184a:	39 f4       	brne	.+14     	; 0x185a <vfprintf+0x426>
    184c:	04 ff       	sbrs	r16, 4
    184e:	05 c0       	rjmp	.+10     	; 0x185a <vfprintf+0x426>
    1850:	d1 94       	neg	r13
    1852:	c1 94       	neg	r12
    1854:	d1 08       	sbc	r13, r1
    1856:	8d e2       	ldi	r24, 0x2D	; 45
    1858:	01 c0       	rjmp	.+2      	; 0x185c <vfprintf+0x428>
    185a:	8b e2       	ldi	r24, 0x2B	; 43
    185c:	b7 01       	movw	r22, r14
    185e:	90 e0       	ldi	r25, 0x00	; 0
    1860:	95 d2       	rcall	.+1322   	; 0x1d8c <fputc>
    1862:	80 e3       	ldi	r24, 0x30	; 48
    1864:	6a e0       	ldi	r22, 0x0A	; 10
    1866:	c6 16       	cp	r12, r22
    1868:	d1 04       	cpc	r13, r1
    186a:	2c f0       	brlt	.+10     	; 0x1876 <vfprintf+0x442>
    186c:	8f 5f       	subi	r24, 0xFF	; 255
    186e:	fa e0       	ldi	r31, 0x0A	; 10
    1870:	cf 1a       	sub	r12, r31
    1872:	d1 08       	sbc	r13, r1
    1874:	f7 cf       	rjmp	.-18     	; 0x1864 <vfprintf+0x430>
    1876:	b7 01       	movw	r22, r14
    1878:	90 e0       	ldi	r25, 0x00	; 0
    187a:	88 d2       	rcall	.+1296   	; 0x1d8c <fputc>
    187c:	b7 01       	movw	r22, r14
    187e:	c6 01       	movw	r24, r12
    1880:	c0 96       	adiw	r24, 0x30	; 48
    1882:	84 d2       	rcall	.+1288   	; 0x1d8c <fputc>
    1884:	36 c1       	rjmp	.+620    	; 0x1af2 <vfprintf+0x6be>
    1886:	83 36       	cpi	r24, 0x63	; 99
    1888:	31 f0       	breq	.+12     	; 0x1896 <vfprintf+0x462>
    188a:	83 37       	cpi	r24, 0x73	; 115
    188c:	79 f0       	breq	.+30     	; 0x18ac <vfprintf+0x478>
    188e:	83 35       	cpi	r24, 0x53	; 83
    1890:	09 f0       	breq	.+2      	; 0x1894 <vfprintf+0x460>
    1892:	54 c0       	rjmp	.+168    	; 0x193c <vfprintf+0x508>
    1894:	20 c0       	rjmp	.+64     	; 0x18d6 <vfprintf+0x4a2>
    1896:	56 01       	movw	r10, r12
    1898:	72 e0       	ldi	r23, 0x02	; 2
    189a:	a7 0e       	add	r10, r23
    189c:	b1 1c       	adc	r11, r1
    189e:	f6 01       	movw	r30, r12
    18a0:	80 81       	ld	r24, Z
    18a2:	89 83       	std	Y+1, r24	; 0x01
    18a4:	01 e0       	ldi	r16, 0x01	; 1
    18a6:	10 e0       	ldi	r17, 0x00	; 0
    18a8:	64 01       	movw	r12, r8
    18aa:	13 c0       	rjmp	.+38     	; 0x18d2 <vfprintf+0x49e>
    18ac:	56 01       	movw	r10, r12
    18ae:	f2 e0       	ldi	r31, 0x02	; 2
    18b0:	af 0e       	add	r10, r31
    18b2:	b1 1c       	adc	r11, r1
    18b4:	f6 01       	movw	r30, r12
    18b6:	c0 80       	ld	r12, Z
    18b8:	d1 80       	ldd	r13, Z+1	; 0x01
    18ba:	26 ff       	sbrs	r18, 6
    18bc:	03 c0       	rjmp	.+6      	; 0x18c4 <vfprintf+0x490>
    18be:	61 2f       	mov	r22, r17
    18c0:	70 e0       	ldi	r23, 0x00	; 0
    18c2:	02 c0       	rjmp	.+4      	; 0x18c8 <vfprintf+0x494>
    18c4:	6f ef       	ldi	r22, 0xFF	; 255
    18c6:	7f ef       	ldi	r23, 0xFF	; 255
    18c8:	c6 01       	movw	r24, r12
    18ca:	2b 8b       	std	Y+19, r18	; 0x13
    18cc:	54 d2       	rcall	.+1192   	; 0x1d76 <strnlen>
    18ce:	8c 01       	movw	r16, r24
    18d0:	2b 89       	ldd	r18, Y+19	; 0x13
    18d2:	2f 77       	andi	r18, 0x7F	; 127
    18d4:	14 c0       	rjmp	.+40     	; 0x18fe <vfprintf+0x4ca>
    18d6:	56 01       	movw	r10, r12
    18d8:	f2 e0       	ldi	r31, 0x02	; 2
    18da:	af 0e       	add	r10, r31
    18dc:	b1 1c       	adc	r11, r1
    18de:	f6 01       	movw	r30, r12
    18e0:	c0 80       	ld	r12, Z
    18e2:	d1 80       	ldd	r13, Z+1	; 0x01
    18e4:	26 ff       	sbrs	r18, 6
    18e6:	03 c0       	rjmp	.+6      	; 0x18ee <vfprintf+0x4ba>
    18e8:	61 2f       	mov	r22, r17
    18ea:	70 e0       	ldi	r23, 0x00	; 0
    18ec:	02 c0       	rjmp	.+4      	; 0x18f2 <vfprintf+0x4be>
    18ee:	6f ef       	ldi	r22, 0xFF	; 255
    18f0:	7f ef       	ldi	r23, 0xFF	; 255
    18f2:	c6 01       	movw	r24, r12
    18f4:	2b 8b       	std	Y+19, r18	; 0x13
    18f6:	24 d2       	rcall	.+1096   	; 0x1d40 <strnlen_P>
    18f8:	8c 01       	movw	r16, r24
    18fa:	2b 89       	ldd	r18, Y+19	; 0x13
    18fc:	20 68       	ori	r18, 0x80	; 128
    18fe:	72 2e       	mov	r7, r18
    1900:	23 fd       	sbrc	r18, 3
    1902:	18 c0       	rjmp	.+48     	; 0x1934 <vfprintf+0x500>
    1904:	85 2d       	mov	r24, r5
    1906:	90 e0       	ldi	r25, 0x00	; 0
    1908:	08 17       	cp	r16, r24
    190a:	19 07       	cpc	r17, r25
    190c:	98 f4       	brcc	.+38     	; 0x1934 <vfprintf+0x500>
    190e:	b7 01       	movw	r22, r14
    1910:	80 e2       	ldi	r24, 0x20	; 32
    1912:	90 e0       	ldi	r25, 0x00	; 0
    1914:	3b d2       	rcall	.+1142   	; 0x1d8c <fputc>
    1916:	5a 94       	dec	r5
    1918:	f5 cf       	rjmp	.-22     	; 0x1904 <vfprintf+0x4d0>
    191a:	f6 01       	movw	r30, r12
    191c:	77 fc       	sbrc	r7, 7
    191e:	85 91       	lpm	r24, Z+
    1920:	77 fe       	sbrs	r7, 7
    1922:	81 91       	ld	r24, Z+
    1924:	6f 01       	movw	r12, r30
    1926:	b7 01       	movw	r22, r14
    1928:	90 e0       	ldi	r25, 0x00	; 0
    192a:	30 d2       	rcall	.+1120   	; 0x1d8c <fputc>
    192c:	51 10       	cpse	r5, r1
    192e:	5a 94       	dec	r5
    1930:	01 50       	subi	r16, 0x01	; 1
    1932:	11 09       	sbc	r17, r1
    1934:	01 15       	cp	r16, r1
    1936:	11 05       	cpc	r17, r1
    1938:	81 f7       	brne	.-32     	; 0x191a <vfprintf+0x4e6>
    193a:	db c0       	rjmp	.+438    	; 0x1af2 <vfprintf+0x6be>
    193c:	84 36       	cpi	r24, 0x64	; 100
    193e:	11 f0       	breq	.+4      	; 0x1944 <vfprintf+0x510>
    1940:	89 36       	cpi	r24, 0x69	; 105
    1942:	49 f5       	brne	.+82     	; 0x1996 <vfprintf+0x562>
    1944:	56 01       	movw	r10, r12
    1946:	27 ff       	sbrs	r18, 7
    1948:	09 c0       	rjmp	.+18     	; 0x195c <vfprintf+0x528>
    194a:	f4 e0       	ldi	r31, 0x04	; 4
    194c:	af 0e       	add	r10, r31
    194e:	b1 1c       	adc	r11, r1
    1950:	f6 01       	movw	r30, r12
    1952:	60 81       	ld	r22, Z
    1954:	71 81       	ldd	r23, Z+1	; 0x01
    1956:	82 81       	ldd	r24, Z+2	; 0x02
    1958:	93 81       	ldd	r25, Z+3	; 0x03
    195a:	0a c0       	rjmp	.+20     	; 0x1970 <vfprintf+0x53c>
    195c:	f2 e0       	ldi	r31, 0x02	; 2
    195e:	af 0e       	add	r10, r31
    1960:	b1 1c       	adc	r11, r1
    1962:	f6 01       	movw	r30, r12
    1964:	60 81       	ld	r22, Z
    1966:	71 81       	ldd	r23, Z+1	; 0x01
    1968:	88 27       	eor	r24, r24
    196a:	77 fd       	sbrc	r23, 7
    196c:	80 95       	com	r24
    196e:	98 2f       	mov	r25, r24
    1970:	02 2f       	mov	r16, r18
    1972:	0f 76       	andi	r16, 0x6F	; 111
    1974:	97 ff       	sbrs	r25, 7
    1976:	08 c0       	rjmp	.+16     	; 0x1988 <vfprintf+0x554>
    1978:	90 95       	com	r25
    197a:	80 95       	com	r24
    197c:	70 95       	com	r23
    197e:	61 95       	neg	r22
    1980:	7f 4f       	sbci	r23, 0xFF	; 255
    1982:	8f 4f       	sbci	r24, 0xFF	; 255
    1984:	9f 4f       	sbci	r25, 0xFF	; 255
    1986:	00 68       	ori	r16, 0x80	; 128
    1988:	2a e0       	ldi	r18, 0x0A	; 10
    198a:	30 e0       	ldi	r19, 0x00	; 0
    198c:	a4 01       	movw	r20, r8
    198e:	96 d2       	rcall	.+1324   	; 0x1ebc <__ultoa_invert>
    1990:	c8 2e       	mov	r12, r24
    1992:	c8 18       	sub	r12, r8
    1994:	3d c0       	rjmp	.+122    	; 0x1a10 <vfprintf+0x5dc>
    1996:	02 2f       	mov	r16, r18
    1998:	85 37       	cpi	r24, 0x75	; 117
    199a:	21 f4       	brne	.+8      	; 0x19a4 <vfprintf+0x570>
    199c:	0f 7e       	andi	r16, 0xEF	; 239
    199e:	2a e0       	ldi	r18, 0x0A	; 10
    19a0:	30 e0       	ldi	r19, 0x00	; 0
    19a2:	1d c0       	rjmp	.+58     	; 0x19de <vfprintf+0x5aa>
    19a4:	09 7f       	andi	r16, 0xF9	; 249
    19a6:	8f 36       	cpi	r24, 0x6F	; 111
    19a8:	91 f0       	breq	.+36     	; 0x19ce <vfprintf+0x59a>
    19aa:	18 f4       	brcc	.+6      	; 0x19b2 <vfprintf+0x57e>
    19ac:	88 35       	cpi	r24, 0x58	; 88
    19ae:	59 f0       	breq	.+22     	; 0x19c6 <vfprintf+0x592>
    19b0:	a9 c0       	rjmp	.+338    	; 0x1b04 <vfprintf+0x6d0>
    19b2:	80 37       	cpi	r24, 0x70	; 112
    19b4:	19 f0       	breq	.+6      	; 0x19bc <vfprintf+0x588>
    19b6:	88 37       	cpi	r24, 0x78	; 120
    19b8:	11 f0       	breq	.+4      	; 0x19be <vfprintf+0x58a>
    19ba:	a4 c0       	rjmp	.+328    	; 0x1b04 <vfprintf+0x6d0>
    19bc:	00 61       	ori	r16, 0x10	; 16
    19be:	04 ff       	sbrs	r16, 4
    19c0:	09 c0       	rjmp	.+18     	; 0x19d4 <vfprintf+0x5a0>
    19c2:	04 60       	ori	r16, 0x04	; 4
    19c4:	07 c0       	rjmp	.+14     	; 0x19d4 <vfprintf+0x5a0>
    19c6:	24 ff       	sbrs	r18, 4
    19c8:	08 c0       	rjmp	.+16     	; 0x19da <vfprintf+0x5a6>
    19ca:	06 60       	ori	r16, 0x06	; 6
    19cc:	06 c0       	rjmp	.+12     	; 0x19da <vfprintf+0x5a6>
    19ce:	28 e0       	ldi	r18, 0x08	; 8
    19d0:	30 e0       	ldi	r19, 0x00	; 0
    19d2:	05 c0       	rjmp	.+10     	; 0x19de <vfprintf+0x5aa>
    19d4:	20 e1       	ldi	r18, 0x10	; 16
    19d6:	30 e0       	ldi	r19, 0x00	; 0
    19d8:	02 c0       	rjmp	.+4      	; 0x19de <vfprintf+0x5aa>
    19da:	20 e1       	ldi	r18, 0x10	; 16
    19dc:	32 e0       	ldi	r19, 0x02	; 2
    19de:	56 01       	movw	r10, r12
    19e0:	07 ff       	sbrs	r16, 7
    19e2:	09 c0       	rjmp	.+18     	; 0x19f6 <vfprintf+0x5c2>
    19e4:	f4 e0       	ldi	r31, 0x04	; 4
    19e6:	af 0e       	add	r10, r31
    19e8:	b1 1c       	adc	r11, r1
    19ea:	f6 01       	movw	r30, r12
    19ec:	60 81       	ld	r22, Z
    19ee:	71 81       	ldd	r23, Z+1	; 0x01
    19f0:	82 81       	ldd	r24, Z+2	; 0x02
    19f2:	93 81       	ldd	r25, Z+3	; 0x03
    19f4:	08 c0       	rjmp	.+16     	; 0x1a06 <vfprintf+0x5d2>
    19f6:	f2 e0       	ldi	r31, 0x02	; 2
    19f8:	af 0e       	add	r10, r31
    19fa:	b1 1c       	adc	r11, r1
    19fc:	f6 01       	movw	r30, r12
    19fe:	60 81       	ld	r22, Z
    1a00:	71 81       	ldd	r23, Z+1	; 0x01
    1a02:	80 e0       	ldi	r24, 0x00	; 0
    1a04:	90 e0       	ldi	r25, 0x00	; 0
    1a06:	a4 01       	movw	r20, r8
    1a08:	59 d2       	rcall	.+1202   	; 0x1ebc <__ultoa_invert>
    1a0a:	c8 2e       	mov	r12, r24
    1a0c:	c8 18       	sub	r12, r8
    1a0e:	0f 77       	andi	r16, 0x7F	; 127
    1a10:	06 ff       	sbrs	r16, 6
    1a12:	0b c0       	rjmp	.+22     	; 0x1a2a <vfprintf+0x5f6>
    1a14:	20 2f       	mov	r18, r16
    1a16:	2e 7f       	andi	r18, 0xFE	; 254
    1a18:	c1 16       	cp	r12, r17
    1a1a:	50 f4       	brcc	.+20     	; 0x1a30 <vfprintf+0x5fc>
    1a1c:	04 ff       	sbrs	r16, 4
    1a1e:	0a c0       	rjmp	.+20     	; 0x1a34 <vfprintf+0x600>
    1a20:	02 fd       	sbrc	r16, 2
    1a22:	08 c0       	rjmp	.+16     	; 0x1a34 <vfprintf+0x600>
    1a24:	20 2f       	mov	r18, r16
    1a26:	2e 7e       	andi	r18, 0xEE	; 238
    1a28:	05 c0       	rjmp	.+10     	; 0x1a34 <vfprintf+0x600>
    1a2a:	dc 2c       	mov	r13, r12
    1a2c:	20 2f       	mov	r18, r16
    1a2e:	03 c0       	rjmp	.+6      	; 0x1a36 <vfprintf+0x602>
    1a30:	dc 2c       	mov	r13, r12
    1a32:	01 c0       	rjmp	.+2      	; 0x1a36 <vfprintf+0x602>
    1a34:	d1 2e       	mov	r13, r17
    1a36:	24 ff       	sbrs	r18, 4
    1a38:	0d c0       	rjmp	.+26     	; 0x1a54 <vfprintf+0x620>
    1a3a:	fe 01       	movw	r30, r28
    1a3c:	ec 0d       	add	r30, r12
    1a3e:	f1 1d       	adc	r31, r1
    1a40:	80 81       	ld	r24, Z
    1a42:	80 33       	cpi	r24, 0x30	; 48
    1a44:	11 f4       	brne	.+4      	; 0x1a4a <vfprintf+0x616>
    1a46:	29 7e       	andi	r18, 0xE9	; 233
    1a48:	09 c0       	rjmp	.+18     	; 0x1a5c <vfprintf+0x628>
    1a4a:	22 ff       	sbrs	r18, 2
    1a4c:	06 c0       	rjmp	.+12     	; 0x1a5a <vfprintf+0x626>
    1a4e:	d3 94       	inc	r13
    1a50:	d3 94       	inc	r13
    1a52:	04 c0       	rjmp	.+8      	; 0x1a5c <vfprintf+0x628>
    1a54:	82 2f       	mov	r24, r18
    1a56:	86 78       	andi	r24, 0x86	; 134
    1a58:	09 f0       	breq	.+2      	; 0x1a5c <vfprintf+0x628>
    1a5a:	d3 94       	inc	r13
    1a5c:	23 fd       	sbrc	r18, 3
    1a5e:	12 c0       	rjmp	.+36     	; 0x1a84 <vfprintf+0x650>
    1a60:	20 ff       	sbrs	r18, 0
    1a62:	06 c0       	rjmp	.+12     	; 0x1a70 <vfprintf+0x63c>
    1a64:	1c 2d       	mov	r17, r12
    1a66:	d5 14       	cp	r13, r5
    1a68:	18 f4       	brcc	.+6      	; 0x1a70 <vfprintf+0x63c>
    1a6a:	15 0d       	add	r17, r5
    1a6c:	1d 19       	sub	r17, r13
    1a6e:	d5 2c       	mov	r13, r5
    1a70:	d5 14       	cp	r13, r5
    1a72:	60 f4       	brcc	.+24     	; 0x1a8c <vfprintf+0x658>
    1a74:	b7 01       	movw	r22, r14
    1a76:	80 e2       	ldi	r24, 0x20	; 32
    1a78:	90 e0       	ldi	r25, 0x00	; 0
    1a7a:	2b 8b       	std	Y+19, r18	; 0x13
    1a7c:	87 d1       	rcall	.+782    	; 0x1d8c <fputc>
    1a7e:	d3 94       	inc	r13
    1a80:	2b 89       	ldd	r18, Y+19	; 0x13
    1a82:	f6 cf       	rjmp	.-20     	; 0x1a70 <vfprintf+0x63c>
    1a84:	d5 14       	cp	r13, r5
    1a86:	10 f4       	brcc	.+4      	; 0x1a8c <vfprintf+0x658>
    1a88:	5d 18       	sub	r5, r13
    1a8a:	01 c0       	rjmp	.+2      	; 0x1a8e <vfprintf+0x65a>
    1a8c:	51 2c       	mov	r5, r1
    1a8e:	24 ff       	sbrs	r18, 4
    1a90:	11 c0       	rjmp	.+34     	; 0x1ab4 <vfprintf+0x680>
    1a92:	b7 01       	movw	r22, r14
    1a94:	80 e3       	ldi	r24, 0x30	; 48
    1a96:	90 e0       	ldi	r25, 0x00	; 0
    1a98:	2b 8b       	std	Y+19, r18	; 0x13
    1a9a:	78 d1       	rcall	.+752    	; 0x1d8c <fputc>
    1a9c:	2b 89       	ldd	r18, Y+19	; 0x13
    1a9e:	22 ff       	sbrs	r18, 2
    1aa0:	16 c0       	rjmp	.+44     	; 0x1ace <vfprintf+0x69a>
    1aa2:	21 ff       	sbrs	r18, 1
    1aa4:	03 c0       	rjmp	.+6      	; 0x1aac <vfprintf+0x678>
    1aa6:	88 e5       	ldi	r24, 0x58	; 88
    1aa8:	90 e0       	ldi	r25, 0x00	; 0
    1aaa:	02 c0       	rjmp	.+4      	; 0x1ab0 <vfprintf+0x67c>
    1aac:	88 e7       	ldi	r24, 0x78	; 120
    1aae:	90 e0       	ldi	r25, 0x00	; 0
    1ab0:	b7 01       	movw	r22, r14
    1ab2:	0c c0       	rjmp	.+24     	; 0x1acc <vfprintf+0x698>
    1ab4:	82 2f       	mov	r24, r18
    1ab6:	86 78       	andi	r24, 0x86	; 134
    1ab8:	51 f0       	breq	.+20     	; 0x1ace <vfprintf+0x69a>
    1aba:	21 fd       	sbrc	r18, 1
    1abc:	02 c0       	rjmp	.+4      	; 0x1ac2 <vfprintf+0x68e>
    1abe:	80 e2       	ldi	r24, 0x20	; 32
    1ac0:	01 c0       	rjmp	.+2      	; 0x1ac4 <vfprintf+0x690>
    1ac2:	8b e2       	ldi	r24, 0x2B	; 43
    1ac4:	27 fd       	sbrc	r18, 7
    1ac6:	8d e2       	ldi	r24, 0x2D	; 45
    1ac8:	b7 01       	movw	r22, r14
    1aca:	90 e0       	ldi	r25, 0x00	; 0
    1acc:	5f d1       	rcall	.+702    	; 0x1d8c <fputc>
    1ace:	c1 16       	cp	r12, r17
    1ad0:	30 f4       	brcc	.+12     	; 0x1ade <vfprintf+0x6aa>
    1ad2:	b7 01       	movw	r22, r14
    1ad4:	80 e3       	ldi	r24, 0x30	; 48
    1ad6:	90 e0       	ldi	r25, 0x00	; 0
    1ad8:	59 d1       	rcall	.+690    	; 0x1d8c <fputc>
    1ada:	11 50       	subi	r17, 0x01	; 1
    1adc:	f8 cf       	rjmp	.-16     	; 0x1ace <vfprintf+0x69a>
    1ade:	ca 94       	dec	r12
    1ae0:	f4 01       	movw	r30, r8
    1ae2:	ec 0d       	add	r30, r12
    1ae4:	f1 1d       	adc	r31, r1
    1ae6:	80 81       	ld	r24, Z
    1ae8:	b7 01       	movw	r22, r14
    1aea:	90 e0       	ldi	r25, 0x00	; 0
    1aec:	4f d1       	rcall	.+670    	; 0x1d8c <fputc>
    1aee:	c1 10       	cpse	r12, r1
    1af0:	f6 cf       	rjmp	.-20     	; 0x1ade <vfprintf+0x6aa>
    1af2:	55 20       	and	r5, r5
    1af4:	09 f4       	brne	.+2      	; 0x1af8 <vfprintf+0x6c4>
    1af6:	dd cc       	rjmp	.-1606   	; 0x14b2 <vfprintf+0x7e>
    1af8:	b7 01       	movw	r22, r14
    1afa:	80 e2       	ldi	r24, 0x20	; 32
    1afc:	90 e0       	ldi	r25, 0x00	; 0
    1afe:	46 d1       	rcall	.+652    	; 0x1d8c <fputc>
    1b00:	5a 94       	dec	r5
    1b02:	f7 cf       	rjmp	.-18     	; 0x1af2 <vfprintf+0x6be>
    1b04:	f7 01       	movw	r30, r14
    1b06:	86 81       	ldd	r24, Z+6	; 0x06
    1b08:	97 81       	ldd	r25, Z+7	; 0x07
    1b0a:	02 c0       	rjmp	.+4      	; 0x1b10 <vfprintf+0x6dc>
    1b0c:	8f ef       	ldi	r24, 0xFF	; 255
    1b0e:	9f ef       	ldi	r25, 0xFF	; 255
    1b10:	63 96       	adiw	r28, 0x13	; 19
    1b12:	0f b6       	in	r0, 0x3f	; 63
    1b14:	f8 94       	cli
    1b16:	de bf       	out	0x3e, r29	; 62
    1b18:	0f be       	out	0x3f, r0	; 63
    1b1a:	cd bf       	out	0x3d, r28	; 61
    1b1c:	df 91       	pop	r29
    1b1e:	cf 91       	pop	r28
    1b20:	1f 91       	pop	r17
    1b22:	0f 91       	pop	r16
    1b24:	ff 90       	pop	r15
    1b26:	ef 90       	pop	r14
    1b28:	df 90       	pop	r13
    1b2a:	cf 90       	pop	r12
    1b2c:	bf 90       	pop	r11
    1b2e:	af 90       	pop	r10
    1b30:	9f 90       	pop	r9
    1b32:	8f 90       	pop	r8
    1b34:	7f 90       	pop	r7
    1b36:	6f 90       	pop	r6
    1b38:	5f 90       	pop	r5
    1b3a:	4f 90       	pop	r4
    1b3c:	3f 90       	pop	r3
    1b3e:	2f 90       	pop	r2
    1b40:	08 95       	ret

00001b42 <__divmodhi4>:
    1b42:	97 fb       	bst	r25, 7
    1b44:	07 2e       	mov	r0, r23
    1b46:	16 f4       	brtc	.+4      	; 0x1b4c <__divmodhi4+0xa>
    1b48:	00 94       	com	r0
    1b4a:	06 d0       	rcall	.+12     	; 0x1b58 <__divmodhi4_neg1>
    1b4c:	77 fd       	sbrc	r23, 7
    1b4e:	08 d0       	rcall	.+16     	; 0x1b60 <__divmodhi4_neg2>
    1b50:	0b d0       	rcall	.+22     	; 0x1b68 <__udivmodhi4>
    1b52:	07 fc       	sbrc	r0, 7
    1b54:	05 d0       	rcall	.+10     	; 0x1b60 <__divmodhi4_neg2>
    1b56:	3e f4       	brtc	.+14     	; 0x1b66 <__divmodhi4_exit>

00001b58 <__divmodhi4_neg1>:
    1b58:	90 95       	com	r25
    1b5a:	81 95       	neg	r24
    1b5c:	9f 4f       	sbci	r25, 0xFF	; 255
    1b5e:	08 95       	ret

00001b60 <__divmodhi4_neg2>:
    1b60:	70 95       	com	r23
    1b62:	61 95       	neg	r22
    1b64:	7f 4f       	sbci	r23, 0xFF	; 255

00001b66 <__divmodhi4_exit>:
    1b66:	08 95       	ret

00001b68 <__udivmodhi4>:
    1b68:	aa 1b       	sub	r26, r26
    1b6a:	bb 1b       	sub	r27, r27
    1b6c:	51 e1       	ldi	r21, 0x11	; 17
    1b6e:	07 c0       	rjmp	.+14     	; 0x1b7e <__udivmodhi4_ep>

00001b70 <__udivmodhi4_loop>:
    1b70:	aa 1f       	adc	r26, r26
    1b72:	bb 1f       	adc	r27, r27
    1b74:	a6 17       	cp	r26, r22
    1b76:	b7 07       	cpc	r27, r23
    1b78:	10 f0       	brcs	.+4      	; 0x1b7e <__udivmodhi4_ep>
    1b7a:	a6 1b       	sub	r26, r22
    1b7c:	b7 0b       	sbc	r27, r23

00001b7e <__udivmodhi4_ep>:
    1b7e:	88 1f       	adc	r24, r24
    1b80:	99 1f       	adc	r25, r25
    1b82:	5a 95       	dec	r21
    1b84:	a9 f7       	brne	.-22     	; 0x1b70 <__udivmodhi4_loop>
    1b86:	80 95       	com	r24
    1b88:	90 95       	com	r25
    1b8a:	bc 01       	movw	r22, r24
    1b8c:	cd 01       	movw	r24, r26
    1b8e:	08 95       	ret

00001b90 <__ftoa_engine>:
    1b90:	28 30       	cpi	r18, 0x08	; 8
    1b92:	08 f0       	brcs	.+2      	; 0x1b96 <__ftoa_engine+0x6>
    1b94:	27 e0       	ldi	r18, 0x07	; 7
    1b96:	33 27       	eor	r19, r19
    1b98:	da 01       	movw	r26, r20
    1b9a:	99 0f       	add	r25, r25
    1b9c:	31 1d       	adc	r19, r1
    1b9e:	87 fd       	sbrc	r24, 7
    1ba0:	91 60       	ori	r25, 0x01	; 1
    1ba2:	00 96       	adiw	r24, 0x00	; 0
    1ba4:	61 05       	cpc	r22, r1
    1ba6:	71 05       	cpc	r23, r1
    1ba8:	39 f4       	brne	.+14     	; 0x1bb8 <__ftoa_engine+0x28>
    1baa:	32 60       	ori	r19, 0x02	; 2
    1bac:	2e 5f       	subi	r18, 0xFE	; 254
    1bae:	3d 93       	st	X+, r19
    1bb0:	30 e3       	ldi	r19, 0x30	; 48
    1bb2:	2a 95       	dec	r18
    1bb4:	e1 f7       	brne	.-8      	; 0x1bae <__ftoa_engine+0x1e>
    1bb6:	08 95       	ret
    1bb8:	9f 3f       	cpi	r25, 0xFF	; 255
    1bba:	30 f0       	brcs	.+12     	; 0x1bc8 <__ftoa_engine+0x38>
    1bbc:	80 38       	cpi	r24, 0x80	; 128
    1bbe:	71 05       	cpc	r23, r1
    1bc0:	61 05       	cpc	r22, r1
    1bc2:	09 f0       	breq	.+2      	; 0x1bc6 <__ftoa_engine+0x36>
    1bc4:	3c 5f       	subi	r19, 0xFC	; 252
    1bc6:	3c 5f       	subi	r19, 0xFC	; 252
    1bc8:	3d 93       	st	X+, r19
    1bca:	91 30       	cpi	r25, 0x01	; 1
    1bcc:	08 f0       	brcs	.+2      	; 0x1bd0 <__ftoa_engine+0x40>
    1bce:	80 68       	ori	r24, 0x80	; 128
    1bd0:	91 1d       	adc	r25, r1
    1bd2:	df 93       	push	r29
    1bd4:	cf 93       	push	r28
    1bd6:	1f 93       	push	r17
    1bd8:	0f 93       	push	r16
    1bda:	ff 92       	push	r15
    1bdc:	ef 92       	push	r14
    1bde:	19 2f       	mov	r17, r25
    1be0:	98 7f       	andi	r25, 0xF8	; 248
    1be2:	96 95       	lsr	r25
    1be4:	e9 2f       	mov	r30, r25
    1be6:	96 95       	lsr	r25
    1be8:	96 95       	lsr	r25
    1bea:	e9 0f       	add	r30, r25
    1bec:	ff 27       	eor	r31, r31
    1bee:	ec 56       	subi	r30, 0x6C	; 108
    1bf0:	fe 4f       	sbci	r31, 0xFE	; 254
    1bf2:	99 27       	eor	r25, r25
    1bf4:	33 27       	eor	r19, r19
    1bf6:	ee 24       	eor	r14, r14
    1bf8:	ff 24       	eor	r15, r15
    1bfa:	a7 01       	movw	r20, r14
    1bfc:	e7 01       	movw	r28, r14
    1bfe:	05 90       	lpm	r0, Z+
    1c00:	08 94       	sec
    1c02:	07 94       	ror	r0
    1c04:	28 f4       	brcc	.+10     	; 0x1c10 <__ftoa_engine+0x80>
    1c06:	36 0f       	add	r19, r22
    1c08:	e7 1e       	adc	r14, r23
    1c0a:	f8 1e       	adc	r15, r24
    1c0c:	49 1f       	adc	r20, r25
    1c0e:	51 1d       	adc	r21, r1
    1c10:	66 0f       	add	r22, r22
    1c12:	77 1f       	adc	r23, r23
    1c14:	88 1f       	adc	r24, r24
    1c16:	99 1f       	adc	r25, r25
    1c18:	06 94       	lsr	r0
    1c1a:	a1 f7       	brne	.-24     	; 0x1c04 <__ftoa_engine+0x74>
    1c1c:	05 90       	lpm	r0, Z+
    1c1e:	07 94       	ror	r0
    1c20:	28 f4       	brcc	.+10     	; 0x1c2c <__ftoa_engine+0x9c>
    1c22:	e7 0e       	add	r14, r23
    1c24:	f8 1e       	adc	r15, r24
    1c26:	49 1f       	adc	r20, r25
    1c28:	56 1f       	adc	r21, r22
    1c2a:	c1 1d       	adc	r28, r1
    1c2c:	77 0f       	add	r23, r23
    1c2e:	88 1f       	adc	r24, r24
    1c30:	99 1f       	adc	r25, r25
    1c32:	66 1f       	adc	r22, r22
    1c34:	06 94       	lsr	r0
    1c36:	a1 f7       	brne	.-24     	; 0x1c20 <__ftoa_engine+0x90>
    1c38:	05 90       	lpm	r0, Z+
    1c3a:	07 94       	ror	r0
    1c3c:	28 f4       	brcc	.+10     	; 0x1c48 <__ftoa_engine+0xb8>
    1c3e:	f8 0e       	add	r15, r24
    1c40:	49 1f       	adc	r20, r25
    1c42:	56 1f       	adc	r21, r22
    1c44:	c7 1f       	adc	r28, r23
    1c46:	d1 1d       	adc	r29, r1
    1c48:	88 0f       	add	r24, r24
    1c4a:	99 1f       	adc	r25, r25
    1c4c:	66 1f       	adc	r22, r22
    1c4e:	77 1f       	adc	r23, r23
    1c50:	06 94       	lsr	r0
    1c52:	a1 f7       	brne	.-24     	; 0x1c3c <__ftoa_engine+0xac>
    1c54:	05 90       	lpm	r0, Z+
    1c56:	07 94       	ror	r0
    1c58:	20 f4       	brcc	.+8      	; 0x1c62 <__ftoa_engine+0xd2>
    1c5a:	49 0f       	add	r20, r25
    1c5c:	56 1f       	adc	r21, r22
    1c5e:	c7 1f       	adc	r28, r23
    1c60:	d8 1f       	adc	r29, r24
    1c62:	99 0f       	add	r25, r25
    1c64:	66 1f       	adc	r22, r22
    1c66:	77 1f       	adc	r23, r23
    1c68:	88 1f       	adc	r24, r24
    1c6a:	06 94       	lsr	r0
    1c6c:	a9 f7       	brne	.-22     	; 0x1c58 <__ftoa_engine+0xc8>
    1c6e:	84 91       	lpm	r24, Z
    1c70:	10 95       	com	r17
    1c72:	17 70       	andi	r17, 0x07	; 7
    1c74:	41 f0       	breq	.+16     	; 0x1c86 <__ftoa_engine+0xf6>
    1c76:	d6 95       	lsr	r29
    1c78:	c7 95       	ror	r28
    1c7a:	57 95       	ror	r21
    1c7c:	47 95       	ror	r20
    1c7e:	f7 94       	ror	r15
    1c80:	e7 94       	ror	r14
    1c82:	1a 95       	dec	r17
    1c84:	c1 f7       	brne	.-16     	; 0x1c76 <__ftoa_engine+0xe6>
    1c86:	ea e3       	ldi	r30, 0x3A	; 58
    1c88:	f1 e0       	ldi	r31, 0x01	; 1
    1c8a:	68 94       	set
    1c8c:	15 90       	lpm	r1, Z+
    1c8e:	15 91       	lpm	r17, Z+
    1c90:	35 91       	lpm	r19, Z+
    1c92:	65 91       	lpm	r22, Z+
    1c94:	95 91       	lpm	r25, Z+
    1c96:	05 90       	lpm	r0, Z+
    1c98:	7f e2       	ldi	r23, 0x2F	; 47
    1c9a:	73 95       	inc	r23
    1c9c:	e1 18       	sub	r14, r1
    1c9e:	f1 0a       	sbc	r15, r17
    1ca0:	43 0b       	sbc	r20, r19
    1ca2:	56 0b       	sbc	r21, r22
    1ca4:	c9 0b       	sbc	r28, r25
    1ca6:	d0 09       	sbc	r29, r0
    1ca8:	c0 f7       	brcc	.-16     	; 0x1c9a <__ftoa_engine+0x10a>
    1caa:	e1 0c       	add	r14, r1
    1cac:	f1 1e       	adc	r15, r17
    1cae:	43 1f       	adc	r20, r19
    1cb0:	56 1f       	adc	r21, r22
    1cb2:	c9 1f       	adc	r28, r25
    1cb4:	d0 1d       	adc	r29, r0
    1cb6:	7e f4       	brtc	.+30     	; 0x1cd6 <__ftoa_engine+0x146>
    1cb8:	70 33       	cpi	r23, 0x30	; 48
    1cba:	11 f4       	brne	.+4      	; 0x1cc0 <__ftoa_engine+0x130>
    1cbc:	8a 95       	dec	r24
    1cbe:	e6 cf       	rjmp	.-52     	; 0x1c8c <__ftoa_engine+0xfc>
    1cc0:	e8 94       	clt
    1cc2:	01 50       	subi	r16, 0x01	; 1
    1cc4:	30 f0       	brcs	.+12     	; 0x1cd2 <__ftoa_engine+0x142>
    1cc6:	08 0f       	add	r16, r24
    1cc8:	0a f4       	brpl	.+2      	; 0x1ccc <__ftoa_engine+0x13c>
    1cca:	00 27       	eor	r16, r16
    1ccc:	02 17       	cp	r16, r18
    1cce:	08 f4       	brcc	.+2      	; 0x1cd2 <__ftoa_engine+0x142>
    1cd0:	20 2f       	mov	r18, r16
    1cd2:	23 95       	inc	r18
    1cd4:	02 2f       	mov	r16, r18
    1cd6:	7a 33       	cpi	r23, 0x3A	; 58
    1cd8:	28 f0       	brcs	.+10     	; 0x1ce4 <__ftoa_engine+0x154>
    1cda:	79 e3       	ldi	r23, 0x39	; 57
    1cdc:	7d 93       	st	X+, r23
    1cde:	2a 95       	dec	r18
    1ce0:	e9 f7       	brne	.-6      	; 0x1cdc <__ftoa_engine+0x14c>
    1ce2:	10 c0       	rjmp	.+32     	; 0x1d04 <__ftoa_engine+0x174>
    1ce4:	7d 93       	st	X+, r23
    1ce6:	2a 95       	dec	r18
    1ce8:	89 f6       	brne	.-94     	; 0x1c8c <__ftoa_engine+0xfc>
    1cea:	06 94       	lsr	r0
    1cec:	97 95       	ror	r25
    1cee:	67 95       	ror	r22
    1cf0:	37 95       	ror	r19
    1cf2:	17 95       	ror	r17
    1cf4:	17 94       	ror	r1
    1cf6:	e1 18       	sub	r14, r1
    1cf8:	f1 0a       	sbc	r15, r17
    1cfa:	43 0b       	sbc	r20, r19
    1cfc:	56 0b       	sbc	r21, r22
    1cfe:	c9 0b       	sbc	r28, r25
    1d00:	d0 09       	sbc	r29, r0
    1d02:	98 f0       	brcs	.+38     	; 0x1d2a <__ftoa_engine+0x19a>
    1d04:	23 95       	inc	r18
    1d06:	7e 91       	ld	r23, -X
    1d08:	73 95       	inc	r23
    1d0a:	7a 33       	cpi	r23, 0x3A	; 58
    1d0c:	08 f0       	brcs	.+2      	; 0x1d10 <__ftoa_engine+0x180>
    1d0e:	70 e3       	ldi	r23, 0x30	; 48
    1d10:	7c 93       	st	X, r23
    1d12:	20 13       	cpse	r18, r16
    1d14:	b8 f7       	brcc	.-18     	; 0x1d04 <__ftoa_engine+0x174>
    1d16:	7e 91       	ld	r23, -X
    1d18:	70 61       	ori	r23, 0x10	; 16
    1d1a:	7d 93       	st	X+, r23
    1d1c:	30 f0       	brcs	.+12     	; 0x1d2a <__ftoa_engine+0x19a>
    1d1e:	83 95       	inc	r24
    1d20:	71 e3       	ldi	r23, 0x31	; 49
    1d22:	7d 93       	st	X+, r23
    1d24:	70 e3       	ldi	r23, 0x30	; 48
    1d26:	2a 95       	dec	r18
    1d28:	e1 f7       	brne	.-8      	; 0x1d22 <__ftoa_engine+0x192>
    1d2a:	11 24       	eor	r1, r1
    1d2c:	ef 90       	pop	r14
    1d2e:	ff 90       	pop	r15
    1d30:	0f 91       	pop	r16
    1d32:	1f 91       	pop	r17
    1d34:	cf 91       	pop	r28
    1d36:	df 91       	pop	r29
    1d38:	99 27       	eor	r25, r25
    1d3a:	87 fd       	sbrc	r24, 7
    1d3c:	90 95       	com	r25
    1d3e:	08 95       	ret

00001d40 <strnlen_P>:
    1d40:	fc 01       	movw	r30, r24
    1d42:	05 90       	lpm	r0, Z+
    1d44:	61 50       	subi	r22, 0x01	; 1
    1d46:	70 40       	sbci	r23, 0x00	; 0
    1d48:	01 10       	cpse	r0, r1
    1d4a:	d8 f7       	brcc	.-10     	; 0x1d42 <strnlen_P+0x2>
    1d4c:	80 95       	com	r24
    1d4e:	90 95       	com	r25
    1d50:	8e 0f       	add	r24, r30
    1d52:	9f 1f       	adc	r25, r31
    1d54:	08 95       	ret

00001d56 <strcmp>:
    1d56:	fb 01       	movw	r30, r22
    1d58:	dc 01       	movw	r26, r24
    1d5a:	8d 91       	ld	r24, X+
    1d5c:	01 90       	ld	r0, Z+
    1d5e:	80 19       	sub	r24, r0
    1d60:	01 10       	cpse	r0, r1
    1d62:	d9 f3       	breq	.-10     	; 0x1d5a <strcmp+0x4>
    1d64:	99 0b       	sbc	r25, r25
    1d66:	08 95       	ret

00001d68 <strcpy>:
    1d68:	fb 01       	movw	r30, r22
    1d6a:	dc 01       	movw	r26, r24
    1d6c:	01 90       	ld	r0, Z+
    1d6e:	0d 92       	st	X+, r0
    1d70:	00 20       	and	r0, r0
    1d72:	e1 f7       	brne	.-8      	; 0x1d6c <strcpy+0x4>
    1d74:	08 95       	ret

00001d76 <strnlen>:
    1d76:	fc 01       	movw	r30, r24
    1d78:	61 50       	subi	r22, 0x01	; 1
    1d7a:	70 40       	sbci	r23, 0x00	; 0
    1d7c:	01 90       	ld	r0, Z+
    1d7e:	01 10       	cpse	r0, r1
    1d80:	d8 f7       	brcc	.-10     	; 0x1d78 <strnlen+0x2>
    1d82:	80 95       	com	r24
    1d84:	90 95       	com	r25
    1d86:	8e 0f       	add	r24, r30
    1d88:	9f 1f       	adc	r25, r31
    1d8a:	08 95       	ret

00001d8c <fputc>:
    1d8c:	0f 93       	push	r16
    1d8e:	1f 93       	push	r17
    1d90:	cf 93       	push	r28
    1d92:	df 93       	push	r29
    1d94:	18 2f       	mov	r17, r24
    1d96:	09 2f       	mov	r16, r25
    1d98:	eb 01       	movw	r28, r22
    1d9a:	8b 81       	ldd	r24, Y+3	; 0x03
    1d9c:	81 fd       	sbrc	r24, 1
    1d9e:	03 c0       	rjmp	.+6      	; 0x1da6 <fputc+0x1a>
    1da0:	8f ef       	ldi	r24, 0xFF	; 255
    1da2:	9f ef       	ldi	r25, 0xFF	; 255
    1da4:	20 c0       	rjmp	.+64     	; 0x1de6 <fputc+0x5a>
    1da6:	82 ff       	sbrs	r24, 2
    1da8:	10 c0       	rjmp	.+32     	; 0x1dca <fputc+0x3e>
    1daa:	4e 81       	ldd	r20, Y+6	; 0x06
    1dac:	5f 81       	ldd	r21, Y+7	; 0x07
    1dae:	2c 81       	ldd	r18, Y+4	; 0x04
    1db0:	3d 81       	ldd	r19, Y+5	; 0x05
    1db2:	42 17       	cp	r20, r18
    1db4:	53 07       	cpc	r21, r19
    1db6:	7c f4       	brge	.+30     	; 0x1dd6 <fputc+0x4a>
    1db8:	e8 81       	ld	r30, Y
    1dba:	f9 81       	ldd	r31, Y+1	; 0x01
    1dbc:	9f 01       	movw	r18, r30
    1dbe:	2f 5f       	subi	r18, 0xFF	; 255
    1dc0:	3f 4f       	sbci	r19, 0xFF	; 255
    1dc2:	39 83       	std	Y+1, r19	; 0x01
    1dc4:	28 83       	st	Y, r18
    1dc6:	10 83       	st	Z, r17
    1dc8:	06 c0       	rjmp	.+12     	; 0x1dd6 <fputc+0x4a>
    1dca:	e8 85       	ldd	r30, Y+8	; 0x08
    1dcc:	f9 85       	ldd	r31, Y+9	; 0x09
    1dce:	81 2f       	mov	r24, r17
    1dd0:	09 95       	icall
    1dd2:	89 2b       	or	r24, r25
    1dd4:	29 f7       	brne	.-54     	; 0x1da0 <fputc+0x14>
    1dd6:	2e 81       	ldd	r18, Y+6	; 0x06
    1dd8:	3f 81       	ldd	r19, Y+7	; 0x07
    1dda:	2f 5f       	subi	r18, 0xFF	; 255
    1ddc:	3f 4f       	sbci	r19, 0xFF	; 255
    1dde:	3f 83       	std	Y+7, r19	; 0x07
    1de0:	2e 83       	std	Y+6, r18	; 0x06
    1de2:	81 2f       	mov	r24, r17
    1de4:	90 2f       	mov	r25, r16
    1de6:	df 91       	pop	r29
    1de8:	cf 91       	pop	r28
    1dea:	1f 91       	pop	r17
    1dec:	0f 91       	pop	r16
    1dee:	08 95       	ret

00001df0 <sprintf>:
    1df0:	0f 93       	push	r16
    1df2:	1f 93       	push	r17
    1df4:	cf 93       	push	r28
    1df6:	df 93       	push	r29
    1df8:	cd b7       	in	r28, 0x3d	; 61
    1dfa:	de b7       	in	r29, 0x3e	; 62
    1dfc:	2e 97       	sbiw	r28, 0x0e	; 14
    1dfe:	0f b6       	in	r0, 0x3f	; 63
    1e00:	f8 94       	cli
    1e02:	de bf       	out	0x3e, r29	; 62
    1e04:	0f be       	out	0x3f, r0	; 63
    1e06:	cd bf       	out	0x3d, r28	; 61
    1e08:	0d 89       	ldd	r16, Y+21	; 0x15
    1e0a:	1e 89       	ldd	r17, Y+22	; 0x16
    1e0c:	86 e0       	ldi	r24, 0x06	; 6
    1e0e:	8c 83       	std	Y+4, r24	; 0x04
    1e10:	1a 83       	std	Y+2, r17	; 0x02
    1e12:	09 83       	std	Y+1, r16	; 0x01
    1e14:	8f ef       	ldi	r24, 0xFF	; 255
    1e16:	9f e7       	ldi	r25, 0x7F	; 127
    1e18:	9e 83       	std	Y+6, r25	; 0x06
    1e1a:	8d 83       	std	Y+5, r24	; 0x05
    1e1c:	ae 01       	movw	r20, r28
    1e1e:	47 5e       	subi	r20, 0xE7	; 231
    1e20:	5f 4f       	sbci	r21, 0xFF	; 255
    1e22:	6f 89       	ldd	r22, Y+23	; 0x17
    1e24:	78 8d       	ldd	r23, Y+24	; 0x18
    1e26:	ce 01       	movw	r24, r28
    1e28:	01 96       	adiw	r24, 0x01	; 1
    1e2a:	04 db       	rcall	.-2552   	; 0x1434 <vfprintf>
    1e2c:	ef 81       	ldd	r30, Y+7	; 0x07
    1e2e:	f8 85       	ldd	r31, Y+8	; 0x08
    1e30:	e0 0f       	add	r30, r16
    1e32:	f1 1f       	adc	r31, r17
    1e34:	10 82       	st	Z, r1
    1e36:	2e 96       	adiw	r28, 0x0e	; 14
    1e38:	0f b6       	in	r0, 0x3f	; 63
    1e3a:	f8 94       	cli
    1e3c:	de bf       	out	0x3e, r29	; 62
    1e3e:	0f be       	out	0x3f, r0	; 63
    1e40:	cd bf       	out	0x3d, r28	; 61
    1e42:	df 91       	pop	r29
    1e44:	cf 91       	pop	r28
    1e46:	1f 91       	pop	r17
    1e48:	0f 91       	pop	r16
    1e4a:	08 95       	ret

00001e4c <vsnprintf>:
    1e4c:	0f 93       	push	r16
    1e4e:	1f 93       	push	r17
    1e50:	cf 93       	push	r28
    1e52:	df 93       	push	r29
    1e54:	cd b7       	in	r28, 0x3d	; 61
    1e56:	de b7       	in	r29, 0x3e	; 62
    1e58:	2e 97       	sbiw	r28, 0x0e	; 14
    1e5a:	0f b6       	in	r0, 0x3f	; 63
    1e5c:	f8 94       	cli
    1e5e:	de bf       	out	0x3e, r29	; 62
    1e60:	0f be       	out	0x3f, r0	; 63
    1e62:	cd bf       	out	0x3d, r28	; 61
    1e64:	8c 01       	movw	r16, r24
    1e66:	ca 01       	movw	r24, r20
    1e68:	46 e0       	ldi	r20, 0x06	; 6
    1e6a:	4c 83       	std	Y+4, r20	; 0x04
    1e6c:	1a 83       	std	Y+2, r17	; 0x02
    1e6e:	09 83       	std	Y+1, r16	; 0x01
    1e70:	77 ff       	sbrs	r23, 7
    1e72:	02 c0       	rjmp	.+4      	; 0x1e78 <vsnprintf+0x2c>
    1e74:	60 e0       	ldi	r22, 0x00	; 0
    1e76:	70 e8       	ldi	r23, 0x80	; 128
    1e78:	61 50       	subi	r22, 0x01	; 1
    1e7a:	71 09       	sbc	r23, r1
    1e7c:	7e 83       	std	Y+6, r23	; 0x06
    1e7e:	6d 83       	std	Y+5, r22	; 0x05
    1e80:	a9 01       	movw	r20, r18
    1e82:	bc 01       	movw	r22, r24
    1e84:	ce 01       	movw	r24, r28
    1e86:	01 96       	adiw	r24, 0x01	; 1
    1e88:	d5 da       	rcall	.-2646   	; 0x1434 <vfprintf>
    1e8a:	4d 81       	ldd	r20, Y+5	; 0x05
    1e8c:	5e 81       	ldd	r21, Y+6	; 0x06
    1e8e:	57 fd       	sbrc	r21, 7
    1e90:	0a c0       	rjmp	.+20     	; 0x1ea6 <vsnprintf+0x5a>
    1e92:	2f 81       	ldd	r18, Y+7	; 0x07
    1e94:	38 85       	ldd	r19, Y+8	; 0x08
    1e96:	42 17       	cp	r20, r18
    1e98:	53 07       	cpc	r21, r19
    1e9a:	0c f4       	brge	.+2      	; 0x1e9e <vsnprintf+0x52>
    1e9c:	9a 01       	movw	r18, r20
    1e9e:	f8 01       	movw	r30, r16
    1ea0:	e2 0f       	add	r30, r18
    1ea2:	f3 1f       	adc	r31, r19
    1ea4:	10 82       	st	Z, r1
    1ea6:	2e 96       	adiw	r28, 0x0e	; 14
    1ea8:	0f b6       	in	r0, 0x3f	; 63
    1eaa:	f8 94       	cli
    1eac:	de bf       	out	0x3e, r29	; 62
    1eae:	0f be       	out	0x3f, r0	; 63
    1eb0:	cd bf       	out	0x3d, r28	; 61
    1eb2:	df 91       	pop	r29
    1eb4:	cf 91       	pop	r28
    1eb6:	1f 91       	pop	r17
    1eb8:	0f 91       	pop	r16
    1eba:	08 95       	ret

00001ebc <__ultoa_invert>:
    1ebc:	fa 01       	movw	r30, r20
    1ebe:	aa 27       	eor	r26, r26
    1ec0:	28 30       	cpi	r18, 0x08	; 8
    1ec2:	51 f1       	breq	.+84     	; 0x1f18 <__ultoa_invert+0x5c>
    1ec4:	20 31       	cpi	r18, 0x10	; 16
    1ec6:	81 f1       	breq	.+96     	; 0x1f28 <__ultoa_invert+0x6c>
    1ec8:	e8 94       	clt
    1eca:	6f 93       	push	r22
    1ecc:	6e 7f       	andi	r22, 0xFE	; 254
    1ece:	6e 5f       	subi	r22, 0xFE	; 254
    1ed0:	7f 4f       	sbci	r23, 0xFF	; 255
    1ed2:	8f 4f       	sbci	r24, 0xFF	; 255
    1ed4:	9f 4f       	sbci	r25, 0xFF	; 255
    1ed6:	af 4f       	sbci	r26, 0xFF	; 255
    1ed8:	b1 e0       	ldi	r27, 0x01	; 1
    1eda:	3e d0       	rcall	.+124    	; 0x1f58 <__ultoa_invert+0x9c>
    1edc:	b4 e0       	ldi	r27, 0x04	; 4
    1ede:	3c d0       	rcall	.+120    	; 0x1f58 <__ultoa_invert+0x9c>
    1ee0:	67 0f       	add	r22, r23
    1ee2:	78 1f       	adc	r23, r24
    1ee4:	89 1f       	adc	r24, r25
    1ee6:	9a 1f       	adc	r25, r26
    1ee8:	a1 1d       	adc	r26, r1
    1eea:	68 0f       	add	r22, r24
    1eec:	79 1f       	adc	r23, r25
    1eee:	8a 1f       	adc	r24, r26
    1ef0:	91 1d       	adc	r25, r1
    1ef2:	a1 1d       	adc	r26, r1
    1ef4:	6a 0f       	add	r22, r26
    1ef6:	71 1d       	adc	r23, r1
    1ef8:	81 1d       	adc	r24, r1
    1efa:	91 1d       	adc	r25, r1
    1efc:	a1 1d       	adc	r26, r1
    1efe:	20 d0       	rcall	.+64     	; 0x1f40 <__ultoa_invert+0x84>
    1f00:	09 f4       	brne	.+2      	; 0x1f04 <__ultoa_invert+0x48>
    1f02:	68 94       	set
    1f04:	3f 91       	pop	r19
    1f06:	2a e0       	ldi	r18, 0x0A	; 10
    1f08:	26 9f       	mul	r18, r22
    1f0a:	11 24       	eor	r1, r1
    1f0c:	30 19       	sub	r19, r0
    1f0e:	30 5d       	subi	r19, 0xD0	; 208
    1f10:	31 93       	st	Z+, r19
    1f12:	de f6       	brtc	.-74     	; 0x1eca <__ultoa_invert+0xe>
    1f14:	cf 01       	movw	r24, r30
    1f16:	08 95       	ret
    1f18:	46 2f       	mov	r20, r22
    1f1a:	47 70       	andi	r20, 0x07	; 7
    1f1c:	40 5d       	subi	r20, 0xD0	; 208
    1f1e:	41 93       	st	Z+, r20
    1f20:	b3 e0       	ldi	r27, 0x03	; 3
    1f22:	0f d0       	rcall	.+30     	; 0x1f42 <__ultoa_invert+0x86>
    1f24:	c9 f7       	brne	.-14     	; 0x1f18 <__ultoa_invert+0x5c>
    1f26:	f6 cf       	rjmp	.-20     	; 0x1f14 <__ultoa_invert+0x58>
    1f28:	46 2f       	mov	r20, r22
    1f2a:	4f 70       	andi	r20, 0x0F	; 15
    1f2c:	40 5d       	subi	r20, 0xD0	; 208
    1f2e:	4a 33       	cpi	r20, 0x3A	; 58
    1f30:	18 f0       	brcs	.+6      	; 0x1f38 <__ultoa_invert+0x7c>
    1f32:	49 5d       	subi	r20, 0xD9	; 217
    1f34:	31 fd       	sbrc	r19, 1
    1f36:	40 52       	subi	r20, 0x20	; 32
    1f38:	41 93       	st	Z+, r20
    1f3a:	02 d0       	rcall	.+4      	; 0x1f40 <__ultoa_invert+0x84>
    1f3c:	a9 f7       	brne	.-22     	; 0x1f28 <__ultoa_invert+0x6c>
    1f3e:	ea cf       	rjmp	.-44     	; 0x1f14 <__ultoa_invert+0x58>
    1f40:	b4 e0       	ldi	r27, 0x04	; 4
    1f42:	a6 95       	lsr	r26
    1f44:	97 95       	ror	r25
    1f46:	87 95       	ror	r24
    1f48:	77 95       	ror	r23
    1f4a:	67 95       	ror	r22
    1f4c:	ba 95       	dec	r27
    1f4e:	c9 f7       	brne	.-14     	; 0x1f42 <__ultoa_invert+0x86>
    1f50:	00 97       	sbiw	r24, 0x00	; 0
    1f52:	61 05       	cpc	r22, r1
    1f54:	71 05       	cpc	r23, r1
    1f56:	08 95       	ret
    1f58:	9b 01       	movw	r18, r22
    1f5a:	ac 01       	movw	r20, r24
    1f5c:	0a 2e       	mov	r0, r26
    1f5e:	06 94       	lsr	r0
    1f60:	57 95       	ror	r21
    1f62:	47 95       	ror	r20
    1f64:	37 95       	ror	r19
    1f66:	27 95       	ror	r18
    1f68:	ba 95       	dec	r27
    1f6a:	c9 f7       	brne	.-14     	; 0x1f5e <__ultoa_invert+0xa2>
    1f6c:	62 0f       	add	r22, r18
    1f6e:	73 1f       	adc	r23, r19
    1f70:	84 1f       	adc	r24, r20
    1f72:	95 1f       	adc	r25, r21
    1f74:	a0 1d       	adc	r26, r0
    1f76:	08 95       	ret

00001f78 <_exit>:
    1f78:	f8 94       	cli

00001f7a <__stop_program>:
    1f7a:	ff cf       	rjmp	.-2      	; 0x1f7a <__stop_program>
