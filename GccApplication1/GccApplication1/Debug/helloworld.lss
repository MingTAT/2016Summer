
helloworld.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000004c  00800100  000009ee  00000a82  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009ee  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000053  0080014c  0080014c  00000ace  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000ace  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000d8  00000000  00000000  00000b2a  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000086d  00000000  00000000  00000c02  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000036b  00000000  00000000  0000146f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000005fe  00000000  00000000  000017da  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001ec  00000000  00000000  00001dd8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002c6  00000000  00000000  00001fc4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000004b5  00000000  00000000  0000228a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000a8  00000000  00000000  0000273f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	c8 c1       	rjmp	.+912    	; 0x3b6 <__vector_9>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ee ee       	ldi	r30, 0xEE	; 238
  a0:	f9 e0       	ldi	r31, 0x09	; 9
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ac 34       	cpi	r26, 0x4C	; 76
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	ac e4       	ldi	r26, 0x4C	; 76
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	af 39       	cpi	r26, 0x9F	; 159
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	02 d0       	rcall	.+4      	; 0xc8 <main>
  c4:	92 c4       	rjmp	.+2340   	; 0x9ea <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <main>:
/**
 * This program prints "Hello, world" to the LCD screen
 * @author Chad Nelson
 * @date 06/26/2012
 */
int main (void) {
  c8:	cf 93       	push	r28
  ca:	df 93       	push	r29
  cc:	cd b7       	in	r28, 0x3d	; 61
  ce:	de b7       	in	r29, 0x3e	; 62
  d0:	cd 55       	subi	r28, 0x5D	; 93
  d2:	d1 09       	sbc	r29, r1
  d4:	0f b6       	in	r0, 0x3f	; 63
  d6:	f8 94       	cli
  d8:	de bf       	out	0x3e, r29	; 62
  da:	0f be       	out	0x3f, r0	; 63
  dc:	cd bf       	out	0x3d, r28	; 61
	// Initialize the the LCD.  This also clears the screen.
	lcd_init(); 
  de:	74 d0       	rcall	.+232    	; 0x1c8 <lcd_init>
	char name[]= "                   Microcontrollers are lots of fun!                    ";
  e0:	89 e4       	ldi	r24, 0x49	; 73
  e2:	e3 e0       	ldi	r30, 0x03	; 3
  e4:	f1 e0       	ldi	r31, 0x01	; 1
  e6:	de 01       	movw	r26, r28
  e8:	11 96       	adiw	r26, 0x01	; 1
  ea:	01 90       	ld	r0, Z+
  ec:	0d 92       	st	X+, r0
  ee:	8a 95       	dec	r24
  f0:	e1 f7       	brne	.-8      	; 0xea <main+0x22>
	char space[]="                   ";
  f2:	84 e1       	ldi	r24, 0x14	; 20
  f4:	e8 e3       	ldi	r30, 0x38	; 56
  f6:	f1 e0       	ldi	r31, 0x01	; 1
  f8:	de 01       	movw	r26, r28
  fa:	a6 5b       	subi	r26, 0xB6	; 182
  fc:	bf 4f       	sbci	r27, 0xFF	; 255
  fe:	01 90       	ld	r0, Z+
 100:	0d 92       	st	X+, r0
 102:	8a 95       	dec	r24
 104:	e1 f7       	brne	.-8      	; 0xfe <main+0x36>

	
	// Clear the LCD screen and print "Hello, world" on the LCD
	//lprintf("Hello, world");
	while(1){
	for(int i =0; i<strlen(name) - 20; i++){
 106:	00 e0       	ldi	r16, 0x00	; 0
 108:	10 e0       	ldi	r17, 0x00	; 0
 10a:	ce 01       	movw	r24, r28
 10c:	01 96       	adiw	r24, 0x01	; 1
 10e:	5c 01       	movw	r10, r24
 110:	61 2c       	mov	r6, r1
 112:	71 2c       	mov	r7, r1
 114:	6e 01       	movw	r12, r28
 116:	9a e4       	ldi	r25, 0x4A	; 74
 118:	c9 0e       	add	r12, r25
 11a:	d1 1c       	adc	r13, r1
 11c:	76 01       	movw	r14, r12
 11e:	84 e1       	ldi	r24, 0x14	; 20
 120:	e8 0e       	add	r14, r24
 122:	f1 1c       	adc	r15, r1
		for(int j = 0; j<20; j++){
			space[j] = name[i+j];
		}
		lprintf("%s", space);
 124:	0f 2e       	mov	r0, r31
 126:	f0 e0       	ldi	r31, 0x00	; 0
 128:	8f 2e       	mov	r8, r31
 12a:	f1 e0       	ldi	r31, 0x01	; 1
 12c:	9f 2e       	mov	r9, r31
 12e:	f0 2d       	mov	r31, r0
 130:	13 c0       	rjmp	.+38     	; 0x158 <main+0x90>
	// Clear the LCD screen and print "Hello, world" on the LCD
	//lprintf("Hello, world");
	while(1){
	for(int i =0; i<strlen(name) - 20; i++){
		for(int j = 0; j<20; j++){
			space[j] = name[i+j];
 132:	8d 91       	ld	r24, X+
 134:	81 93       	st	Z+, r24
	
	// Clear the LCD screen and print "Hello, world" on the LCD
	//lprintf("Hello, world");
	while(1){
	for(int i =0; i<strlen(name) - 20; i++){
		for(int j = 0; j<20; j++){
 136:	ee 15       	cp	r30, r14
 138:	ff 05       	cpc	r31, r15
 13a:	d9 f7       	brne	.-10     	; 0x132 <main+0x6a>
			space[j] = name[i+j];
		}
		lprintf("%s", space);
 13c:	df 92       	push	r13
 13e:	cf 92       	push	r12
 140:	9f 92       	push	r9
 142:	8f 92       	push	r8
 144:	92 d0       	rcall	.+292    	; 0x26a <lprintf>
		wait_ms(300);
 146:	8c e2       	ldi	r24, 0x2C	; 44
 148:	91 e0       	ldi	r25, 0x01	; 1
 14a:	1f d1       	rcall	.+574    	; 0x38a <wait_ms>

	
	// Clear the LCD screen and print "Hello, world" on the LCD
	//lprintf("Hello, world");
	while(1){
	for(int i =0; i<strlen(name) - 20; i++){
 14c:	0f 5f       	subi	r16, 0xFF	; 255
 14e:	1f 4f       	sbci	r17, 0xFF	; 255
 150:	0f 90       	pop	r0
 152:	0f 90       	pop	r0
 154:	0f 90       	pop	r0
 156:	0f 90       	pop	r0
 158:	f5 01       	movw	r30, r10
 15a:	01 90       	ld	r0, Z+
 15c:	00 20       	and	r0, r0
 15e:	e9 f7       	brne	.-6      	; 0x15a <main+0x92>
 160:	cf 01       	movw	r24, r30
 162:	8a 19       	sub	r24, r10
 164:	9b 09       	sbc	r25, r11
 166:	45 97       	sbiw	r24, 0x15	; 21
 168:	08 17       	cp	r16, r24
 16a:	19 07       	cpc	r17, r25
 16c:	18 f0       	brcs	.+6      	; 0x174 <main+0xac>
 16e:	06 2d       	mov	r16, r6
 170:	17 2d       	mov	r17, r7
 172:	fa cf       	rjmp	.-12     	; 0x168 <main+0xa0>
 174:	d5 01       	movw	r26, r10
 176:	a0 0f       	add	r26, r16
 178:	b1 1f       	adc	r27, r17
 17a:	f6 01       	movw	r30, r12
 17c:	da cf       	rjmp	.-76     	; 0x132 <main+0x6a>

0000017e <lcd_toggle_clear>:
	int i;

	for (i=0;i<size;i++) {		
		lcd_putc(string[i]);
	}
}
 17e:	de 9a       	sbi	0x1b, 6	; 27
 180:	90 e0       	ldi	r25, 0x00	; 0
 182:	03 d1       	rcall	.+518    	; 0x38a <wait_ms>
 184:	de 98       	cbi	0x1b, 6	; 27
 186:	8b b3       	in	r24, 0x1b	; 27
 188:	80 7f       	andi	r24, 0xF0	; 240
 18a:	8b bb       	out	0x1b, r24	; 27
 18c:	08 95       	ret

0000018e <lcd_command>:
 18e:	cf 93       	push	r28
 190:	c8 2f       	mov	r28, r24
 192:	dc 98       	cbi	0x1b, 4	; 27
 194:	8b b3       	in	r24, 0x1b	; 27
 196:	9c 2f       	mov	r25, r28
 198:	92 95       	swap	r25
 19a:	9f 70       	andi	r25, 0x0F	; 15
 19c:	89 2b       	or	r24, r25
 19e:	8b bb       	out	0x1b, r24	; 27
 1a0:	82 e0       	ldi	r24, 0x02	; 2
 1a2:	ed df       	rcall	.-38     	; 0x17e <lcd_toggle_clear>
 1a4:	8b b3       	in	r24, 0x1b	; 27
 1a6:	cf 70       	andi	r28, 0x0F	; 15
 1a8:	c8 2b       	or	r28, r24
 1aa:	cb bb       	out	0x1b, r28	; 27
 1ac:	82 e0       	ldi	r24, 0x02	; 2
 1ae:	e7 df       	rcall	.-50     	; 0x17e <lcd_toggle_clear>
 1b0:	dc 9a       	sbi	0x1b, 4	; 27
 1b2:	cf 91       	pop	r28
 1b4:	08 95       	ret

000001b6 <lcd_clear>:
 1b6:	81 e0       	ldi	r24, 0x01	; 1
 1b8:	ea df       	rcall	.-44     	; 0x18e <lcd_command>
 1ba:	81 e0       	ldi	r24, 0x01	; 1
 1bc:	90 e0       	ldi	r25, 0x00	; 0
 1be:	e5 c0       	rjmp	.+458    	; 0x38a <wait_ms>
 1c0:	08 95       	ret

000001c2 <lcd_home_line1>:
 1c2:	82 e0       	ldi	r24, 0x02	; 2
 1c4:	e4 cf       	rjmp	.-56     	; 0x18e <lcd_command>
 1c6:	08 95       	ret

000001c8 <lcd_init>:
 1c8:	8f ef       	ldi	r24, 0xFF	; 255
 1ca:	8a bb       	out	0x1a, r24	; 26
 1cc:	83 e0       	ldi	r24, 0x03	; 3
 1ce:	8b bb       	out	0x1b, r24	; 27
 1d0:	de 9a       	sbi	0x1b, 6	; 27
 1d2:	81 e0       	ldi	r24, 0x01	; 1
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	d9 d0       	rcall	.+434    	; 0x38a <wait_ms>
 1d8:	de 98       	cbi	0x1b, 6	; 27
 1da:	85 e0       	ldi	r24, 0x05	; 5
 1dc:	90 e0       	ldi	r25, 0x00	; 0
 1de:	d5 d0       	rcall	.+426    	; 0x38a <wait_ms>
 1e0:	de 9a       	sbi	0x1b, 6	; 27
 1e2:	81 e0       	ldi	r24, 0x01	; 1
 1e4:	90 e0       	ldi	r25, 0x00	; 0
 1e6:	d1 d0       	rcall	.+418    	; 0x38a <wait_ms>
 1e8:	de 98       	cbi	0x1b, 6	; 27
 1ea:	de 9a       	sbi	0x1b, 6	; 27
 1ec:	81 e0       	ldi	r24, 0x01	; 1
 1ee:	90 e0       	ldi	r25, 0x00	; 0
 1f0:	cc d0       	rcall	.+408    	; 0x38a <wait_ms>
 1f2:	de 98       	cbi	0x1b, 6	; 27
 1f4:	82 e0       	ldi	r24, 0x02	; 2
 1f6:	8b bb       	out	0x1b, r24	; 27
 1f8:	81 e0       	ldi	r24, 0x01	; 1
 1fa:	c1 df       	rcall	.-126    	; 0x17e <lcd_toggle_clear>
 1fc:	8b b3       	in	r24, 0x1b	; 27
 1fe:	8b bb       	out	0x1b, r24	; 27
 200:	81 e0       	ldi	r24, 0x01	; 1
 202:	bd df       	rcall	.-134    	; 0x17e <lcd_toggle_clear>
 204:	8b b3       	in	r24, 0x1b	; 27
 206:	8e 60       	ori	r24, 0x0E	; 14
 208:	8b bb       	out	0x1b, r24	; 27
 20a:	81 e0       	ldi	r24, 0x01	; 1
 20c:	b8 df       	rcall	.-144    	; 0x17e <lcd_toggle_clear>
 20e:	8b b3       	in	r24, 0x1b	; 27
 210:	8b bb       	out	0x1b, r24	; 27
 212:	81 e0       	ldi	r24, 0x01	; 1
 214:	b4 df       	rcall	.-152    	; 0x17e <lcd_toggle_clear>
 216:	8b b3       	in	r24, 0x1b	; 27
 218:	86 60       	ori	r24, 0x06	; 6
 21a:	8b bb       	out	0x1b, r24	; 27
 21c:	81 e0       	ldi	r24, 0x01	; 1
 21e:	af df       	rcall	.-162    	; 0x17e <lcd_toggle_clear>
 220:	8b b3       	in	r24, 0x1b	; 27
 222:	8b bb       	out	0x1b, r24	; 27
 224:	81 e0       	ldi	r24, 0x01	; 1
 226:	ab df       	rcall	.-170    	; 0x17e <lcd_toggle_clear>
 228:	d8 9a       	sbi	0x1b, 0	; 27
 22a:	81 e0       	ldi	r24, 0x01	; 1
 22c:	a8 df       	rcall	.-176    	; 0x17e <lcd_toggle_clear>
 22e:	dc 9a       	sbi	0x1b, 4	; 27
 230:	c8 cf       	rjmp	.-112    	; 0x1c2 <lcd_home_line1>
 232:	08 95       	ret

00000234 <lcd_home_line2>:
 234:	80 ec       	ldi	r24, 0xC0	; 192
 236:	ab cf       	rjmp	.-170    	; 0x18e <lcd_command>
 238:	08 95       	ret

0000023a <lcd_home_line3>:
 23a:	84 e9       	ldi	r24, 0x94	; 148
 23c:	a8 cf       	rjmp	.-176    	; 0x18e <lcd_command>
 23e:	08 95       	ret

00000240 <lcd_home_line4>:
 240:	84 ed       	ldi	r24, 0xD4	; 212
 242:	a5 cf       	rjmp	.-182    	; 0x18e <lcd_command>
 244:	08 95       	ret

00000246 <lcd_putc>:
 246:	cf 93       	push	r28
 248:	c8 2f       	mov	r28, r24
 24a:	8b b3       	in	r24, 0x1b	; 27
 24c:	9c 2f       	mov	r25, r28
 24e:	92 95       	swap	r25
 250:	9f 70       	andi	r25, 0x0F	; 15
 252:	89 2b       	or	r24, r25
 254:	8b bb       	out	0x1b, r24	; 27
 256:	81 e0       	ldi	r24, 0x01	; 1
 258:	92 df       	rcall	.-220    	; 0x17e <lcd_toggle_clear>
 25a:	8b b3       	in	r24, 0x1b	; 27
 25c:	cf 70       	andi	r28, 0x0F	; 15
 25e:	c8 2b       	or	r28, r24
 260:	cb bb       	out	0x1b, r28	; 27
 262:	81 e0       	ldi	r24, 0x01	; 1
 264:	8c df       	rcall	.-232    	; 0x17e <lcd_toggle_clear>
 266:	cf 91       	pop	r28
 268:	08 95       	ret

0000026a <lprintf>:
 *
 * Code from this site was also used: http://www.ozzu.com/cpp-tutorials/tutorial-writing-custom-printf-wrapper-function-t89166.html
 * @author Kerrick Staley & Chad Nelson
 * @date 05/16/2012
 */
void lprintf(const char *format, ...) {
 26a:	cf 92       	push	r12
 26c:	df 92       	push	r13
 26e:	ef 92       	push	r14
 270:	ff 92       	push	r15
 272:	0f 93       	push	r16
 274:	1f 93       	push	r17
 276:	cf 93       	push	r28
 278:	df 93       	push	r29
 27a:	cd b7       	in	r28, 0x3d	; 61
 27c:	de b7       	in	r29, 0x3e	; 62
 27e:	c1 55       	subi	r28, 0x51	; 81
 280:	d1 09       	sbc	r29, r1
 282:	0f b6       	in	r0, 0x3f	; 63
 284:	f8 94       	cli
 286:	de bf       	out	0x3e, r29	; 62
 288:	0f be       	out	0x3f, r0	; 63
 28a:	cd bf       	out	0x3d, r28	; 61
 28c:	fe 01       	movw	r30, r28
 28e:	e4 5a       	subi	r30, 0xA4	; 164
 290:	ff 4f       	sbci	r31, 0xFF	; 255
 292:	41 91       	ld	r20, Z+
 294:	51 91       	ld	r21, Z+
	static char lastbuffer[LCD_TOTAL_CHARS + 1];

	char buffer[LCD_TOTAL_CHARS + 1];
	va_list arglist;
	va_start(arglist, format);
	vsnprintf(buffer, LCD_TOTAL_CHARS + 1, format, arglist);
 296:	9f 01       	movw	r18, r30
 298:	61 e5       	ldi	r22, 0x51	; 81
 29a:	70 e0       	ldi	r23, 0x00	; 0
 29c:	ce 01       	movw	r24, r28
 29e:	01 96       	adiw	r24, 0x01	; 1
 2a0:	d8 d0       	rcall	.+432    	; 0x452 <vsnprintf>
	
	if (!strcmp(lastbuffer, buffer))
 2a2:	be 01       	movw	r22, r28
 2a4:	6f 5f       	subi	r22, 0xFF	; 255
 2a6:	7f 4f       	sbci	r23, 0xFF	; 255
 2a8:	8c e4       	ldi	r24, 0x4C	; 76
 2aa:	91 e0       	ldi	r25, 0x01	; 1
 2ac:	c2 d0       	rcall	.+388    	; 0x432 <strcmp>
 2ae:	89 2b       	or	r24, r25
 2b0:	09 f4       	brne	.+2      	; 0x2b4 <lprintf+0x4a>
 2b2:	3f c0       	rjmp	.+126    	; 0x332 <lprintf+0xc8>
		return;
	
	strcpy(lastbuffer, buffer);
 2b4:	be 01       	movw	r22, r28
 2b6:	6f 5f       	subi	r22, 0xFF	; 255
 2b8:	7f 4f       	sbci	r23, 0xFF	; 255
 2ba:	8c e4       	ldi	r24, 0x4C	; 76
 2bc:	91 e0       	ldi	r25, 0x01	; 1
 2be:	c2 d0       	rcall	.+388    	; 0x444 <strcpy>
	lcd_clear();
 2c0:	7a df       	rcall	.-268    	; 0x1b6 <lcd_clear>
 2c2:	9e 01       	movw	r18, r28
 2c4:	2f 5f       	subi	r18, 0xFF	; 255
 2c6:	3f 4f       	sbci	r19, 0xFF	; 255
 2c8:	69 01       	movw	r12, r18
	char *str = buffer;
	int charnum = 0;
 2ca:	00 e0       	ldi	r16, 0x00	; 0
 2cc:	10 e0       	ldi	r17, 0x00	; 0
	while (*str && charnum < LCD_TOTAL_CHARS) {
		if (*str == '\n') {
			/* fill remainder of line with spaces */
			charnum += LCD_WIDTH - charnum % LCD_WIDTH;
 2ce:	0f 2e       	mov	r0, r31
 2d0:	f4 e1       	ldi	r31, 0x14	; 20
 2d2:	ef 2e       	mov	r14, r31
 2d4:	f1 2c       	mov	r15, r1
 2d6:	f0 2d       	mov	r31, r0
	
	strcpy(lastbuffer, buffer);
	lcd_clear();
	char *str = buffer;
	int charnum = 0;
	while (*str && charnum < LCD_TOTAL_CHARS) {
 2d8:	24 c0       	rjmp	.+72     	; 0x322 <lprintf+0xb8>
		if (*str == '\n') {
 2da:	8a 30       	cpi	r24, 0x0A	; 10
 2dc:	49 f4       	brne	.+18     	; 0x2f0 <lprintf+0x86>
			/* fill remainder of line with spaces */
			charnum += LCD_WIDTH - charnum % LCD_WIDTH;
 2de:	c8 01       	movw	r24, r16
 2e0:	b7 01       	movw	r22, r14
 2e2:	80 d0       	rcall	.+256    	; 0x3e4 <__divmodhi4>
 2e4:	f7 01       	movw	r30, r14
 2e6:	e8 1b       	sub	r30, r24
 2e8:	f9 0b       	sbc	r31, r25
 2ea:	0e 0f       	add	r16, r30
 2ec:	1f 1f       	adc	r17, r31
 2ee:	03 c0       	rjmp	.+6      	; 0x2f6 <lprintf+0x8c>
		} else {
			lcd_putc(*str);
 2f0:	aa df       	rcall	.-172    	; 0x246 <lcd_putc>
			charnum++;
 2f2:	0f 5f       	subi	r16, 0xFF	; 255
 2f4:	1f 4f       	sbci	r17, 0xFF	; 255
		 * 0x54...0x68 : line 4
		 * 
		 * The cursor position must be reset at the end of every line, otherwise, after writing line 1, it writes line 3 and then nothingness
		 */
		
		if (charnum % LCD_WIDTH == 0) { 
 2f6:	c8 01       	movw	r24, r16
 2f8:	b7 01       	movw	r22, r14
 2fa:	74 d0       	rcall	.+232    	; 0x3e4 <__divmodhi4>
 2fc:	89 2b       	or	r24, r25
 2fe:	89 f4       	brne	.+34     	; 0x322 <lprintf+0xb8>
			switch (charnum / LCD_WIDTH) {
 300:	c8 01       	movw	r24, r16
 302:	b7 01       	movw	r22, r14
 304:	6f d0       	rcall	.+222    	; 0x3e4 <__divmodhi4>
 306:	62 30       	cpi	r22, 0x02	; 2
 308:	71 05       	cpc	r23, r1
 30a:	41 f0       	breq	.+16     	; 0x31c <lprintf+0xb2>
 30c:	63 30       	cpi	r22, 0x03	; 3
 30e:	71 05       	cpc	r23, r1
 310:	39 f0       	breq	.+14     	; 0x320 <lprintf+0xb6>
 312:	61 30       	cpi	r22, 0x01	; 1
 314:	71 05       	cpc	r23, r1
 316:	29 f4       	brne	.+10     	; 0x322 <lprintf+0xb8>
			case 1:
				lcd_home_line2();
 318:	8d df       	rcall	.-230    	; 0x234 <lcd_home_line2>
				break;
 31a:	03 c0       	rjmp	.+6      	; 0x322 <lprintf+0xb8>
			case 2:
				lcd_home_line3();
 31c:	8e df       	rcall	.-228    	; 0x23a <lcd_home_line3>
				break;
 31e:	01 c0       	rjmp	.+2      	; 0x322 <lprintf+0xb8>
			case 3:
				lcd_home_line4();
 320:	8f df       	rcall	.-226    	; 0x240 <lcd_home_line4>
	
	strcpy(lastbuffer, buffer);
	lcd_clear();
	char *str = buffer;
	int charnum = 0;
	while (*str && charnum < LCD_TOTAL_CHARS) {
 322:	f6 01       	movw	r30, r12
 324:	81 91       	ld	r24, Z+
 326:	6f 01       	movw	r12, r30
 328:	88 23       	and	r24, r24
 32a:	19 f0       	breq	.+6      	; 0x332 <lprintf+0xc8>
 32c:	00 35       	cpi	r16, 0x50	; 80
 32e:	11 05       	cpc	r17, r1
 330:	a4 f2       	brlt	.-88     	; 0x2da <lprintf+0x70>
				lcd_home_line4();
			}
		}
	}
	va_end(arglist);
}
 332:	cf 5a       	subi	r28, 0xAF	; 175
 334:	df 4f       	sbci	r29, 0xFF	; 255
 336:	0f b6       	in	r0, 0x3f	; 63
 338:	f8 94       	cli
 33a:	de bf       	out	0x3e, r29	; 62
 33c:	0f be       	out	0x3f, r0	; 63
 33e:	cd bf       	out	0x3d, r28	; 61
 340:	df 91       	pop	r29
 342:	cf 91       	pop	r28
 344:	1f 91       	pop	r17
 346:	0f 91       	pop	r16
 348:	ff 90       	pop	r15
 34a:	ef 90       	pop	r14
 34c:	df 90       	pop	r13
 34e:	cf 90       	pop	r12
 350:	08 95       	ret

00000352 <timer2_start>:
}


// Start timer2
void timer2_start(char unit) {
	timer2_tick=0;
 352:	10 92 9e 01 	sts	0x019E, r1
 356:	10 92 9d 01 	sts	0x019D, r1
	if ( unit == 0 ) { 		//unit = 0 is for slow 
 35a:	81 11       	cpse	r24, r1
 35c:	06 c0       	rjmp	.+12     	; 0x36a <timer2_start+0x18>
        TCCR2=0b00001011;	//WGM:CTC, COM:OC2 disconnected,pre_scaler = 64
 35e:	8b e0       	ldi	r24, 0x0B	; 11
 360:	85 bd       	out	0x25, r24	; 37
        TIMSK|=0b10000000;	//Enabling O.C. Interrupt for Timer2
 362:	87 b7       	in	r24, 0x37	; 55
 364:	80 68       	ori	r24, 0x80	; 128
 366:	87 bf       	out	0x37, r24	; 55
 368:	07 c0       	rjmp	.+14     	; 0x378 <timer2_start+0x26>
	}
	if (unit == 1) { 		//unit = 1 is for fast
 36a:	81 30       	cpi	r24, 0x01	; 1
 36c:	29 f4       	brne	.+10     	; 0x378 <timer2_start+0x26>
        TCCR2=0b00001001;	//WGM:CTC, COM:OC2 disconnected,pre_scaler = 1
 36e:	89 e0       	ldi	r24, 0x09	; 9
 370:	85 bd       	out	0x25, r24	; 37
        TIMSK|=0b10000000;	//Enabling O.C. Interrupt for Timer2
 372:	87 b7       	in	r24, 0x37	; 55
 374:	80 68       	ori	r24, 0x80	; 128
 376:	87 bf       	out	0x37, r24	; 55
	}
	sei();
 378:	78 94       	sei
 37a:	08 95       	ret

0000037c <timer2_stop>:
}


// Stop timer2
void timer2_stop() {
	TIMSK&=~0b10000000;		//Disabling O.C. Interrupt for Timer2
 37c:	87 b7       	in	r24, 0x37	; 55
 37e:	8f 77       	andi	r24, 0x7F	; 127
 380:	87 bf       	out	0x37, r24	; 55
	TCCR2&=0b01111111;		//Clearing O.C. settings
 382:	85 b5       	in	r24, 0x25	; 37
 384:	8f 77       	andi	r24, 0x7F	; 127
 386:	85 bd       	out	0x25, r24	; 37
 388:	08 95       	ret

0000038a <wait_ms>:
void timer2_start(char unit);
void timer2_stop();


/// Blocks for a specified number of milliseconds
void wait_ms(unsigned int time_val) {
 38a:	cf 93       	push	r28
 38c:	df 93       	push	r29
 38e:	ec 01       	movw	r28, r24
	//Seting OC value for time requested
	//Clock is 16 MHz. At a prescaler of 64, 250 timer ticks = 1ms.
	OCR2=250; 				
 390:	8a ef       	ldi	r24, 0xFA	; 250
 392:	83 bd       	out	0x23, r24	; 35
	timer2_tick=0;
 394:	10 92 9e 01 	sts	0x019E, r1
 398:	10 92 9d 01 	sts	0x019D, r1
	timer2_start(0);
 39c:	80 e0       	ldi	r24, 0x00	; 0
 39e:	d9 df       	rcall	.-78     	; 0x352 <timer2_start>

	//Waiting for time
	while(timer2_tick < time_val);
 3a0:	20 91 9d 01 	lds	r18, 0x019D
 3a4:	30 91 9e 01 	lds	r19, 0x019E
 3a8:	2c 17       	cp	r18, r28
 3aa:	3d 07       	cpc	r19, r29
 3ac:	c8 f3       	brcs	.-14     	; 0x3a0 <wait_ms+0x16>

	timer2_stop();
 3ae:	e6 df       	rcall	.-52     	; 0x37c <timer2_stop>
}
 3b0:	df 91       	pop	r29
 3b2:	cf 91       	pop	r28
 3b4:	08 95       	ret

000003b6 <__vector_9>:
	TCCR2&=0b01111111;		//Clearing O.C. settings
}


// Interrupt handler (runs every 1 ms)
ISR (TIMER2_COMP_vect) {
 3b6:	1f 92       	push	r1
 3b8:	0f 92       	push	r0
 3ba:	0f b6       	in	r0, 0x3f	; 63
 3bc:	0f 92       	push	r0
 3be:	11 24       	eor	r1, r1
 3c0:	8f 93       	push	r24
 3c2:	9f 93       	push	r25
	timer2_tick++;
 3c4:	80 91 9d 01 	lds	r24, 0x019D
 3c8:	90 91 9e 01 	lds	r25, 0x019E
 3cc:	01 96       	adiw	r24, 0x01	; 1
 3ce:	90 93 9e 01 	sts	0x019E, r25
 3d2:	80 93 9d 01 	sts	0x019D, r24
}
 3d6:	9f 91       	pop	r25
 3d8:	8f 91       	pop	r24
 3da:	0f 90       	pop	r0
 3dc:	0f be       	out	0x3f, r0	; 63
 3de:	0f 90       	pop	r0
 3e0:	1f 90       	pop	r1
 3e2:	18 95       	reti

000003e4 <__divmodhi4>:
 3e4:	97 fb       	bst	r25, 7
 3e6:	07 2e       	mov	r0, r23
 3e8:	16 f4       	brtc	.+4      	; 0x3ee <__divmodhi4+0xa>
 3ea:	00 94       	com	r0
 3ec:	06 d0       	rcall	.+12     	; 0x3fa <__divmodhi4_neg1>
 3ee:	77 fd       	sbrc	r23, 7
 3f0:	08 d0       	rcall	.+16     	; 0x402 <__divmodhi4_neg2>
 3f2:	0b d0       	rcall	.+22     	; 0x40a <__udivmodhi4>
 3f4:	07 fc       	sbrc	r0, 7
 3f6:	05 d0       	rcall	.+10     	; 0x402 <__divmodhi4_neg2>
 3f8:	3e f4       	brtc	.+14     	; 0x408 <__divmodhi4_exit>

000003fa <__divmodhi4_neg1>:
 3fa:	90 95       	com	r25
 3fc:	81 95       	neg	r24
 3fe:	9f 4f       	sbci	r25, 0xFF	; 255
 400:	08 95       	ret

00000402 <__divmodhi4_neg2>:
 402:	70 95       	com	r23
 404:	61 95       	neg	r22
 406:	7f 4f       	sbci	r23, 0xFF	; 255

00000408 <__divmodhi4_exit>:
 408:	08 95       	ret

0000040a <__udivmodhi4>:
 40a:	aa 1b       	sub	r26, r26
 40c:	bb 1b       	sub	r27, r27
 40e:	51 e1       	ldi	r21, 0x11	; 17
 410:	07 c0       	rjmp	.+14     	; 0x420 <__udivmodhi4_ep>

00000412 <__udivmodhi4_loop>:
 412:	aa 1f       	adc	r26, r26
 414:	bb 1f       	adc	r27, r27
 416:	a6 17       	cp	r26, r22
 418:	b7 07       	cpc	r27, r23
 41a:	10 f0       	brcs	.+4      	; 0x420 <__udivmodhi4_ep>
 41c:	a6 1b       	sub	r26, r22
 41e:	b7 0b       	sbc	r27, r23

00000420 <__udivmodhi4_ep>:
 420:	88 1f       	adc	r24, r24
 422:	99 1f       	adc	r25, r25
 424:	5a 95       	dec	r21
 426:	a9 f7       	brne	.-22     	; 0x412 <__udivmodhi4_loop>
 428:	80 95       	com	r24
 42a:	90 95       	com	r25
 42c:	bc 01       	movw	r22, r24
 42e:	cd 01       	movw	r24, r26
 430:	08 95       	ret

00000432 <strcmp>:
 432:	fb 01       	movw	r30, r22
 434:	dc 01       	movw	r26, r24
 436:	8d 91       	ld	r24, X+
 438:	01 90       	ld	r0, Z+
 43a:	80 19       	sub	r24, r0
 43c:	01 10       	cpse	r0, r1
 43e:	d9 f3       	breq	.-10     	; 0x436 <strcmp+0x4>
 440:	99 0b       	sbc	r25, r25
 442:	08 95       	ret

00000444 <strcpy>:
 444:	fb 01       	movw	r30, r22
 446:	dc 01       	movw	r26, r24
 448:	01 90       	ld	r0, Z+
 44a:	0d 92       	st	X+, r0
 44c:	00 20       	and	r0, r0
 44e:	e1 f7       	brne	.-8      	; 0x448 <strcpy+0x4>
 450:	08 95       	ret

00000452 <vsnprintf>:
 452:	0f 93       	push	r16
 454:	1f 93       	push	r17
 456:	cf 93       	push	r28
 458:	df 93       	push	r29
 45a:	cd b7       	in	r28, 0x3d	; 61
 45c:	de b7       	in	r29, 0x3e	; 62
 45e:	2e 97       	sbiw	r28, 0x0e	; 14
 460:	0f b6       	in	r0, 0x3f	; 63
 462:	f8 94       	cli
 464:	de bf       	out	0x3e, r29	; 62
 466:	0f be       	out	0x3f, r0	; 63
 468:	cd bf       	out	0x3d, r28	; 61
 46a:	8c 01       	movw	r16, r24
 46c:	ca 01       	movw	r24, r20
 46e:	46 e0       	ldi	r20, 0x06	; 6
 470:	4c 83       	std	Y+4, r20	; 0x04
 472:	1a 83       	std	Y+2, r17	; 0x02
 474:	09 83       	std	Y+1, r16	; 0x01
 476:	77 ff       	sbrs	r23, 7
 478:	02 c0       	rjmp	.+4      	; 0x47e <vsnprintf+0x2c>
 47a:	60 e0       	ldi	r22, 0x00	; 0
 47c:	70 e8       	ldi	r23, 0x80	; 128
 47e:	61 50       	subi	r22, 0x01	; 1
 480:	71 09       	sbc	r23, r1
 482:	7e 83       	std	Y+6, r23	; 0x06
 484:	6d 83       	std	Y+5, r22	; 0x05
 486:	a9 01       	movw	r20, r18
 488:	bc 01       	movw	r22, r24
 48a:	ce 01       	movw	r24, r28
 48c:	01 96       	adiw	r24, 0x01	; 1
 48e:	19 d0       	rcall	.+50     	; 0x4c2 <vfprintf>
 490:	4d 81       	ldd	r20, Y+5	; 0x05
 492:	5e 81       	ldd	r21, Y+6	; 0x06
 494:	57 fd       	sbrc	r21, 7
 496:	0a c0       	rjmp	.+20     	; 0x4ac <vsnprintf+0x5a>
 498:	2f 81       	ldd	r18, Y+7	; 0x07
 49a:	38 85       	ldd	r19, Y+8	; 0x08
 49c:	42 17       	cp	r20, r18
 49e:	53 07       	cpc	r21, r19
 4a0:	0c f4       	brge	.+2      	; 0x4a4 <vsnprintf+0x52>
 4a2:	9a 01       	movw	r18, r20
 4a4:	f8 01       	movw	r30, r16
 4a6:	e2 0f       	add	r30, r18
 4a8:	f3 1f       	adc	r31, r19
 4aa:	10 82       	st	Z, r1
 4ac:	2e 96       	adiw	r28, 0x0e	; 14
 4ae:	0f b6       	in	r0, 0x3f	; 63
 4b0:	f8 94       	cli
 4b2:	de bf       	out	0x3e, r29	; 62
 4b4:	0f be       	out	0x3f, r0	; 63
 4b6:	cd bf       	out	0x3d, r28	; 61
 4b8:	df 91       	pop	r29
 4ba:	cf 91       	pop	r28
 4bc:	1f 91       	pop	r17
 4be:	0f 91       	pop	r16
 4c0:	08 95       	ret

000004c2 <vfprintf>:
 4c2:	2f 92       	push	r2
 4c4:	3f 92       	push	r3
 4c6:	4f 92       	push	r4
 4c8:	5f 92       	push	r5
 4ca:	6f 92       	push	r6
 4cc:	7f 92       	push	r7
 4ce:	8f 92       	push	r8
 4d0:	9f 92       	push	r9
 4d2:	af 92       	push	r10
 4d4:	bf 92       	push	r11
 4d6:	cf 92       	push	r12
 4d8:	df 92       	push	r13
 4da:	ef 92       	push	r14
 4dc:	ff 92       	push	r15
 4de:	0f 93       	push	r16
 4e0:	1f 93       	push	r17
 4e2:	cf 93       	push	r28
 4e4:	df 93       	push	r29
 4e6:	cd b7       	in	r28, 0x3d	; 61
 4e8:	de b7       	in	r29, 0x3e	; 62
 4ea:	2c 97       	sbiw	r28, 0x0c	; 12
 4ec:	0f b6       	in	r0, 0x3f	; 63
 4ee:	f8 94       	cli
 4f0:	de bf       	out	0x3e, r29	; 62
 4f2:	0f be       	out	0x3f, r0	; 63
 4f4:	cd bf       	out	0x3d, r28	; 61
 4f6:	7c 01       	movw	r14, r24
 4f8:	6b 01       	movw	r12, r22
 4fa:	8a 01       	movw	r16, r20
 4fc:	fc 01       	movw	r30, r24
 4fe:	17 82       	std	Z+7, r1	; 0x07
 500:	16 82       	std	Z+6, r1	; 0x06
 502:	83 81       	ldd	r24, Z+3	; 0x03
 504:	81 ff       	sbrs	r24, 1
 506:	b0 c1       	rjmp	.+864    	; 0x868 <vfprintf+0x3a6>
 508:	ce 01       	movw	r24, r28
 50a:	01 96       	adiw	r24, 0x01	; 1
 50c:	4c 01       	movw	r8, r24
 50e:	f7 01       	movw	r30, r14
 510:	93 81       	ldd	r25, Z+3	; 0x03
 512:	f6 01       	movw	r30, r12
 514:	93 fd       	sbrc	r25, 3
 516:	85 91       	lpm	r24, Z+
 518:	93 ff       	sbrs	r25, 3
 51a:	81 91       	ld	r24, Z+
 51c:	6f 01       	movw	r12, r30
 51e:	88 23       	and	r24, r24
 520:	09 f4       	brne	.+2      	; 0x524 <vfprintf+0x62>
 522:	9e c1       	rjmp	.+828    	; 0x860 <vfprintf+0x39e>
 524:	85 32       	cpi	r24, 0x25	; 37
 526:	39 f4       	brne	.+14     	; 0x536 <vfprintf+0x74>
 528:	93 fd       	sbrc	r25, 3
 52a:	85 91       	lpm	r24, Z+
 52c:	93 ff       	sbrs	r25, 3
 52e:	81 91       	ld	r24, Z+
 530:	6f 01       	movw	r12, r30
 532:	85 32       	cpi	r24, 0x25	; 37
 534:	21 f4       	brne	.+8      	; 0x53e <vfprintf+0x7c>
 536:	b7 01       	movw	r22, r14
 538:	90 e0       	ldi	r25, 0x00	; 0
 53a:	c7 d1       	rcall	.+910    	; 0x8ca <fputc>
 53c:	e8 cf       	rjmp	.-48     	; 0x50e <vfprintf+0x4c>
 53e:	51 2c       	mov	r5, r1
 540:	31 2c       	mov	r3, r1
 542:	20 e0       	ldi	r18, 0x00	; 0
 544:	20 32       	cpi	r18, 0x20	; 32
 546:	a0 f4       	brcc	.+40     	; 0x570 <vfprintf+0xae>
 548:	8b 32       	cpi	r24, 0x2B	; 43
 54a:	69 f0       	breq	.+26     	; 0x566 <vfprintf+0xa4>
 54c:	30 f4       	brcc	.+12     	; 0x55a <vfprintf+0x98>
 54e:	80 32       	cpi	r24, 0x20	; 32
 550:	59 f0       	breq	.+22     	; 0x568 <vfprintf+0xa6>
 552:	83 32       	cpi	r24, 0x23	; 35
 554:	69 f4       	brne	.+26     	; 0x570 <vfprintf+0xae>
 556:	20 61       	ori	r18, 0x10	; 16
 558:	2c c0       	rjmp	.+88     	; 0x5b2 <vfprintf+0xf0>
 55a:	8d 32       	cpi	r24, 0x2D	; 45
 55c:	39 f0       	breq	.+14     	; 0x56c <vfprintf+0xaa>
 55e:	80 33       	cpi	r24, 0x30	; 48
 560:	39 f4       	brne	.+14     	; 0x570 <vfprintf+0xae>
 562:	21 60       	ori	r18, 0x01	; 1
 564:	26 c0       	rjmp	.+76     	; 0x5b2 <vfprintf+0xf0>
 566:	22 60       	ori	r18, 0x02	; 2
 568:	24 60       	ori	r18, 0x04	; 4
 56a:	23 c0       	rjmp	.+70     	; 0x5b2 <vfprintf+0xf0>
 56c:	28 60       	ori	r18, 0x08	; 8
 56e:	21 c0       	rjmp	.+66     	; 0x5b2 <vfprintf+0xf0>
 570:	27 fd       	sbrc	r18, 7
 572:	27 c0       	rjmp	.+78     	; 0x5c2 <vfprintf+0x100>
 574:	30 ed       	ldi	r19, 0xD0	; 208
 576:	38 0f       	add	r19, r24
 578:	3a 30       	cpi	r19, 0x0A	; 10
 57a:	78 f4       	brcc	.+30     	; 0x59a <vfprintf+0xd8>
 57c:	26 ff       	sbrs	r18, 6
 57e:	06 c0       	rjmp	.+12     	; 0x58c <vfprintf+0xca>
 580:	fa e0       	ldi	r31, 0x0A	; 10
 582:	5f 9e       	mul	r5, r31
 584:	30 0d       	add	r19, r0
 586:	11 24       	eor	r1, r1
 588:	53 2e       	mov	r5, r19
 58a:	13 c0       	rjmp	.+38     	; 0x5b2 <vfprintf+0xf0>
 58c:	8a e0       	ldi	r24, 0x0A	; 10
 58e:	38 9e       	mul	r3, r24
 590:	30 0d       	add	r19, r0
 592:	11 24       	eor	r1, r1
 594:	33 2e       	mov	r3, r19
 596:	20 62       	ori	r18, 0x20	; 32
 598:	0c c0       	rjmp	.+24     	; 0x5b2 <vfprintf+0xf0>
 59a:	8e 32       	cpi	r24, 0x2E	; 46
 59c:	21 f4       	brne	.+8      	; 0x5a6 <vfprintf+0xe4>
 59e:	26 fd       	sbrc	r18, 6
 5a0:	5f c1       	rjmp	.+702    	; 0x860 <vfprintf+0x39e>
 5a2:	20 64       	ori	r18, 0x40	; 64
 5a4:	06 c0       	rjmp	.+12     	; 0x5b2 <vfprintf+0xf0>
 5a6:	8c 36       	cpi	r24, 0x6C	; 108
 5a8:	11 f4       	brne	.+4      	; 0x5ae <vfprintf+0xec>
 5aa:	20 68       	ori	r18, 0x80	; 128
 5ac:	02 c0       	rjmp	.+4      	; 0x5b2 <vfprintf+0xf0>
 5ae:	88 36       	cpi	r24, 0x68	; 104
 5b0:	41 f4       	brne	.+16     	; 0x5c2 <vfprintf+0x100>
 5b2:	f6 01       	movw	r30, r12
 5b4:	93 fd       	sbrc	r25, 3
 5b6:	85 91       	lpm	r24, Z+
 5b8:	93 ff       	sbrs	r25, 3
 5ba:	81 91       	ld	r24, Z+
 5bc:	6f 01       	movw	r12, r30
 5be:	81 11       	cpse	r24, r1
 5c0:	c1 cf       	rjmp	.-126    	; 0x544 <vfprintf+0x82>
 5c2:	98 2f       	mov	r25, r24
 5c4:	9f 7d       	andi	r25, 0xDF	; 223
 5c6:	95 54       	subi	r25, 0x45	; 69
 5c8:	93 30       	cpi	r25, 0x03	; 3
 5ca:	28 f4       	brcc	.+10     	; 0x5d6 <vfprintf+0x114>
 5cc:	0c 5f       	subi	r16, 0xFC	; 252
 5ce:	1f 4f       	sbci	r17, 0xFF	; 255
 5d0:	ff e3       	ldi	r31, 0x3F	; 63
 5d2:	f9 83       	std	Y+1, r31	; 0x01
 5d4:	0d c0       	rjmp	.+26     	; 0x5f0 <vfprintf+0x12e>
 5d6:	83 36       	cpi	r24, 0x63	; 99
 5d8:	31 f0       	breq	.+12     	; 0x5e6 <vfprintf+0x124>
 5da:	83 37       	cpi	r24, 0x73	; 115
 5dc:	71 f0       	breq	.+28     	; 0x5fa <vfprintf+0x138>
 5de:	83 35       	cpi	r24, 0x53	; 83
 5e0:	09 f0       	breq	.+2      	; 0x5e4 <vfprintf+0x122>
 5e2:	57 c0       	rjmp	.+174    	; 0x692 <vfprintf+0x1d0>
 5e4:	21 c0       	rjmp	.+66     	; 0x628 <vfprintf+0x166>
 5e6:	f8 01       	movw	r30, r16
 5e8:	80 81       	ld	r24, Z
 5ea:	89 83       	std	Y+1, r24	; 0x01
 5ec:	0e 5f       	subi	r16, 0xFE	; 254
 5ee:	1f 4f       	sbci	r17, 0xFF	; 255
 5f0:	44 24       	eor	r4, r4
 5f2:	43 94       	inc	r4
 5f4:	51 2c       	mov	r5, r1
 5f6:	54 01       	movw	r10, r8
 5f8:	14 c0       	rjmp	.+40     	; 0x622 <vfprintf+0x160>
 5fa:	38 01       	movw	r6, r16
 5fc:	f2 e0       	ldi	r31, 0x02	; 2
 5fe:	6f 0e       	add	r6, r31
 600:	71 1c       	adc	r7, r1
 602:	f8 01       	movw	r30, r16
 604:	a0 80       	ld	r10, Z
 606:	b1 80       	ldd	r11, Z+1	; 0x01
 608:	26 ff       	sbrs	r18, 6
 60a:	03 c0       	rjmp	.+6      	; 0x612 <vfprintf+0x150>
 60c:	65 2d       	mov	r22, r5
 60e:	70 e0       	ldi	r23, 0x00	; 0
 610:	02 c0       	rjmp	.+4      	; 0x616 <vfprintf+0x154>
 612:	6f ef       	ldi	r22, 0xFF	; 255
 614:	7f ef       	ldi	r23, 0xFF	; 255
 616:	c5 01       	movw	r24, r10
 618:	2c 87       	std	Y+12, r18	; 0x0c
 61a:	4c d1       	rcall	.+664    	; 0x8b4 <strnlen>
 61c:	2c 01       	movw	r4, r24
 61e:	83 01       	movw	r16, r6
 620:	2c 85       	ldd	r18, Y+12	; 0x0c
 622:	2f 77       	andi	r18, 0x7F	; 127
 624:	22 2e       	mov	r2, r18
 626:	16 c0       	rjmp	.+44     	; 0x654 <vfprintf+0x192>
 628:	38 01       	movw	r6, r16
 62a:	f2 e0       	ldi	r31, 0x02	; 2
 62c:	6f 0e       	add	r6, r31
 62e:	71 1c       	adc	r7, r1
 630:	f8 01       	movw	r30, r16
 632:	a0 80       	ld	r10, Z
 634:	b1 80       	ldd	r11, Z+1	; 0x01
 636:	26 ff       	sbrs	r18, 6
 638:	03 c0       	rjmp	.+6      	; 0x640 <vfprintf+0x17e>
 63a:	65 2d       	mov	r22, r5
 63c:	70 e0       	ldi	r23, 0x00	; 0
 63e:	02 c0       	rjmp	.+4      	; 0x644 <vfprintf+0x182>
 640:	6f ef       	ldi	r22, 0xFF	; 255
 642:	7f ef       	ldi	r23, 0xFF	; 255
 644:	c5 01       	movw	r24, r10
 646:	2c 87       	std	Y+12, r18	; 0x0c
 648:	2a d1       	rcall	.+596    	; 0x89e <strnlen_P>
 64a:	2c 01       	movw	r4, r24
 64c:	2c 85       	ldd	r18, Y+12	; 0x0c
 64e:	20 68       	ori	r18, 0x80	; 128
 650:	22 2e       	mov	r2, r18
 652:	83 01       	movw	r16, r6
 654:	23 fc       	sbrc	r2, 3
 656:	19 c0       	rjmp	.+50     	; 0x68a <vfprintf+0x1c8>
 658:	83 2d       	mov	r24, r3
 65a:	90 e0       	ldi	r25, 0x00	; 0
 65c:	48 16       	cp	r4, r24
 65e:	59 06       	cpc	r5, r25
 660:	a0 f4       	brcc	.+40     	; 0x68a <vfprintf+0x1c8>
 662:	b7 01       	movw	r22, r14
 664:	80 e2       	ldi	r24, 0x20	; 32
 666:	90 e0       	ldi	r25, 0x00	; 0
 668:	30 d1       	rcall	.+608    	; 0x8ca <fputc>
 66a:	3a 94       	dec	r3
 66c:	f5 cf       	rjmp	.-22     	; 0x658 <vfprintf+0x196>
 66e:	f5 01       	movw	r30, r10
 670:	27 fc       	sbrc	r2, 7
 672:	85 91       	lpm	r24, Z+
 674:	27 fe       	sbrs	r2, 7
 676:	81 91       	ld	r24, Z+
 678:	5f 01       	movw	r10, r30
 67a:	b7 01       	movw	r22, r14
 67c:	90 e0       	ldi	r25, 0x00	; 0
 67e:	25 d1       	rcall	.+586    	; 0x8ca <fputc>
 680:	31 10       	cpse	r3, r1
 682:	3a 94       	dec	r3
 684:	f1 e0       	ldi	r31, 0x01	; 1
 686:	4f 1a       	sub	r4, r31
 688:	51 08       	sbc	r5, r1
 68a:	41 14       	cp	r4, r1
 68c:	51 04       	cpc	r5, r1
 68e:	79 f7       	brne	.-34     	; 0x66e <vfprintf+0x1ac>
 690:	de c0       	rjmp	.+444    	; 0x84e <vfprintf+0x38c>
 692:	84 36       	cpi	r24, 0x64	; 100
 694:	11 f0       	breq	.+4      	; 0x69a <vfprintf+0x1d8>
 696:	89 36       	cpi	r24, 0x69	; 105
 698:	31 f5       	brne	.+76     	; 0x6e6 <vfprintf+0x224>
 69a:	f8 01       	movw	r30, r16
 69c:	27 ff       	sbrs	r18, 7
 69e:	07 c0       	rjmp	.+14     	; 0x6ae <vfprintf+0x1ec>
 6a0:	60 81       	ld	r22, Z
 6a2:	71 81       	ldd	r23, Z+1	; 0x01
 6a4:	82 81       	ldd	r24, Z+2	; 0x02
 6a6:	93 81       	ldd	r25, Z+3	; 0x03
 6a8:	0c 5f       	subi	r16, 0xFC	; 252
 6aa:	1f 4f       	sbci	r17, 0xFF	; 255
 6ac:	08 c0       	rjmp	.+16     	; 0x6be <vfprintf+0x1fc>
 6ae:	60 81       	ld	r22, Z
 6b0:	71 81       	ldd	r23, Z+1	; 0x01
 6b2:	88 27       	eor	r24, r24
 6b4:	77 fd       	sbrc	r23, 7
 6b6:	80 95       	com	r24
 6b8:	98 2f       	mov	r25, r24
 6ba:	0e 5f       	subi	r16, 0xFE	; 254
 6bc:	1f 4f       	sbci	r17, 0xFF	; 255
 6be:	2f 76       	andi	r18, 0x6F	; 111
 6c0:	b2 2e       	mov	r11, r18
 6c2:	97 ff       	sbrs	r25, 7
 6c4:	09 c0       	rjmp	.+18     	; 0x6d8 <vfprintf+0x216>
 6c6:	90 95       	com	r25
 6c8:	80 95       	com	r24
 6ca:	70 95       	com	r23
 6cc:	61 95       	neg	r22
 6ce:	7f 4f       	sbci	r23, 0xFF	; 255
 6d0:	8f 4f       	sbci	r24, 0xFF	; 255
 6d2:	9f 4f       	sbci	r25, 0xFF	; 255
 6d4:	20 68       	ori	r18, 0x80	; 128
 6d6:	b2 2e       	mov	r11, r18
 6d8:	2a e0       	ldi	r18, 0x0A	; 10
 6da:	30 e0       	ldi	r19, 0x00	; 0
 6dc:	a4 01       	movw	r20, r8
 6de:	27 d1       	rcall	.+590    	; 0x92e <__ultoa_invert>
 6e0:	a8 2e       	mov	r10, r24
 6e2:	a8 18       	sub	r10, r8
 6e4:	43 c0       	rjmp	.+134    	; 0x76c <vfprintf+0x2aa>
 6e6:	85 37       	cpi	r24, 0x75	; 117
 6e8:	29 f4       	brne	.+10     	; 0x6f4 <vfprintf+0x232>
 6ea:	2f 7e       	andi	r18, 0xEF	; 239
 6ec:	b2 2e       	mov	r11, r18
 6ee:	2a e0       	ldi	r18, 0x0A	; 10
 6f0:	30 e0       	ldi	r19, 0x00	; 0
 6f2:	25 c0       	rjmp	.+74     	; 0x73e <vfprintf+0x27c>
 6f4:	f2 2f       	mov	r31, r18
 6f6:	f9 7f       	andi	r31, 0xF9	; 249
 6f8:	bf 2e       	mov	r11, r31
 6fa:	8f 36       	cpi	r24, 0x6F	; 111
 6fc:	c1 f0       	breq	.+48     	; 0x72e <vfprintf+0x26c>
 6fe:	18 f4       	brcc	.+6      	; 0x706 <vfprintf+0x244>
 700:	88 35       	cpi	r24, 0x58	; 88
 702:	79 f0       	breq	.+30     	; 0x722 <vfprintf+0x260>
 704:	ad c0       	rjmp	.+346    	; 0x860 <vfprintf+0x39e>
 706:	80 37       	cpi	r24, 0x70	; 112
 708:	19 f0       	breq	.+6      	; 0x710 <vfprintf+0x24e>
 70a:	88 37       	cpi	r24, 0x78	; 120
 70c:	21 f0       	breq	.+8      	; 0x716 <vfprintf+0x254>
 70e:	a8 c0       	rjmp	.+336    	; 0x860 <vfprintf+0x39e>
 710:	2f 2f       	mov	r18, r31
 712:	20 61       	ori	r18, 0x10	; 16
 714:	b2 2e       	mov	r11, r18
 716:	b4 fe       	sbrs	r11, 4
 718:	0d c0       	rjmp	.+26     	; 0x734 <vfprintf+0x272>
 71a:	8b 2d       	mov	r24, r11
 71c:	84 60       	ori	r24, 0x04	; 4
 71e:	b8 2e       	mov	r11, r24
 720:	09 c0       	rjmp	.+18     	; 0x734 <vfprintf+0x272>
 722:	24 ff       	sbrs	r18, 4
 724:	0a c0       	rjmp	.+20     	; 0x73a <vfprintf+0x278>
 726:	9f 2f       	mov	r25, r31
 728:	96 60       	ori	r25, 0x06	; 6
 72a:	b9 2e       	mov	r11, r25
 72c:	06 c0       	rjmp	.+12     	; 0x73a <vfprintf+0x278>
 72e:	28 e0       	ldi	r18, 0x08	; 8
 730:	30 e0       	ldi	r19, 0x00	; 0
 732:	05 c0       	rjmp	.+10     	; 0x73e <vfprintf+0x27c>
 734:	20 e1       	ldi	r18, 0x10	; 16
 736:	30 e0       	ldi	r19, 0x00	; 0
 738:	02 c0       	rjmp	.+4      	; 0x73e <vfprintf+0x27c>
 73a:	20 e1       	ldi	r18, 0x10	; 16
 73c:	32 e0       	ldi	r19, 0x02	; 2
 73e:	f8 01       	movw	r30, r16
 740:	b7 fe       	sbrs	r11, 7
 742:	07 c0       	rjmp	.+14     	; 0x752 <vfprintf+0x290>
 744:	60 81       	ld	r22, Z
 746:	71 81       	ldd	r23, Z+1	; 0x01
 748:	82 81       	ldd	r24, Z+2	; 0x02
 74a:	93 81       	ldd	r25, Z+3	; 0x03
 74c:	0c 5f       	subi	r16, 0xFC	; 252
 74e:	1f 4f       	sbci	r17, 0xFF	; 255
 750:	06 c0       	rjmp	.+12     	; 0x75e <vfprintf+0x29c>
 752:	60 81       	ld	r22, Z
 754:	71 81       	ldd	r23, Z+1	; 0x01
 756:	80 e0       	ldi	r24, 0x00	; 0
 758:	90 e0       	ldi	r25, 0x00	; 0
 75a:	0e 5f       	subi	r16, 0xFE	; 254
 75c:	1f 4f       	sbci	r17, 0xFF	; 255
 75e:	a4 01       	movw	r20, r8
 760:	e6 d0       	rcall	.+460    	; 0x92e <__ultoa_invert>
 762:	a8 2e       	mov	r10, r24
 764:	a8 18       	sub	r10, r8
 766:	fb 2d       	mov	r31, r11
 768:	ff 77       	andi	r31, 0x7F	; 127
 76a:	bf 2e       	mov	r11, r31
 76c:	b6 fe       	sbrs	r11, 6
 76e:	0b c0       	rjmp	.+22     	; 0x786 <vfprintf+0x2c4>
 770:	2b 2d       	mov	r18, r11
 772:	2e 7f       	andi	r18, 0xFE	; 254
 774:	a5 14       	cp	r10, r5
 776:	50 f4       	brcc	.+20     	; 0x78c <vfprintf+0x2ca>
 778:	b4 fe       	sbrs	r11, 4
 77a:	0a c0       	rjmp	.+20     	; 0x790 <vfprintf+0x2ce>
 77c:	b2 fc       	sbrc	r11, 2
 77e:	08 c0       	rjmp	.+16     	; 0x790 <vfprintf+0x2ce>
 780:	2b 2d       	mov	r18, r11
 782:	2e 7e       	andi	r18, 0xEE	; 238
 784:	05 c0       	rjmp	.+10     	; 0x790 <vfprintf+0x2ce>
 786:	7a 2c       	mov	r7, r10
 788:	2b 2d       	mov	r18, r11
 78a:	03 c0       	rjmp	.+6      	; 0x792 <vfprintf+0x2d0>
 78c:	7a 2c       	mov	r7, r10
 78e:	01 c0       	rjmp	.+2      	; 0x792 <vfprintf+0x2d0>
 790:	75 2c       	mov	r7, r5
 792:	24 ff       	sbrs	r18, 4
 794:	0d c0       	rjmp	.+26     	; 0x7b0 <vfprintf+0x2ee>
 796:	fe 01       	movw	r30, r28
 798:	ea 0d       	add	r30, r10
 79a:	f1 1d       	adc	r31, r1
 79c:	80 81       	ld	r24, Z
 79e:	80 33       	cpi	r24, 0x30	; 48
 7a0:	11 f4       	brne	.+4      	; 0x7a6 <vfprintf+0x2e4>
 7a2:	29 7e       	andi	r18, 0xE9	; 233
 7a4:	09 c0       	rjmp	.+18     	; 0x7b8 <vfprintf+0x2f6>
 7a6:	22 ff       	sbrs	r18, 2
 7a8:	06 c0       	rjmp	.+12     	; 0x7b6 <vfprintf+0x2f4>
 7aa:	73 94       	inc	r7
 7ac:	73 94       	inc	r7
 7ae:	04 c0       	rjmp	.+8      	; 0x7b8 <vfprintf+0x2f6>
 7b0:	82 2f       	mov	r24, r18
 7b2:	86 78       	andi	r24, 0x86	; 134
 7b4:	09 f0       	breq	.+2      	; 0x7b8 <vfprintf+0x2f6>
 7b6:	73 94       	inc	r7
 7b8:	23 fd       	sbrc	r18, 3
 7ba:	12 c0       	rjmp	.+36     	; 0x7e0 <vfprintf+0x31e>
 7bc:	20 ff       	sbrs	r18, 0
 7be:	06 c0       	rjmp	.+12     	; 0x7cc <vfprintf+0x30a>
 7c0:	5a 2c       	mov	r5, r10
 7c2:	73 14       	cp	r7, r3
 7c4:	18 f4       	brcc	.+6      	; 0x7cc <vfprintf+0x30a>
 7c6:	53 0c       	add	r5, r3
 7c8:	57 18       	sub	r5, r7
 7ca:	73 2c       	mov	r7, r3
 7cc:	73 14       	cp	r7, r3
 7ce:	60 f4       	brcc	.+24     	; 0x7e8 <vfprintf+0x326>
 7d0:	b7 01       	movw	r22, r14
 7d2:	80 e2       	ldi	r24, 0x20	; 32
 7d4:	90 e0       	ldi	r25, 0x00	; 0
 7d6:	2c 87       	std	Y+12, r18	; 0x0c
 7d8:	78 d0       	rcall	.+240    	; 0x8ca <fputc>
 7da:	73 94       	inc	r7
 7dc:	2c 85       	ldd	r18, Y+12	; 0x0c
 7de:	f6 cf       	rjmp	.-20     	; 0x7cc <vfprintf+0x30a>
 7e0:	73 14       	cp	r7, r3
 7e2:	10 f4       	brcc	.+4      	; 0x7e8 <vfprintf+0x326>
 7e4:	37 18       	sub	r3, r7
 7e6:	01 c0       	rjmp	.+2      	; 0x7ea <vfprintf+0x328>
 7e8:	31 2c       	mov	r3, r1
 7ea:	24 ff       	sbrs	r18, 4
 7ec:	11 c0       	rjmp	.+34     	; 0x810 <vfprintf+0x34e>
 7ee:	b7 01       	movw	r22, r14
 7f0:	80 e3       	ldi	r24, 0x30	; 48
 7f2:	90 e0       	ldi	r25, 0x00	; 0
 7f4:	2c 87       	std	Y+12, r18	; 0x0c
 7f6:	69 d0       	rcall	.+210    	; 0x8ca <fputc>
 7f8:	2c 85       	ldd	r18, Y+12	; 0x0c
 7fa:	22 ff       	sbrs	r18, 2
 7fc:	16 c0       	rjmp	.+44     	; 0x82a <vfprintf+0x368>
 7fe:	21 ff       	sbrs	r18, 1
 800:	03 c0       	rjmp	.+6      	; 0x808 <vfprintf+0x346>
 802:	88 e5       	ldi	r24, 0x58	; 88
 804:	90 e0       	ldi	r25, 0x00	; 0
 806:	02 c0       	rjmp	.+4      	; 0x80c <vfprintf+0x34a>
 808:	88 e7       	ldi	r24, 0x78	; 120
 80a:	90 e0       	ldi	r25, 0x00	; 0
 80c:	b7 01       	movw	r22, r14
 80e:	0c c0       	rjmp	.+24     	; 0x828 <vfprintf+0x366>
 810:	82 2f       	mov	r24, r18
 812:	86 78       	andi	r24, 0x86	; 134
 814:	51 f0       	breq	.+20     	; 0x82a <vfprintf+0x368>
 816:	21 fd       	sbrc	r18, 1
 818:	02 c0       	rjmp	.+4      	; 0x81e <vfprintf+0x35c>
 81a:	80 e2       	ldi	r24, 0x20	; 32
 81c:	01 c0       	rjmp	.+2      	; 0x820 <vfprintf+0x35e>
 81e:	8b e2       	ldi	r24, 0x2B	; 43
 820:	27 fd       	sbrc	r18, 7
 822:	8d e2       	ldi	r24, 0x2D	; 45
 824:	b7 01       	movw	r22, r14
 826:	90 e0       	ldi	r25, 0x00	; 0
 828:	50 d0       	rcall	.+160    	; 0x8ca <fputc>
 82a:	a5 14       	cp	r10, r5
 82c:	30 f4       	brcc	.+12     	; 0x83a <vfprintf+0x378>
 82e:	b7 01       	movw	r22, r14
 830:	80 e3       	ldi	r24, 0x30	; 48
 832:	90 e0       	ldi	r25, 0x00	; 0
 834:	4a d0       	rcall	.+148    	; 0x8ca <fputc>
 836:	5a 94       	dec	r5
 838:	f8 cf       	rjmp	.-16     	; 0x82a <vfprintf+0x368>
 83a:	aa 94       	dec	r10
 83c:	f4 01       	movw	r30, r8
 83e:	ea 0d       	add	r30, r10
 840:	f1 1d       	adc	r31, r1
 842:	80 81       	ld	r24, Z
 844:	b7 01       	movw	r22, r14
 846:	90 e0       	ldi	r25, 0x00	; 0
 848:	40 d0       	rcall	.+128    	; 0x8ca <fputc>
 84a:	a1 10       	cpse	r10, r1
 84c:	f6 cf       	rjmp	.-20     	; 0x83a <vfprintf+0x378>
 84e:	33 20       	and	r3, r3
 850:	09 f4       	brne	.+2      	; 0x854 <vfprintf+0x392>
 852:	5d ce       	rjmp	.-838    	; 0x50e <vfprintf+0x4c>
 854:	b7 01       	movw	r22, r14
 856:	80 e2       	ldi	r24, 0x20	; 32
 858:	90 e0       	ldi	r25, 0x00	; 0
 85a:	37 d0       	rcall	.+110    	; 0x8ca <fputc>
 85c:	3a 94       	dec	r3
 85e:	f7 cf       	rjmp	.-18     	; 0x84e <vfprintf+0x38c>
 860:	f7 01       	movw	r30, r14
 862:	86 81       	ldd	r24, Z+6	; 0x06
 864:	97 81       	ldd	r25, Z+7	; 0x07
 866:	02 c0       	rjmp	.+4      	; 0x86c <vfprintf+0x3aa>
 868:	8f ef       	ldi	r24, 0xFF	; 255
 86a:	9f ef       	ldi	r25, 0xFF	; 255
 86c:	2c 96       	adiw	r28, 0x0c	; 12
 86e:	0f b6       	in	r0, 0x3f	; 63
 870:	f8 94       	cli
 872:	de bf       	out	0x3e, r29	; 62
 874:	0f be       	out	0x3f, r0	; 63
 876:	cd bf       	out	0x3d, r28	; 61
 878:	df 91       	pop	r29
 87a:	cf 91       	pop	r28
 87c:	1f 91       	pop	r17
 87e:	0f 91       	pop	r16
 880:	ff 90       	pop	r15
 882:	ef 90       	pop	r14
 884:	df 90       	pop	r13
 886:	cf 90       	pop	r12
 888:	bf 90       	pop	r11
 88a:	af 90       	pop	r10
 88c:	9f 90       	pop	r9
 88e:	8f 90       	pop	r8
 890:	7f 90       	pop	r7
 892:	6f 90       	pop	r6
 894:	5f 90       	pop	r5
 896:	4f 90       	pop	r4
 898:	3f 90       	pop	r3
 89a:	2f 90       	pop	r2
 89c:	08 95       	ret

0000089e <strnlen_P>:
 89e:	fc 01       	movw	r30, r24
 8a0:	05 90       	lpm	r0, Z+
 8a2:	61 50       	subi	r22, 0x01	; 1
 8a4:	70 40       	sbci	r23, 0x00	; 0
 8a6:	01 10       	cpse	r0, r1
 8a8:	d8 f7       	brcc	.-10     	; 0x8a0 <strnlen_P+0x2>
 8aa:	80 95       	com	r24
 8ac:	90 95       	com	r25
 8ae:	8e 0f       	add	r24, r30
 8b0:	9f 1f       	adc	r25, r31
 8b2:	08 95       	ret

000008b4 <strnlen>:
 8b4:	fc 01       	movw	r30, r24
 8b6:	61 50       	subi	r22, 0x01	; 1
 8b8:	70 40       	sbci	r23, 0x00	; 0
 8ba:	01 90       	ld	r0, Z+
 8bc:	01 10       	cpse	r0, r1
 8be:	d8 f7       	brcc	.-10     	; 0x8b6 <strnlen+0x2>
 8c0:	80 95       	com	r24
 8c2:	90 95       	com	r25
 8c4:	8e 0f       	add	r24, r30
 8c6:	9f 1f       	adc	r25, r31
 8c8:	08 95       	ret

000008ca <fputc>:
 8ca:	0f 93       	push	r16
 8cc:	1f 93       	push	r17
 8ce:	cf 93       	push	r28
 8d0:	df 93       	push	r29
 8d2:	18 2f       	mov	r17, r24
 8d4:	09 2f       	mov	r16, r25
 8d6:	eb 01       	movw	r28, r22
 8d8:	8b 81       	ldd	r24, Y+3	; 0x03
 8da:	81 fd       	sbrc	r24, 1
 8dc:	03 c0       	rjmp	.+6      	; 0x8e4 <fputc+0x1a>
 8de:	8f ef       	ldi	r24, 0xFF	; 255
 8e0:	9f ef       	ldi	r25, 0xFF	; 255
 8e2:	20 c0       	rjmp	.+64     	; 0x924 <fputc+0x5a>
 8e4:	82 ff       	sbrs	r24, 2
 8e6:	10 c0       	rjmp	.+32     	; 0x908 <fputc+0x3e>
 8e8:	4e 81       	ldd	r20, Y+6	; 0x06
 8ea:	5f 81       	ldd	r21, Y+7	; 0x07
 8ec:	2c 81       	ldd	r18, Y+4	; 0x04
 8ee:	3d 81       	ldd	r19, Y+5	; 0x05
 8f0:	42 17       	cp	r20, r18
 8f2:	53 07       	cpc	r21, r19
 8f4:	7c f4       	brge	.+30     	; 0x914 <fputc+0x4a>
 8f6:	e8 81       	ld	r30, Y
 8f8:	f9 81       	ldd	r31, Y+1	; 0x01
 8fa:	9f 01       	movw	r18, r30
 8fc:	2f 5f       	subi	r18, 0xFF	; 255
 8fe:	3f 4f       	sbci	r19, 0xFF	; 255
 900:	39 83       	std	Y+1, r19	; 0x01
 902:	28 83       	st	Y, r18
 904:	10 83       	st	Z, r17
 906:	06 c0       	rjmp	.+12     	; 0x914 <fputc+0x4a>
 908:	e8 85       	ldd	r30, Y+8	; 0x08
 90a:	f9 85       	ldd	r31, Y+9	; 0x09
 90c:	81 2f       	mov	r24, r17
 90e:	09 95       	icall
 910:	89 2b       	or	r24, r25
 912:	29 f7       	brne	.-54     	; 0x8de <fputc+0x14>
 914:	2e 81       	ldd	r18, Y+6	; 0x06
 916:	3f 81       	ldd	r19, Y+7	; 0x07
 918:	2f 5f       	subi	r18, 0xFF	; 255
 91a:	3f 4f       	sbci	r19, 0xFF	; 255
 91c:	3f 83       	std	Y+7, r19	; 0x07
 91e:	2e 83       	std	Y+6, r18	; 0x06
 920:	81 2f       	mov	r24, r17
 922:	90 2f       	mov	r25, r16
 924:	df 91       	pop	r29
 926:	cf 91       	pop	r28
 928:	1f 91       	pop	r17
 92a:	0f 91       	pop	r16
 92c:	08 95       	ret

0000092e <__ultoa_invert>:
 92e:	fa 01       	movw	r30, r20
 930:	aa 27       	eor	r26, r26
 932:	28 30       	cpi	r18, 0x08	; 8
 934:	51 f1       	breq	.+84     	; 0x98a <__ultoa_invert+0x5c>
 936:	20 31       	cpi	r18, 0x10	; 16
 938:	81 f1       	breq	.+96     	; 0x99a <__ultoa_invert+0x6c>
 93a:	e8 94       	clt
 93c:	6f 93       	push	r22
 93e:	6e 7f       	andi	r22, 0xFE	; 254
 940:	6e 5f       	subi	r22, 0xFE	; 254
 942:	7f 4f       	sbci	r23, 0xFF	; 255
 944:	8f 4f       	sbci	r24, 0xFF	; 255
 946:	9f 4f       	sbci	r25, 0xFF	; 255
 948:	af 4f       	sbci	r26, 0xFF	; 255
 94a:	b1 e0       	ldi	r27, 0x01	; 1
 94c:	3e d0       	rcall	.+124    	; 0x9ca <__ultoa_invert+0x9c>
 94e:	b4 e0       	ldi	r27, 0x04	; 4
 950:	3c d0       	rcall	.+120    	; 0x9ca <__ultoa_invert+0x9c>
 952:	67 0f       	add	r22, r23
 954:	78 1f       	adc	r23, r24
 956:	89 1f       	adc	r24, r25
 958:	9a 1f       	adc	r25, r26
 95a:	a1 1d       	adc	r26, r1
 95c:	68 0f       	add	r22, r24
 95e:	79 1f       	adc	r23, r25
 960:	8a 1f       	adc	r24, r26
 962:	91 1d       	adc	r25, r1
 964:	a1 1d       	adc	r26, r1
 966:	6a 0f       	add	r22, r26
 968:	71 1d       	adc	r23, r1
 96a:	81 1d       	adc	r24, r1
 96c:	91 1d       	adc	r25, r1
 96e:	a1 1d       	adc	r26, r1
 970:	20 d0       	rcall	.+64     	; 0x9b2 <__ultoa_invert+0x84>
 972:	09 f4       	brne	.+2      	; 0x976 <__ultoa_invert+0x48>
 974:	68 94       	set
 976:	3f 91       	pop	r19
 978:	2a e0       	ldi	r18, 0x0A	; 10
 97a:	26 9f       	mul	r18, r22
 97c:	11 24       	eor	r1, r1
 97e:	30 19       	sub	r19, r0
 980:	30 5d       	subi	r19, 0xD0	; 208
 982:	31 93       	st	Z+, r19
 984:	de f6       	brtc	.-74     	; 0x93c <__ultoa_invert+0xe>
 986:	cf 01       	movw	r24, r30
 988:	08 95       	ret
 98a:	46 2f       	mov	r20, r22
 98c:	47 70       	andi	r20, 0x07	; 7
 98e:	40 5d       	subi	r20, 0xD0	; 208
 990:	41 93       	st	Z+, r20
 992:	b3 e0       	ldi	r27, 0x03	; 3
 994:	0f d0       	rcall	.+30     	; 0x9b4 <__ultoa_invert+0x86>
 996:	c9 f7       	brne	.-14     	; 0x98a <__ultoa_invert+0x5c>
 998:	f6 cf       	rjmp	.-20     	; 0x986 <__ultoa_invert+0x58>
 99a:	46 2f       	mov	r20, r22
 99c:	4f 70       	andi	r20, 0x0F	; 15
 99e:	40 5d       	subi	r20, 0xD0	; 208
 9a0:	4a 33       	cpi	r20, 0x3A	; 58
 9a2:	18 f0       	brcs	.+6      	; 0x9aa <__ultoa_invert+0x7c>
 9a4:	49 5d       	subi	r20, 0xD9	; 217
 9a6:	31 fd       	sbrc	r19, 1
 9a8:	40 52       	subi	r20, 0x20	; 32
 9aa:	41 93       	st	Z+, r20
 9ac:	02 d0       	rcall	.+4      	; 0x9b2 <__ultoa_invert+0x84>
 9ae:	a9 f7       	brne	.-22     	; 0x99a <__ultoa_invert+0x6c>
 9b0:	ea cf       	rjmp	.-44     	; 0x986 <__ultoa_invert+0x58>
 9b2:	b4 e0       	ldi	r27, 0x04	; 4
 9b4:	a6 95       	lsr	r26
 9b6:	97 95       	ror	r25
 9b8:	87 95       	ror	r24
 9ba:	77 95       	ror	r23
 9bc:	67 95       	ror	r22
 9be:	ba 95       	dec	r27
 9c0:	c9 f7       	brne	.-14     	; 0x9b4 <__ultoa_invert+0x86>
 9c2:	00 97       	sbiw	r24, 0x00	; 0
 9c4:	61 05       	cpc	r22, r1
 9c6:	71 05       	cpc	r23, r1
 9c8:	08 95       	ret
 9ca:	9b 01       	movw	r18, r22
 9cc:	ac 01       	movw	r20, r24
 9ce:	0a 2e       	mov	r0, r26
 9d0:	06 94       	lsr	r0
 9d2:	57 95       	ror	r21
 9d4:	47 95       	ror	r20
 9d6:	37 95       	ror	r19
 9d8:	27 95       	ror	r18
 9da:	ba 95       	dec	r27
 9dc:	c9 f7       	brne	.-14     	; 0x9d0 <__ultoa_invert+0xa2>
 9de:	62 0f       	add	r22, r18
 9e0:	73 1f       	adc	r23, r19
 9e2:	84 1f       	adc	r24, r20
 9e4:	95 1f       	adc	r25, r21
 9e6:	a0 1d       	adc	r26, r0
 9e8:	08 95       	ret

000009ea <_exit>:
 9ea:	f8 94       	cli

000009ec <__stop_program>:
 9ec:	ff cf       	rjmp	.-2      	; 0x9ec <__stop_program>
